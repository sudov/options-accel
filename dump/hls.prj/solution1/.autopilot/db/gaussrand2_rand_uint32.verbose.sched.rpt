

================================================================
== Vivado HLS Report for 'gaussrand2_rand_uint32'
================================================================
* Date:           Mon Dec  8 18:02:54 2014

* Version:        2014.2 (Build 932637 on Wed Jun 11 12:38:34 PM 2014)
* Project:        hls.prj
* Solution:       solution1
* Product family: zynq zynq_fpv6 
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |  10.00|      7.52|        1.25|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |    2|    2|    1|    1| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 3
* Pipeline: 1
  Pipeline-0: II = 1, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
* FSM state operations: 

 <State 1>: 5.61ns
ST_1: kk_p1_load [1/1] 0.00ns
:6  %kk_p1_load = load i16* @kk_p1, align 2

ST_1: tmp_5 [1/1] 0.00ns
:7  %tmp_5 = zext i16 %kk_p1_load to i64

ST_1: mt_kkp1_addr [1/1] 0.00ns
:8  %mt_kkp1_addr = getelementptr inbounds [624 x i64]* @mt_kkp1, i64 0, i64 %tmp_5

ST_1: mt_kkp1_load [2/2] 2.39ns
:9  %mt_kkp1_load = load i64* %mt_kkp1_addr, align 8

ST_1: a_assign_2 [1/1] 1.96ns
:29  %a_assign_2 = add i16 %kk_p1_load, 1

ST_1: tmp_i1 [1/1] 2.28ns
:30  %tmp_i1 = icmp ugt i16 %a_assign_2, 623

ST_1: tmp_2_i [1/1] 1.96ns
:31  %tmp_2_i = add i16 %kk_p1_load, -623

ST_1: a_assign_3 [1/1] 1.37ns
:32  %a_assign_3 = select i1 %tmp_i1, i16 %tmp_2_i, i16 %a_assign_2

ST_1: stg_12 [1/1] 0.00ns
:33  store i16 %a_assign_3, i16* @kk_p1, align 2


 <State 2>: 5.61ns
ST_2: kk_load [1/1] 0.00ns
:1  %kk_load = load i16* @kk, align 2

ST_2: tmp [1/1] 0.00ns
:2  %tmp = zext i16 %kk_load to i64

ST_2: mt_kk_addr [1/1] 0.00ns
:3  %mt_kk_addr = getelementptr inbounds [624 x i64]* @mt_kk, i64 0, i64 %tmp

ST_2: mt_kk_load [2/2] 2.39ns
:4  %mt_kk_load = load i64* %mt_kk_addr, align 8

ST_2: mt_kkp1_load [1/2] 2.39ns
:9  %mt_kkp1_load = load i64* %mt_kkp1_addr, align 8

ST_2: tmp_3 [1/1] 0.00ns
:10  %tmp_3 = trunc i64 %mt_kkp1_load to i1

ST_2: kk_pm_load [1/1] 0.00ns
:12  %kk_pm_load = load i16* @kk_pm, align 2

ST_2: tmp_9 [1/1] 0.00ns
:13  %tmp_9 = zext i16 %kk_pm_load to i64

ST_2: mt_kkpm_addr [1/1] 0.00ns
:14  %mt_kkpm_addr = getelementptr inbounds [624 x i64]* @mt_kkpm, i64 0, i64 %tmp_9

ST_2: mt_kkpm_load [2/2] 2.39ns
:15  %mt_kkpm_load = load i64* %mt_kkpm_addr, align 8

ST_2: tmp_2 [1/1] 0.00ns
:16  %tmp_2 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %mt_kkp1_load, i32 1, i32 30)

ST_2: a_assign [1/1] 1.96ns
:24  %a_assign = add i16 %kk_load, 1

ST_2: tmp_i [1/1] 2.28ns
:25  %tmp_i = icmp ugt i16 %a_assign, 623

ST_2: tmp_1_i [1/1] 1.96ns
:26  %tmp_1_i = add i16 %kk_load, -623

ST_2: a_assign_1 [1/1] 1.37ns
:27  %a_assign_1 = select i1 %tmp_i, i16 %tmp_1_i, i16 %a_assign

ST_2: stg_28 [1/1] 0.00ns
:28  store i16 %a_assign_1, i16* @kk, align 2

ST_2: a_assign_4 [1/1] 1.96ns
:34  %a_assign_4 = add i16 %kk_pm_load, 1

ST_2: tmp_i3 [1/1] 2.28ns
:35  %tmp_i3 = icmp ugt i16 %a_assign_4, 623

ST_2: tmp_3_i [1/1] 1.96ns
:36  %tmp_3_i = add i16 %kk_pm_load, -623

ST_2: a_assign_5 [1/1] 1.37ns
:37  %a_assign_5 = select i1 %tmp_i3, i16 %tmp_3_i, i16 %a_assign_4

ST_2: stg_33 [1/1] 0.00ns
:38  store i16 %a_assign_5, i16* @kk_pm, align 2


 <State 3>: 7.52ns
ST_3: stg_34 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_3: mt_kk_load [1/2] 2.39ns
:4  %mt_kk_load = load i64* %mt_kk_addr, align 8

ST_3: tmp_1 [1/1] 0.00ns
:5  %tmp_1 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %mt_kk_load, i32 31)

ST_3: mag01_cast_cast [1/1] 1.37ns
:11  %mag01_cast_cast = select i1 %tmp_3, i64 2567483615, i64 0

ST_3: mt_kkpm_load [1/2] 2.39ns
:15  %mt_kkpm_load = load i64* %mt_kkpm_addr, align 8

ST_3: tmp_s [1/1] 0.00ns
:17  %tmp_s = call i31 @_ssdm_op_BitConcatenate.i31.i1.i30(i1 %tmp_1, i30 %tmp_2)

ST_3: tmp_cast [1/1] 0.00ns
:18  %tmp_cast = zext i31 %tmp_s to i64

ST_3: tmp1 [1/1] 1.37ns
:19  %tmp1 = xor i64 %mag01_cast_cast, %mt_kkpm_load

ST_3: mt_kk_new [1/1] 1.37ns
:20  %mt_kk_new = xor i64 %tmp1, %tmp_cast

ST_3: stg_43 [1/1] 2.39ns
:21  store i64 %mt_kk_new, i64* %mt_kk_addr, align 8

ST_3: stg_44 [1/1] 2.39ns
:22  store i64 %mt_kk_new, i64* %mt_kkp1_addr, align 8

ST_3: stg_45 [1/1] 2.39ns
:23  store i64 %mt_kk_new, i64* %mt_kkpm_addr, align 8

ST_3: stg_46 [1/1] 0.00ns
:39  ret void



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
