// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.2
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "gaussrand2.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic gaussrand2::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic gaussrand2::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> gaussrand2::ap_ST_pp0_stg0_fsm_0 = "1110";
const sc_lv<4> gaussrand2::ap_ST_pp0_stg1_fsm_1 = "0000";
const sc_lv<4> gaussrand2::ap_ST_pp0_stg2_fsm_2 = "1";
const sc_lv<4> gaussrand2::ap_ST_pp0_stg3_fsm_3 = "11";
const sc_lv<4> gaussrand2::ap_ST_pp0_stg4_fsm_4 = "10";
const sc_lv<4> gaussrand2::ap_ST_pp0_stg5_fsm_5 = "110";
const sc_lv<4> gaussrand2::ap_ST_pp0_stg6_fsm_6 = "111";
const sc_lv<4> gaussrand2::ap_ST_pp0_stg7_fsm_7 = "101";
const sc_lv<4> gaussrand2::ap_ST_pp0_stg8_fsm_8 = "100";
const sc_lv<4> gaussrand2::ap_ST_pp0_stg9_fsm_9 = "1100";
const sc_lv<4> gaussrand2::ap_ST_pp0_stg10_fsm_10 = "1101";
const sc_lv<4> gaussrand2::ap_ST_pp0_stg11_fsm_11 = "1111";
const sc_lv<1> gaussrand2::ap_const_lv1_0 = "0";
const sc_lv<64> gaussrand2::ap_const_lv64_BFEAA449A0000000 = "1011111111101010101001000100100110100000000000000000000000000000";
const sc_lv<64> gaussrand2::ap_const_lv64_3FE0000000000000 = "11111111100000000000000000000000000000000000000000000000000000";
const sc_lv<64> gaussrand2::ap_const_lv64_BFE0000000000000 = "1011111111100000000000000000000000000000000000000000000000000000";
const sc_lv<64> gaussrand2::ap_const_lv64_C000000000000000 = "1100000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> gaussrand2::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> gaussrand2::ap_const_lv32_1 = "1";
const sc_lv<64> gaussrand2::ap_const_lv64_1 = "1";

gaussrand2::gaussrand2(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_gaussrand2_rand_uint32_fu_119 = new gaussrand2_rand_uint32("grp_gaussrand2_rand_uint32_fu_119");
    grp_gaussrand2_rand_uint32_fu_119->ap_clk(ap_clk);
    grp_gaussrand2_rand_uint32_fu_119->ap_rst(ap_rst);
    grp_gaussrand2_rand_uint32_fu_119->ap_start(grp_gaussrand2_rand_uint32_fu_119_ap_start);
    grp_gaussrand2_rand_uint32_fu_119->ap_done(grp_gaussrand2_rand_uint32_fu_119_ap_done);
    grp_gaussrand2_rand_uint32_fu_119->ap_idle(grp_gaussrand2_rand_uint32_fu_119_ap_idle);
    grp_gaussrand2_rand_uint32_fu_119->ap_ready(grp_gaussrand2_rand_uint32_fu_119_ap_ready);
    grp_gaussrand2_rand_uint32_fu_119->ap_ce(grp_gaussrand2_rand_uint32_fu_119_ap_ce);
    gaussrand2_fptrunc_64ns_32_3_U2 = new gaussrand2_fptrunc_64ns_32_3<2,3,64,32>("gaussrand2_fptrunc_64ns_32_3_U2");
    gaussrand2_fptrunc_64ns_32_3_U2->clk(ap_clk);
    gaussrand2_fptrunc_64ns_32_3_U2->reset(ap_rst);
    gaussrand2_fptrunc_64ns_32_3_U2->din0(grp_fu_135_p0);
    gaussrand2_fptrunc_64ns_32_3_U2->ce(grp_fu_135_ce);
    gaussrand2_fptrunc_64ns_32_3_U2->dout(grp_fu_135_p1);
    gaussrand2_fpext_32ns_64_3_U3 = new gaussrand2_fpext_32ns_64_3<3,3,32,64>("gaussrand2_fpext_32ns_64_3_U3");
    gaussrand2_fpext_32ns_64_3_U3->clk(ap_clk);
    gaussrand2_fpext_32ns_64_3_U3->reset(ap_rst);
    gaussrand2_fpext_32ns_64_3_U3->din0(grp_fu_139_p0);
    gaussrand2_fpext_32ns_64_3_U3->ce(grp_fu_139_ce);
    gaussrand2_fpext_32ns_64_3_U3->dout(grp_fu_139_p1);
    gaussrand2_fsqrt_32ns_32ns_32_12_U4 = new gaussrand2_fsqrt_32ns_32ns_32_12<4,12,32,32,32>("gaussrand2_fsqrt_32ns_32ns_32_12_U4");
    gaussrand2_fsqrt_32ns_32ns_32_12_U4->clk(ap_clk);
    gaussrand2_fsqrt_32ns_32ns_32_12_U4->reset(ap_rst);
    gaussrand2_fsqrt_32ns_32ns_32_12_U4->din0(grp_fu_142_p0);
    gaussrand2_fsqrt_32ns_32ns_32_12_U4->din1(grp_fu_142_p1);
    gaussrand2_fsqrt_32ns_32ns_32_12_U4->ce(grp_fu_142_ce);
    gaussrand2_fsqrt_32ns_32ns_32_12_U4->dout(grp_fu_142_p2);
    gaussrand2_flog_32ns_32ns_32_13_full_dsp_U5 = new gaussrand2_flog_32ns_32ns_32_13_full_dsp<5,13,32,32,32>("gaussrand2_flog_32ns_32ns_32_13_full_dsp_U5");
    gaussrand2_flog_32ns_32ns_32_13_full_dsp_U5->clk(ap_clk);
    gaussrand2_flog_32ns_32ns_32_13_full_dsp_U5->reset(ap_rst);
    gaussrand2_flog_32ns_32ns_32_13_full_dsp_U5->din0(grp_fu_147_p0);
    gaussrand2_flog_32ns_32ns_32_13_full_dsp_U5->din1(grp_fu_147_p1);
    gaussrand2_flog_32ns_32ns_32_13_full_dsp_U5->ce(grp_fu_147_ce);
    gaussrand2_flog_32ns_32ns_32_13_full_dsp_U5->dout(grp_fu_147_p2);
    gaussrand2_dmul_64ns_64ns_64_6_max_dsp_U6 = new gaussrand2_dmul_64ns_64ns_64_6_max_dsp<6,6,64,64,64>("gaussrand2_dmul_64ns_64ns_64_6_max_dsp_U6");
    gaussrand2_dmul_64ns_64ns_64_6_max_dsp_U6->clk(ap_clk);
    gaussrand2_dmul_64ns_64ns_64_6_max_dsp_U6->reset(ap_rst);
    gaussrand2_dmul_64ns_64ns_64_6_max_dsp_U6->din0(grp_fu_152_p0);
    gaussrand2_dmul_64ns_64ns_64_6_max_dsp_U6->din1(grp_fu_152_p1);
    gaussrand2_dmul_64ns_64ns_64_6_max_dsp_U6->ce(grp_fu_152_ce);
    gaussrand2_dmul_64ns_64ns_64_6_max_dsp_U6->dout(grp_fu_152_p2);
    gaussrand2_ddiv_64ns_64ns_64_31_U7 = new gaussrand2_ddiv_64ns_64ns_64_31<7,31,64,64,64>("gaussrand2_ddiv_64ns_64ns_64_31_U7");
    gaussrand2_ddiv_64ns_64ns_64_31_U7->clk(ap_clk);
    gaussrand2_ddiv_64ns_64ns_64_31_U7->reset(ap_rst);
    gaussrand2_ddiv_64ns_64ns_64_31_U7->din0(grp_fu_157_p0);
    gaussrand2_ddiv_64ns_64ns_64_31_U7->din1(grp_fu_157_p1);
    gaussrand2_ddiv_64ns_64ns_64_31_U7->ce(grp_fu_157_ce);
    gaussrand2_ddiv_64ns_64ns_64_31_U7->dout(grp_fu_157_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_X2_phi_fu_111_p4);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it6 );
    sensitive << ( ap_reg_ppstg_tmp_reg_174_pp0_it6 );
    sensitive << ( X_reg_229 );
    sensitive << ( ap_reg_phiprechg_X2_reg_107pp0_it6 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it6 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );
    sensitive << ( ap_reg_ppiten_pp0_it4 );
    sensitive << ( ap_reg_ppiten_pp0_it5 );
    sensitive << ( ap_reg_ppiten_pp0_it6 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );

    SC_METHOD(thread_ap_reg_phiprechg_X2_reg_107pp0_it5);

    SC_METHOD(thread_ap_reg_ppiten_pp0_it0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0_preg );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it6 );
    sensitive << ( X2_phi_fu_111_p4 );

    SC_METHOD(thread_ap_sig_pprstidle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );
    sensitive << ( ap_reg_ppiten_pp0_it4 );
    sensitive << ( ap_reg_ppiten_pp0_it5 );

    SC_METHOD(thread_gaussrand_state_S_o);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( gaussrand_state_S_i );
    sensitive << ( tmp_reg_174 );

    SC_METHOD(thread_gaussrand_state_S_o_ap_lwr);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );

    SC_METHOD(thread_gaussrand_state_S_o_ap_vld);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( tmp_reg_174 );

    SC_METHOD(thread_gaussrand_state_V1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it6 );
    sensitive << ( ap_reg_ppstg_tmp_reg_174_pp0_it6 );

    SC_METHOD(thread_gaussrand_state_V1_ap_vld);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it6 );
    sensitive << ( ap_reg_ppstg_tmp_reg_174_pp0_it6 );

    SC_METHOD(thread_gaussrand_state_V2_o);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( gaussrand_state_V2_i );
    sensitive << ( tmp_reg_174 );

    SC_METHOD(thread_gaussrand_state_V2_o_ap_lwr);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );

    SC_METHOD(thread_gaussrand_state_V2_o_ap_vld);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( tmp_reg_174 );

    SC_METHOD(thread_gaussrand_state_phase_o);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( gaussrand_state_phase_i );

    SC_METHOD(thread_gaussrand_state_phase_o_ap_lwr);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );

    SC_METHOD(thread_gaussrand_state_phase_o_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );

    SC_METHOD(thread_grp_fu_135_ce);

    SC_METHOD(thread_grp_fu_135_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it4 );
    sensitive << ( gaussrand_state_S_i );
    sensitive << ( tmp_7_reg_209 );

    SC_METHOD(thread_grp_fu_139_ce);

    SC_METHOD(thread_grp_fu_139_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it5 );
    sensitive << ( tmp_4_reg_194 );
    sensitive << ( tmp_9_reg_219 );

    SC_METHOD(thread_grp_fu_142_ce);

    SC_METHOD(thread_grp_fu_142_p0);

    SC_METHOD(thread_grp_fu_142_p1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it4 );
    sensitive << ( tmp_8_reg_214 );

    SC_METHOD(thread_grp_fu_147_ce);

    SC_METHOD(thread_grp_fu_147_p0);

    SC_METHOD(thread_grp_fu_147_p1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( tmp_s_reg_184 );

    SC_METHOD(thread_grp_fu_152_ce);

    SC_METHOD(thread_grp_fu_152_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it6 );
    sensitive << ( ap_reg_ppstg_V2_reg_189_pp0_it5 );
    sensitive << ( tmp_5_reg_199 );

    SC_METHOD(thread_grp_fu_152_p1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it6 );
    sensitive << ( tmp_1_reg_224 );

    SC_METHOD(thread_grp_fu_157_ce);

    SC_METHOD(thread_grp_fu_157_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( tmp_6_reg_204 );

    SC_METHOD(thread_grp_fu_157_p1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_reg_ppstg_S_reg_178_pp0_it2 );

    SC_METHOD(thread_grp_gaussrand2_rand_uint32_fu_119_ap_ce);

    SC_METHOD(thread_grp_gaussrand2_rand_uint32_fu_119_ap_start);
    sensitive << ( grp_gaussrand2_rand_uint32_fu_119_ap_start_ap_start_reg );

    SC_METHOD(thread_tmp_fu_161_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( gaussrand_state_phase_i );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );
    sensitive << ( ap_reg_ppiten_pp0_it4 );
    sensitive << ( ap_reg_ppiten_pp0_it5 );
    sensitive << ( ap_reg_ppiten_pp0_it6 );
    sensitive << ( ap_sig_pprstidle_pp0 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "1110";
    ap_reg_ppiten_pp0_it1 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it2 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it3 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it4 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it5 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it6 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it0_preg = SC_LOGIC_0;
    grp_gaussrand2_rand_uint32_fu_119_ap_start_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "gaussrand2_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, gaussrand_state_V1, "(port)gaussrand_state_V1");
    sc_trace(mVcdFile, gaussrand_state_V1_ap_vld, "(port)gaussrand_state_V1_ap_vld");
    sc_trace(mVcdFile, gaussrand_state_V2_i, "(port)gaussrand_state_V2_i");
    sc_trace(mVcdFile, gaussrand_state_V2_o, "(port)gaussrand_state_V2_o");
    sc_trace(mVcdFile, gaussrand_state_V2_o_ap_vld, "(port)gaussrand_state_V2_o_ap_vld");
    sc_trace(mVcdFile, gaussrand_state_S_i, "(port)gaussrand_state_S_i");
    sc_trace(mVcdFile, gaussrand_state_S_o, "(port)gaussrand_state_S_o");
    sc_trace(mVcdFile, gaussrand_state_S_o_ap_vld, "(port)gaussrand_state_S_o_ap_vld");
    sc_trace(mVcdFile, gaussrand_state_phase_i, "(port)gaussrand_state_phase_i");
    sc_trace(mVcdFile, gaussrand_state_phase_o, "(port)gaussrand_state_phase_o");
    sc_trace(mVcdFile, gaussrand_state_phase_o_ap_vld, "(port)gaussrand_state_phase_o_ap_vld");
    sc_trace(mVcdFile, gaussrand_state_V2_o_ap_lwr, "(port)gaussrand_state_V2_o_ap_lwr");
    sc_trace(mVcdFile, gaussrand_state_S_o_ap_lwr, "(port)gaussrand_state_S_o_ap_lwr");
    sc_trace(mVcdFile, gaussrand_state_phase_o_ap_lwr, "(port)gaussrand_state_phase_o_ap_lwr");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it0, "ap_reg_ppiten_pp0_it0");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it1, "ap_reg_ppiten_pp0_it1");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it2, "ap_reg_ppiten_pp0_it2");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it3, "ap_reg_ppiten_pp0_it3");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it4, "ap_reg_ppiten_pp0_it4");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it5, "ap_reg_ppiten_pp0_it5");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it6, "ap_reg_ppiten_pp0_it6");
    sc_trace(mVcdFile, tmp_fu_161_p2, "tmp_fu_161_p2");
    sc_trace(mVcdFile, tmp_reg_174, "tmp_reg_174");
    sc_trace(mVcdFile, ap_reg_ppstg_tmp_reg_174_pp0_it1, "ap_reg_ppstg_tmp_reg_174_pp0_it1");
    sc_trace(mVcdFile, ap_reg_ppstg_tmp_reg_174_pp0_it2, "ap_reg_ppstg_tmp_reg_174_pp0_it2");
    sc_trace(mVcdFile, ap_reg_ppstg_tmp_reg_174_pp0_it3, "ap_reg_ppstg_tmp_reg_174_pp0_it3");
    sc_trace(mVcdFile, ap_reg_ppstg_tmp_reg_174_pp0_it4, "ap_reg_ppstg_tmp_reg_174_pp0_it4");
    sc_trace(mVcdFile, ap_reg_ppstg_tmp_reg_174_pp0_it5, "ap_reg_ppstg_tmp_reg_174_pp0_it5");
    sc_trace(mVcdFile, ap_reg_ppstg_tmp_reg_174_pp0_it6, "ap_reg_ppstg_tmp_reg_174_pp0_it6");
    sc_trace(mVcdFile, S_reg_178, "S_reg_178");
    sc_trace(mVcdFile, ap_reg_ppstg_S_reg_178_pp0_it1, "ap_reg_ppstg_S_reg_178_pp0_it1");
    sc_trace(mVcdFile, ap_reg_ppstg_S_reg_178_pp0_it2, "ap_reg_ppstg_S_reg_178_pp0_it2");
    sc_trace(mVcdFile, grp_fu_135_p1, "grp_fu_135_p1");
    sc_trace(mVcdFile, tmp_s_reg_184, "tmp_s_reg_184");
    sc_trace(mVcdFile, V2_reg_189, "V2_reg_189");
    sc_trace(mVcdFile, ap_reg_ppstg_V2_reg_189_pp0_it1, "ap_reg_ppstg_V2_reg_189_pp0_it1");
    sc_trace(mVcdFile, ap_reg_ppstg_V2_reg_189_pp0_it2, "ap_reg_ppstg_V2_reg_189_pp0_it2");
    sc_trace(mVcdFile, ap_reg_ppstg_V2_reg_189_pp0_it3, "ap_reg_ppstg_V2_reg_189_pp0_it3");
    sc_trace(mVcdFile, ap_reg_ppstg_V2_reg_189_pp0_it4, "ap_reg_ppstg_V2_reg_189_pp0_it4");
    sc_trace(mVcdFile, ap_reg_ppstg_V2_reg_189_pp0_it5, "ap_reg_ppstg_V2_reg_189_pp0_it5");
    sc_trace(mVcdFile, grp_fu_147_p2, "grp_fu_147_p2");
    sc_trace(mVcdFile, tmp_4_reg_194, "tmp_4_reg_194");
    sc_trace(mVcdFile, grp_fu_139_p1, "grp_fu_139_p1");
    sc_trace(mVcdFile, tmp_5_reg_199, "tmp_5_reg_199");
    sc_trace(mVcdFile, grp_fu_152_p2, "grp_fu_152_p2");
    sc_trace(mVcdFile, tmp_6_reg_204, "tmp_6_reg_204");
    sc_trace(mVcdFile, grp_fu_157_p2, "grp_fu_157_p2");
    sc_trace(mVcdFile, tmp_7_reg_209, "tmp_7_reg_209");
    sc_trace(mVcdFile, tmp_8_reg_214, "tmp_8_reg_214");
    sc_trace(mVcdFile, grp_fu_142_p2, "grp_fu_142_p2");
    sc_trace(mVcdFile, tmp_9_reg_219, "tmp_9_reg_219");
    sc_trace(mVcdFile, tmp_1_reg_224, "tmp_1_reg_224");
    sc_trace(mVcdFile, X_reg_229, "X_reg_229");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it0_preg, "ap_reg_ppiten_pp0_it0_preg");
    sc_trace(mVcdFile, grp_gaussrand2_rand_uint32_fu_119_ap_start, "grp_gaussrand2_rand_uint32_fu_119_ap_start");
    sc_trace(mVcdFile, grp_gaussrand2_rand_uint32_fu_119_ap_done, "grp_gaussrand2_rand_uint32_fu_119_ap_done");
    sc_trace(mVcdFile, grp_gaussrand2_rand_uint32_fu_119_ap_idle, "grp_gaussrand2_rand_uint32_fu_119_ap_idle");
    sc_trace(mVcdFile, grp_gaussrand2_rand_uint32_fu_119_ap_ready, "grp_gaussrand2_rand_uint32_fu_119_ap_ready");
    sc_trace(mVcdFile, grp_gaussrand2_rand_uint32_fu_119_ap_ce, "grp_gaussrand2_rand_uint32_fu_119_ap_ce");
    sc_trace(mVcdFile, ap_reg_phiprechg_X2_reg_107pp0_it5, "ap_reg_phiprechg_X2_reg_107pp0_it5");
    sc_trace(mVcdFile, ap_reg_phiprechg_X2_reg_107pp0_it6, "ap_reg_phiprechg_X2_reg_107pp0_it6");
    sc_trace(mVcdFile, X2_phi_fu_111_p4, "X2_phi_fu_111_p4");
    sc_trace(mVcdFile, grp_gaussrand2_rand_uint32_fu_119_ap_start_ap_start_reg, "grp_gaussrand2_rand_uint32_fu_119_ap_start_ap_start_reg");
    sc_trace(mVcdFile, grp_fu_135_p0, "grp_fu_135_p0");
    sc_trace(mVcdFile, grp_fu_139_p0, "grp_fu_139_p0");
    sc_trace(mVcdFile, grp_fu_142_p1, "grp_fu_142_p1");
    sc_trace(mVcdFile, grp_fu_147_p1, "grp_fu_147_p1");
    sc_trace(mVcdFile, grp_fu_152_p0, "grp_fu_152_p0");
    sc_trace(mVcdFile, grp_fu_152_p1, "grp_fu_152_p1");
    sc_trace(mVcdFile, grp_fu_157_p0, "grp_fu_157_p0");
    sc_trace(mVcdFile, grp_fu_157_p1, "grp_fu_157_p1");
    sc_trace(mVcdFile, grp_fu_135_ce, "grp_fu_135_ce");
    sc_trace(mVcdFile, grp_fu_139_ce, "grp_fu_139_ce");
    sc_trace(mVcdFile, grp_fu_142_p0, "grp_fu_142_p0");
    sc_trace(mVcdFile, grp_fu_142_ce, "grp_fu_142_ce");
    sc_trace(mVcdFile, grp_fu_147_p0, "grp_fu_147_p0");
    sc_trace(mVcdFile, grp_fu_147_ce, "grp_fu_147_ce");
    sc_trace(mVcdFile, grp_fu_152_ce, "grp_fu_152_ce");
    sc_trace(mVcdFile, grp_fu_157_ce, "grp_fu_157_ce");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_sig_pprstidle_pp0, "ap_sig_pprstidle_pp0");
#endif

    }
    mHdltvinHandle.open("gaussrand2.hdltvin.dat");
    mHdltvoutHandle.open("gaussrand2.hdltvout.dat");
}

gaussrand2::~gaussrand2() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete grp_gaussrand2_rand_uint32_fu_119;
    delete gaussrand2_fptrunc_64ns_32_3_U2;
    delete gaussrand2_fpext_32ns_64_3_U3;
    delete gaussrand2_fsqrt_32ns_32ns_32_12_U4;
    delete gaussrand2_flog_32ns_32ns_32_13_full_dsp_U5;
    delete gaussrand2_dmul_64ns_64ns_64_6_max_dsp_U6;
    delete gaussrand2_ddiv_64ns_64ns_64_31_U7;
}

void gaussrand2::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_pp0_stg0_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it6.read()) && 
         esl_seteq<1,4,4>(ap_ST_pp0_stg7_fsm_7, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_reg_ppstg_tmp_reg_174_pp0_it6.read(), ap_const_lv1_0))) {
        ap_reg_phiprechg_X2_reg_107pp0_it6 = ap_const_lv64_BFEAA449A0000000;
    } else if ((esl_seteq<1,4,4>(ap_ST_pp0_stg11_fsm_11, ap_CS_fsm.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it5.read()))) {
        ap_reg_phiprechg_X2_reg_107pp0_it6 = ap_reg_phiprechg_X2_reg_107pp0_it5.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it0_preg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,4,4>(ap_ST_pp0_stg0_fsm_0, ap_CS_fsm.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)))) {
            ap_reg_ppiten_pp0_it0_preg = ap_start.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,4,4>(ap_ST_pp0_stg11_fsm_11, ap_CS_fsm.read())) {
            ap_reg_ppiten_pp0_it1 = ap_reg_ppiten_pp0_it0.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,4,4>(ap_ST_pp0_stg11_fsm_11, ap_CS_fsm.read())) {
            ap_reg_ppiten_pp0_it2 = ap_reg_ppiten_pp0_it1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,4,4>(ap_ST_pp0_stg11_fsm_11, ap_CS_fsm.read())) {
            ap_reg_ppiten_pp0_it3 = ap_reg_ppiten_pp0_it2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,4,4>(ap_ST_pp0_stg11_fsm_11, ap_CS_fsm.read())) {
            ap_reg_ppiten_pp0_it4 = ap_reg_ppiten_pp0_it3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,4,4>(ap_ST_pp0_stg11_fsm_11, ap_CS_fsm.read())) {
            ap_reg_ppiten_pp0_it5 = ap_reg_ppiten_pp0_it4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it6 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,4,4>(ap_ST_pp0_stg8_fsm_8, ap_CS_fsm.read()) && 
             !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it5.read()))) {
            ap_reg_ppiten_pp0_it6 = ap_const_logic_0;
        } else if (esl_seteq<1,4,4>(ap_ST_pp0_stg11_fsm_11, ap_CS_fsm.read())) {
            ap_reg_ppiten_pp0_it6 = ap_reg_ppiten_pp0_it5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_gaussrand2_rand_uint32_fu_119_ap_start_ap_start_reg = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,4,4>(ap_ST_pp0_stg0_fsm_0, ap_CS_fsm.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
              !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
              !esl_seteq<1,1,1>(tmp_fu_161_p2.read(), ap_const_lv1_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
              esl_seteq<1,4,4>(ap_ST_pp0_stg3_fsm_3, ap_CS_fsm.read()) && 
              !esl_seteq<1,1,1>(tmp_reg_174.read(), ap_const_lv1_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
              esl_seteq<1,4,4>(ap_ST_pp0_stg6_fsm_6, ap_CS_fsm.read()) && 
              !esl_seteq<1,1,1>(tmp_reg_174.read(), ap_const_lv1_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
              !esl_seteq<1,1,1>(tmp_reg_174.read(), ap_const_lv1_0) && 
              esl_seteq<1,4,4>(ap_ST_pp0_stg9_fsm_9, ap_CS_fsm.read())))) {
            grp_gaussrand2_rand_uint32_fu_119_ap_start_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_gaussrand2_rand_uint32_fu_119_ap_ready.read())) {
            grp_gaussrand2_rand_uint32_fu_119_ap_start_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,4,4>(ap_ST_pp0_stg0_fsm_0, ap_CS_fsm.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(tmp_fu_161_p2.read(), ap_const_lv1_0))) {
        S_reg_178 = gaussrand_state_S_i.read();
    }
    if ((esl_seteq<1,4,4>(ap_ST_pp0_stg11_fsm_11, ap_CS_fsm.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(tmp_reg_174.read(), ap_const_lv1_0))) {
        V2_reg_189 = gaussrand_state_V2_i.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it6.read()) && esl_seteq<1,4,4>(ap_ST_pp0_stg7_fsm_7, ap_CS_fsm.read()) && esl_seteq<1,1,1>(ap_reg_ppstg_tmp_reg_174_pp0_it6.read(), ap_const_lv1_0))) {
        X_reg_229 = grp_fu_152_p2.read();
    }
    if ((esl_seteq<1,4,4>(ap_ST_pp0_stg0_fsm_0, ap_CS_fsm.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)))) {
        ap_reg_ppstg_S_reg_178_pp0_it1 = S_reg_178.read();
        ap_reg_ppstg_S_reg_178_pp0_it2 = ap_reg_ppstg_S_reg_178_pp0_it1.read();
        ap_reg_ppstg_tmp_reg_174_pp0_it1 = tmp_reg_174.read();
        ap_reg_ppstg_tmp_reg_174_pp0_it2 = ap_reg_ppstg_tmp_reg_174_pp0_it1.read();
        ap_reg_ppstg_tmp_reg_174_pp0_it3 = ap_reg_ppstg_tmp_reg_174_pp0_it2.read();
        ap_reg_ppstg_tmp_reg_174_pp0_it4 = ap_reg_ppstg_tmp_reg_174_pp0_it3.read();
        ap_reg_ppstg_tmp_reg_174_pp0_it5 = ap_reg_ppstg_tmp_reg_174_pp0_it4.read();
        ap_reg_ppstg_tmp_reg_174_pp0_it6 = ap_reg_ppstg_tmp_reg_174_pp0_it5.read();
    }
    if (esl_seteq<1,4,4>(ap_ST_pp0_stg11_fsm_11, ap_CS_fsm.read())) {
        ap_reg_ppstg_V2_reg_189_pp0_it1 = V2_reg_189.read();
        ap_reg_ppstg_V2_reg_189_pp0_it2 = ap_reg_ppstg_V2_reg_189_pp0_it1.read();
        ap_reg_ppstg_V2_reg_189_pp0_it3 = ap_reg_ppstg_V2_reg_189_pp0_it2.read();
        ap_reg_ppstg_V2_reg_189_pp0_it4 = ap_reg_ppstg_V2_reg_189_pp0_it3.read();
        ap_reg_ppstg_V2_reg_189_pp0_it5 = ap_reg_ppstg_V2_reg_189_pp0_it4.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it6.read()) && esl_seteq<1,4,4>(ap_ST_pp0_stg1_fsm_1, ap_CS_fsm.read()) && esl_seteq<1,1,1>(ap_reg_ppstg_tmp_reg_174_pp0_it6.read(), ap_const_lv1_0))) {
        tmp_1_reg_224 = grp_fu_139_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && esl_seteq<1,4,4>(ap_ST_pp0_stg3_fsm_3, ap_CS_fsm.read()) && esl_seteq<1,1,1>(ap_reg_ppstg_tmp_reg_174_pp0_it1.read(), ap_const_lv1_0))) {
        tmp_4_reg_194 = grp_fu_147_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && esl_seteq<1,1,1>(ap_reg_ppstg_tmp_reg_174_pp0_it1.read(), ap_const_lv1_0) && esl_seteq<1,4,4>(ap_ST_pp0_stg6_fsm_6, ap_CS_fsm.read()))) {
        tmp_5_reg_199 = grp_fu_139_p1.read();
    }
    if ((esl_seteq<1,4,4>(ap_ST_pp0_stg0_fsm_0, ap_CS_fsm.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_reg_ppstg_tmp_reg_174_pp0_it1.read(), ap_const_lv1_0))) {
        tmp_6_reg_204 = grp_fu_152_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it4.read()) && esl_seteq<1,4,4>(ap_ST_pp0_stg7_fsm_7, ap_CS_fsm.read()) && esl_seteq<1,1,1>(ap_reg_ppstg_tmp_reg_174_pp0_it4.read(), ap_const_lv1_0))) {
        tmp_7_reg_209 = grp_fu_157_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it4.read()) && esl_seteq<1,1,1>(ap_reg_ppstg_tmp_reg_174_pp0_it4.read(), ap_const_lv1_0) && esl_seteq<1,4,4>(ap_ST_pp0_stg10_fsm_10, ap_CS_fsm.read()))) {
        tmp_8_reg_214 = grp_fu_135_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it5.read()) && esl_seteq<1,4,4>(ap_ST_pp0_stg10_fsm_10, ap_CS_fsm.read()) && esl_seteq<1,1,1>(ap_reg_ppstg_tmp_reg_174_pp0_it5.read(), ap_const_lv1_0))) {
        tmp_9_reg_219 = grp_fu_142_p2.read();
    }
    if ((esl_seteq<1,4,4>(ap_ST_pp0_stg0_fsm_0, ap_CS_fsm.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)))) {
        tmp_reg_174 = tmp_fu_161_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,4,4>(ap_ST_pp0_stg2_fsm_2, ap_CS_fsm.read()) && esl_seteq<1,1,1>(tmp_reg_174.read(), ap_const_lv1_0))) {
        tmp_s_reg_184 = grp_fu_135_p1.read();
    }
}

void gaussrand2::thread_X2_phi_fu_111_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it6.read()) && 
         esl_seteq<1,1,1>(ap_reg_ppstg_tmp_reg_174_pp0_it6.read(), ap_const_lv1_0) && 
         esl_seteq<1,4,4>(ap_ST_pp0_stg8_fsm_8, ap_CS_fsm.read()))) {
        X2_phi_fu_111_p4 = X_reg_229.read();
    } else {
        X2_phi_fu_111_p4 = ap_reg_phiprechg_X2_reg_107pp0_it6.read();
    }
}

void gaussrand2::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it6.read()) && 
         esl_seteq<1,4,4>(ap_ST_pp0_stg8_fsm_8, ap_CS_fsm.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void gaussrand2::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,4,4>(ap_ST_pp0_stg0_fsm_0, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it6.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void gaussrand2::thread_ap_ready() {
    if ((esl_seteq<1,4,4>(ap_ST_pp0_stg11_fsm_11, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void gaussrand2::thread_ap_reg_phiprechg_X2_reg_107pp0_it5() {
    ap_reg_phiprechg_X2_reg_107pp0_it5 = ap_const_lv64_1;
}

void gaussrand2::thread_ap_reg_ppiten_pp0_it0() {
    if (esl_seteq<1,4,4>(ap_ST_pp0_stg0_fsm_0, ap_CS_fsm.read())) {
        ap_reg_ppiten_pp0_it0 = ap_start.read();
    } else {
        ap_reg_ppiten_pp0_it0 = ap_reg_ppiten_pp0_it0_preg.read();
    }
}

void gaussrand2::thread_ap_return() {
    ap_return = X2_phi_fu_111_p4.read();
}

void gaussrand2::thread_ap_sig_pprstidle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()))) {
        ap_sig_pprstidle_pp0 = ap_const_logic_1;
    } else {
        ap_sig_pprstidle_pp0 = ap_const_logic_0;
    }
}

void gaussrand2::thread_gaussrand_state_S_o() {
    if ((esl_seteq<1,4,4>(ap_ST_pp0_stg11_fsm_11, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !esl_seteq<1,1,1>(tmp_reg_174.read(), ap_const_lv1_0))) {
        gaussrand_state_S_o = ap_const_lv64_3FE0000000000000;
    } else {
        gaussrand_state_S_o = gaussrand_state_S_i.read();
    }
}

void gaussrand2::thread_gaussrand_state_S_o_ap_lwr() {
    if ((esl_seteq<1,4,4>(ap_ST_pp0_stg11_fsm_11, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()))) {
        gaussrand_state_S_o_ap_lwr = ap_const_logic_1;
    } else {
        gaussrand_state_S_o_ap_lwr = ap_const_logic_0;
    }
}

void gaussrand2::thread_gaussrand_state_S_o_ap_vld() {
    if ((esl_seteq<1,4,4>(ap_ST_pp0_stg11_fsm_11, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !esl_seteq<1,1,1>(tmp_reg_174.read(), ap_const_lv1_0))) {
        gaussrand_state_S_o_ap_vld = ap_const_logic_1;
    } else {
        gaussrand_state_S_o_ap_vld = ap_const_logic_0;
    }
}

void gaussrand2::thread_gaussrand_state_V1() {
    gaussrand_state_V1 = ap_const_lv64_BFE0000000000000;
}

void gaussrand2::thread_gaussrand_state_V1_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it6.read()) && 
         esl_seteq<1,4,4>(ap_ST_pp0_stg8_fsm_8, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_reg_ppstg_tmp_reg_174_pp0_it6.read(), ap_const_lv1_0))) {
        gaussrand_state_V1_ap_vld = ap_const_logic_1;
    } else {
        gaussrand_state_V1_ap_vld = ap_const_logic_0;
    }
}

void gaussrand2::thread_gaussrand_state_V2_o() {
    if ((esl_seteq<1,4,4>(ap_ST_pp0_stg11_fsm_11, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !esl_seteq<1,1,1>(tmp_reg_174.read(), ap_const_lv1_0))) {
        gaussrand_state_V2_o = ap_const_lv64_3FE0000000000000;
    } else {
        gaussrand_state_V2_o = gaussrand_state_V2_i.read();
    }
}

void gaussrand2::thread_gaussrand_state_V2_o_ap_lwr() {
    if ((esl_seteq<1,4,4>(ap_ST_pp0_stg11_fsm_11, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()))) {
        gaussrand_state_V2_o_ap_lwr = ap_const_logic_1;
    } else {
        gaussrand_state_V2_o_ap_lwr = ap_const_logic_0;
    }
}

void gaussrand2::thread_gaussrand_state_V2_o_ap_vld() {
    if ((esl_seteq<1,4,4>(ap_ST_pp0_stg11_fsm_11, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !esl_seteq<1,1,1>(tmp_reg_174.read(), ap_const_lv1_0))) {
        gaussrand_state_V2_o_ap_vld = ap_const_logic_1;
    } else {
        gaussrand_state_V2_o_ap_vld = ap_const_logic_0;
    }
}

void gaussrand2::thread_gaussrand_state_phase_o() {
    gaussrand_state_phase_o = (!ap_const_lv32_1.is_01() || !gaussrand_state_phase_i.read().is_01())? sc_lv<32>(): (sc_bigint<32>(ap_const_lv32_1) - sc_biguint<32>(gaussrand_state_phase_i.read()));
}

void gaussrand2::thread_gaussrand_state_phase_o_ap_lwr() {
    if ((esl_seteq<1,4,4>(ap_ST_pp0_stg0_fsm_0, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)))) {
        gaussrand_state_phase_o_ap_lwr = ap_const_logic_1;
    } else {
        gaussrand_state_phase_o_ap_lwr = ap_const_logic_0;
    }
}

void gaussrand2::thread_gaussrand_state_phase_o_ap_vld() {
    if ((esl_seteq<1,4,4>(ap_ST_pp0_stg0_fsm_0, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)))) {
        gaussrand_state_phase_o_ap_vld = ap_const_logic_1;
    } else {
        gaussrand_state_phase_o_ap_vld = ap_const_logic_0;
    }
}

void gaussrand2::thread_grp_fu_135_ce() {
    grp_fu_135_ce = ap_const_logic_1;
}

void gaussrand2::thread_grp_fu_135_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it4.read()) && 
         esl_seteq<1,4,4>(ap_ST_pp0_stg8_fsm_8, ap_CS_fsm.read()))) {
        grp_fu_135_p0 = tmp_7_reg_209.read();
    } else if ((esl_seteq<1,4,4>(ap_ST_pp0_stg0_fsm_0, ap_CS_fsm.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()))) {
        grp_fu_135_p0 = gaussrand_state_S_i.read();
    } else {
        grp_fu_135_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void gaussrand2::thread_grp_fu_139_ce() {
    grp_fu_139_ce = ap_const_logic_1;
}

void gaussrand2::thread_grp_fu_139_p0() {
    if ((esl_seteq<1,4,4>(ap_ST_pp0_stg11_fsm_11, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it5.read()))) {
        grp_fu_139_p0 = tmp_9_reg_219.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
                esl_seteq<1,4,4>(ap_ST_pp0_stg4_fsm_4, ap_CS_fsm.read()))) {
        grp_fu_139_p0 = tmp_4_reg_194.read();
    } else {
        grp_fu_139_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void gaussrand2::thread_grp_fu_142_ce() {
    grp_fu_142_ce = ap_const_logic_1;
}

void gaussrand2::thread_grp_fu_142_p0() {
    grp_fu_142_p0 = ap_const_lv32_0;
}

void gaussrand2::thread_grp_fu_142_p1() {
    grp_fu_142_p1 = tmp_8_reg_214.read();
}

void gaussrand2::thread_grp_fu_147_ce() {
    grp_fu_147_ce = ap_const_logic_1;
}

void gaussrand2::thread_grp_fu_147_p0() {
    grp_fu_147_p0 = ap_const_lv32_0;
}

void gaussrand2::thread_grp_fu_147_p1() {
    grp_fu_147_p1 = tmp_s_reg_184.read();
}

void gaussrand2::thread_grp_fu_152_ce() {
    grp_fu_152_ce = ap_const_logic_1;
}

void gaussrand2::thread_grp_fu_152_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it6.read()) && 
         esl_seteq<1,4,4>(ap_ST_pp0_stg2_fsm_2, ap_CS_fsm.read()))) {
        grp_fu_152_p0 = ap_reg_ppstg_V2_reg_189_pp0_it5.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
                esl_seteq<1,4,4>(ap_ST_pp0_stg7_fsm_7, ap_CS_fsm.read()))) {
        grp_fu_152_p0 = tmp_5_reg_199.read();
    } else {
        grp_fu_152_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void gaussrand2::thread_grp_fu_152_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it6.read()) && 
         esl_seteq<1,4,4>(ap_ST_pp0_stg2_fsm_2, ap_CS_fsm.read()))) {
        grp_fu_152_p1 = tmp_1_reg_224.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
                esl_seteq<1,4,4>(ap_ST_pp0_stg7_fsm_7, ap_CS_fsm.read()))) {
        grp_fu_152_p1 = ap_const_lv64_C000000000000000;
    } else {
        grp_fu_152_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void gaussrand2::thread_grp_fu_157_ce() {
    grp_fu_157_ce = ap_const_logic_1;
}

void gaussrand2::thread_grp_fu_157_p0() {
    grp_fu_157_p0 = tmp_6_reg_204.read();
}

void gaussrand2::thread_grp_fu_157_p1() {
    grp_fu_157_p1 = ap_reg_ppstg_S_reg_178_pp0_it2.read();
}

void gaussrand2::thread_grp_gaussrand2_rand_uint32_fu_119_ap_ce() {
    grp_gaussrand2_rand_uint32_fu_119_ap_ce = ap_const_logic_1;
}

void gaussrand2::thread_grp_gaussrand2_rand_uint32_fu_119_ap_start() {
    grp_gaussrand2_rand_uint32_fu_119_ap_start = grp_gaussrand2_rand_uint32_fu_119_ap_start_ap_start_reg.read();
}

void gaussrand2::thread_tmp_fu_161_p2() {
    tmp_fu_161_p2 = (!gaussrand_state_phase_i.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(gaussrand_state_phase_i.read() == ap_const_lv32_0);
}

void gaussrand2::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 14 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it3.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it4.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it5.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it6.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read())))) {
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_0;
            }
            break;
        case 0 : 
            ap_NS_fsm = ap_ST_pp0_stg2_fsm_2;
            break;
        case 1 : 
            ap_NS_fsm = ap_ST_pp0_stg3_fsm_3;
            break;
        case 3 : 
            ap_NS_fsm = ap_ST_pp0_stg4_fsm_4;
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_pp0_stg5_fsm_5;
            break;
        case 6 : 
            ap_NS_fsm = ap_ST_pp0_stg6_fsm_6;
            break;
        case 7 : 
            ap_NS_fsm = ap_ST_pp0_stg7_fsm_7;
            break;
        case 5 : 
            ap_NS_fsm = ap_ST_pp0_stg8_fsm_8;
            break;
        case 4 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_pprstidle_pp0.read())) {
                ap_NS_fsm = ap_ST_pp0_stg9_fsm_9;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_0;
            }
            break;
        case 12 : 
            ap_NS_fsm = ap_ST_pp0_stg10_fsm_10;
            break;
        case 13 : 
            ap_NS_fsm = ap_ST_pp0_stg11_fsm_11;
            break;
        case 15 : 
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_0;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<4>) ("XXXX");
            break;
    }
}

void gaussrand2::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"gaussrand_state_V1\" :  \"" << gaussrand_state_V1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"gaussrand_state_V1_ap_vld\" :  \"" << gaussrand_state_V1_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"gaussrand_state_V2_i\" :  \"" << gaussrand_state_V2_i.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"gaussrand_state_V2_o\" :  \"" << gaussrand_state_V2_o.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"gaussrand_state_V2_o_ap_vld\" :  \"" << gaussrand_state_V2_o_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"gaussrand_state_S_i\" :  \"" << gaussrand_state_S_i.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"gaussrand_state_S_o\" :  \"" << gaussrand_state_S_o.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"gaussrand_state_S_o_ap_vld\" :  \"" << gaussrand_state_S_o_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"gaussrand_state_phase_i\" :  \"" << gaussrand_state_phase_i.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"gaussrand_state_phase_o\" :  \"" << gaussrand_state_phase_o.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"gaussrand_state_phase_o_ap_vld\" :  \"" << gaussrand_state_phase_o_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"gaussrand_state_V2_o_ap_lwr\" :  \"" << gaussrand_state_V2_o_ap_lwr.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"gaussrand_state_S_o_ap_lwr\" :  \"" << gaussrand_state_S_o_ap_lwr.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"gaussrand_state_phase_o_ap_lwr\" :  \"" << gaussrand_state_phase_o_ap_lwr.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_return\" :  \"" << ap_return.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

