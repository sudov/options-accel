// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.2
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _gaussrand2_HH_
#define _gaussrand2_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "gaussrand2_rand_uint32.h"
#include "gaussrand2_fptrunc_64ns_32_3.h"
#include "gaussrand2_fpext_32ns_64_3.h"
#include "gaussrand2_fsqrt_32ns_32ns_32_12.h"
#include "gaussrand2_flog_32ns_32ns_32_13_full_dsp.h"
#include "gaussrand2_dmul_64ns_64ns_64_6_max_dsp.h"
#include "gaussrand2_ddiv_64ns_64ns_64_31.h"

namespace ap_rtl {

struct gaussrand2 : public sc_module {
    // Port declarations 21
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<64> > gaussrand_state_V1;
    sc_out< sc_logic > gaussrand_state_V1_ap_vld;
    sc_in< sc_lv<64> > gaussrand_state_V2_i;
    sc_out< sc_lv<64> > gaussrand_state_V2_o;
    sc_out< sc_logic > gaussrand_state_V2_o_ap_vld;
    sc_in< sc_lv<64> > gaussrand_state_S_i;
    sc_out< sc_lv<64> > gaussrand_state_S_o;
    sc_out< sc_logic > gaussrand_state_S_o_ap_vld;
    sc_in< sc_lv<32> > gaussrand_state_phase_i;
    sc_out< sc_lv<32> > gaussrand_state_phase_o;
    sc_out< sc_logic > gaussrand_state_phase_o_ap_vld;
    sc_out< sc_logic > gaussrand_state_V2_o_ap_lwr;
    sc_out< sc_logic > gaussrand_state_S_o_ap_lwr;
    sc_out< sc_logic > gaussrand_state_phase_o_ap_lwr;
    sc_out< sc_lv<64> > ap_return;


    // Module declarations
    gaussrand2(sc_module_name name);
    SC_HAS_PROCESS(gaussrand2);

    ~gaussrand2();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    gaussrand2_rand_uint32* grp_gaussrand2_rand_uint32_fu_119;
    gaussrand2_fptrunc_64ns_32_3<2,3,64,32>* gaussrand2_fptrunc_64ns_32_3_U2;
    gaussrand2_fpext_32ns_64_3<3,3,32,64>* gaussrand2_fpext_32ns_64_3_U3;
    gaussrand2_fsqrt_32ns_32ns_32_12<4,12,32,32,32>* gaussrand2_fsqrt_32ns_32ns_32_12_U4;
    gaussrand2_flog_32ns_32ns_32_13_full_dsp<5,13,32,32,32>* gaussrand2_flog_32ns_32ns_32_13_full_dsp_U5;
    gaussrand2_dmul_64ns_64ns_64_6_max_dsp<6,6,64,64,64>* gaussrand2_dmul_64ns_64ns_64_6_max_dsp_U6;
    gaussrand2_ddiv_64ns_64ns_64_31<7,31,64,64,64>* gaussrand2_ddiv_64ns_64ns_64_31_U7;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it0;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it1;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it2;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it3;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it4;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it5;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it6;
    sc_signal< sc_lv<1> > tmp_fu_161_p2;
    sc_signal< sc_lv<1> > tmp_reg_174;
    sc_signal< sc_lv<1> > ap_reg_ppstg_tmp_reg_174_pp0_it1;
    sc_signal< sc_lv<1> > ap_reg_ppstg_tmp_reg_174_pp0_it2;
    sc_signal< sc_lv<1> > ap_reg_ppstg_tmp_reg_174_pp0_it3;
    sc_signal< sc_lv<1> > ap_reg_ppstg_tmp_reg_174_pp0_it4;
    sc_signal< sc_lv<1> > ap_reg_ppstg_tmp_reg_174_pp0_it5;
    sc_signal< sc_lv<1> > ap_reg_ppstg_tmp_reg_174_pp0_it6;
    sc_signal< sc_lv<64> > S_reg_178;
    sc_signal< sc_lv<64> > ap_reg_ppstg_S_reg_178_pp0_it1;
    sc_signal< sc_lv<64> > ap_reg_ppstg_S_reg_178_pp0_it2;
    sc_signal< sc_lv<32> > grp_fu_135_p1;
    sc_signal< sc_lv<32> > tmp_s_reg_184;
    sc_signal< sc_lv<64> > V2_reg_189;
    sc_signal< sc_lv<64> > ap_reg_ppstg_V2_reg_189_pp0_it1;
    sc_signal< sc_lv<64> > ap_reg_ppstg_V2_reg_189_pp0_it2;
    sc_signal< sc_lv<64> > ap_reg_ppstg_V2_reg_189_pp0_it3;
    sc_signal< sc_lv<64> > ap_reg_ppstg_V2_reg_189_pp0_it4;
    sc_signal< sc_lv<64> > ap_reg_ppstg_V2_reg_189_pp0_it5;
    sc_signal< sc_lv<32> > grp_fu_147_p2;
    sc_signal< sc_lv<32> > tmp_4_reg_194;
    sc_signal< sc_lv<64> > grp_fu_139_p1;
    sc_signal< sc_lv<64> > tmp_5_reg_199;
    sc_signal< sc_lv<64> > grp_fu_152_p2;
    sc_signal< sc_lv<64> > tmp_6_reg_204;
    sc_signal< sc_lv<64> > grp_fu_157_p2;
    sc_signal< sc_lv<64> > tmp_7_reg_209;
    sc_signal< sc_lv<32> > tmp_8_reg_214;
    sc_signal< sc_lv<32> > grp_fu_142_p2;
    sc_signal< sc_lv<32> > tmp_9_reg_219;
    sc_signal< sc_lv<64> > tmp_1_reg_224;
    sc_signal< sc_lv<64> > X_reg_229;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it0_preg;
    sc_signal< sc_logic > grp_gaussrand2_rand_uint32_fu_119_ap_start;
    sc_signal< sc_logic > grp_gaussrand2_rand_uint32_fu_119_ap_done;
    sc_signal< sc_logic > grp_gaussrand2_rand_uint32_fu_119_ap_idle;
    sc_signal< sc_logic > grp_gaussrand2_rand_uint32_fu_119_ap_ready;
    sc_signal< sc_logic > grp_gaussrand2_rand_uint32_fu_119_ap_ce;
    sc_signal< sc_lv<64> > ap_reg_phiprechg_X2_reg_107pp0_it5;
    sc_signal< sc_lv<64> > ap_reg_phiprechg_X2_reg_107pp0_it6;
    sc_signal< sc_lv<64> > X2_phi_fu_111_p4;
    sc_signal< sc_logic > grp_gaussrand2_rand_uint32_fu_119_ap_start_ap_start_reg;
    sc_signal< sc_lv<64> > grp_fu_135_p0;
    sc_signal< sc_lv<32> > grp_fu_139_p0;
    sc_signal< sc_lv<32> > grp_fu_142_p1;
    sc_signal< sc_lv<32> > grp_fu_147_p1;
    sc_signal< sc_lv<64> > grp_fu_152_p0;
    sc_signal< sc_lv<64> > grp_fu_152_p1;
    sc_signal< sc_lv<64> > grp_fu_157_p0;
    sc_signal< sc_lv<64> > grp_fu_157_p1;
    sc_signal< sc_logic > grp_fu_135_ce;
    sc_signal< sc_logic > grp_fu_139_ce;
    sc_signal< sc_lv<32> > grp_fu_142_p0;
    sc_signal< sc_logic > grp_fu_142_ce;
    sc_signal< sc_lv<32> > grp_fu_147_p0;
    sc_signal< sc_logic > grp_fu_147_ce;
    sc_signal< sc_logic > grp_fu_152_ce;
    sc_signal< sc_logic > grp_fu_157_ce;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_sig_pprstidle_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_pp0_stg0_fsm_0;
    static const sc_lv<4> ap_ST_pp0_stg1_fsm_1;
    static const sc_lv<4> ap_ST_pp0_stg2_fsm_2;
    static const sc_lv<4> ap_ST_pp0_stg3_fsm_3;
    static const sc_lv<4> ap_ST_pp0_stg4_fsm_4;
    static const sc_lv<4> ap_ST_pp0_stg5_fsm_5;
    static const sc_lv<4> ap_ST_pp0_stg6_fsm_6;
    static const sc_lv<4> ap_ST_pp0_stg7_fsm_7;
    static const sc_lv<4> ap_ST_pp0_stg8_fsm_8;
    static const sc_lv<4> ap_ST_pp0_stg9_fsm_9;
    static const sc_lv<4> ap_ST_pp0_stg10_fsm_10;
    static const sc_lv<4> ap_ST_pp0_stg11_fsm_11;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<64> ap_const_lv64_BFEAA449A0000000;
    static const sc_lv<64> ap_const_lv64_3FE0000000000000;
    static const sc_lv<64> ap_const_lv64_BFE0000000000000;
    static const sc_lv<64> ap_const_lv64_C000000000000000;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<64> ap_const_lv64_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_X2_phi_fu_111_p4();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_reg_phiprechg_X2_reg_107pp0_it5();
    void thread_ap_reg_ppiten_pp0_it0();
    void thread_ap_return();
    void thread_ap_sig_pprstidle_pp0();
    void thread_gaussrand_state_S_o();
    void thread_gaussrand_state_S_o_ap_lwr();
    void thread_gaussrand_state_S_o_ap_vld();
    void thread_gaussrand_state_V1();
    void thread_gaussrand_state_V1_ap_vld();
    void thread_gaussrand_state_V2_o();
    void thread_gaussrand_state_V2_o_ap_lwr();
    void thread_gaussrand_state_V2_o_ap_vld();
    void thread_gaussrand_state_phase_o();
    void thread_gaussrand_state_phase_o_ap_lwr();
    void thread_gaussrand_state_phase_o_ap_vld();
    void thread_grp_fu_135_ce();
    void thread_grp_fu_135_p0();
    void thread_grp_fu_139_ce();
    void thread_grp_fu_139_p0();
    void thread_grp_fu_142_ce();
    void thread_grp_fu_142_p0();
    void thread_grp_fu_142_p1();
    void thread_grp_fu_147_ce();
    void thread_grp_fu_147_p0();
    void thread_grp_fu_147_p1();
    void thread_grp_fu_152_ce();
    void thread_grp_fu_152_p0();
    void thread_grp_fu_152_p1();
    void thread_grp_fu_157_ce();
    void thread_grp_fu_157_p0();
    void thread_grp_fu_157_p1();
    void thread_grp_gaussrand2_rand_uint32_fu_119_ap_ce();
    void thread_grp_gaussrand2_rand_uint32_fu_119_ap_start();
    void thread_tmp_fu_161_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
