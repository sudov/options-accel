// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.2
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "black_scholes.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic black_scholes::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic black_scholes::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<9> black_scholes::ap_ST_pp0_stg0_fsm_0 = "101010111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg1_fsm_1 = "000000000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg2_fsm_2 = "1";
const sc_lv<9> black_scholes::ap_ST_pp0_stg3_fsm_3 = "11";
const sc_lv<9> black_scholes::ap_ST_pp0_stg4_fsm_4 = "10";
const sc_lv<9> black_scholes::ap_ST_pp0_stg5_fsm_5 = "110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg6_fsm_6 = "111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg7_fsm_7 = "101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg8_fsm_8 = "100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg9_fsm_9 = "1100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg10_fsm_10 = "1101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg11_fsm_11 = "1111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg12_fsm_12 = "1110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg13_fsm_13 = "1010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg14_fsm_14 = "1011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg15_fsm_15 = "1001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg16_fsm_16 = "1000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg17_fsm_17 = "11000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg18_fsm_18 = "11001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg19_fsm_19 = "11011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg20_fsm_20 = "11010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg21_fsm_21 = "11110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg22_fsm_22 = "11111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg23_fsm_23 = "11101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg24_fsm_24 = "11100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg25_fsm_25 = "10100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg26_fsm_26 = "10101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg27_fsm_27 = "10111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg28_fsm_28 = "10110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg29_fsm_29 = "10010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg30_fsm_30 = "10011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg31_fsm_31 = "10001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg32_fsm_32 = "10000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg33_fsm_33 = "110000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg34_fsm_34 = "110001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg35_fsm_35 = "110011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg36_fsm_36 = "110010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg37_fsm_37 = "110110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg38_fsm_38 = "110111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg39_fsm_39 = "110101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg40_fsm_40 = "110100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg41_fsm_41 = "111100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg42_fsm_42 = "111101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg43_fsm_43 = "111111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg44_fsm_44 = "111110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg45_fsm_45 = "111010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg46_fsm_46 = "111011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg47_fsm_47 = "111001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg48_fsm_48 = "111000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg49_fsm_49 = "101000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg50_fsm_50 = "101001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg51_fsm_51 = "101011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg52_fsm_52 = "101010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg53_fsm_53 = "101110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg54_fsm_54 = "101111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg55_fsm_55 = "101101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg56_fsm_56 = "101100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg57_fsm_57 = "100100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg58_fsm_58 = "100101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg59_fsm_59 = "100111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg60_fsm_60 = "100110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg61_fsm_61 = "100010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg62_fsm_62 = "100011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg63_fsm_63 = "100001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg64_fsm_64 = "100000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg65_fsm_65 = "1100000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg66_fsm_66 = "1100001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg67_fsm_67 = "1100011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg68_fsm_68 = "1100010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg69_fsm_69 = "1100110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg70_fsm_70 = "1100111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg71_fsm_71 = "1100101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg72_fsm_72 = "1100100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg73_fsm_73 = "1101100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg74_fsm_74 = "1101101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg75_fsm_75 = "1101111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg76_fsm_76 = "1101110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg77_fsm_77 = "1101010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg78_fsm_78 = "1101011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg79_fsm_79 = "1101001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg80_fsm_80 = "1101000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg81_fsm_81 = "1111000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg82_fsm_82 = "1111001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg83_fsm_83 = "1111011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg84_fsm_84 = "1111010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg85_fsm_85 = "1111110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg86_fsm_86 = "1111111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg87_fsm_87 = "1111101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg88_fsm_88 = "1111100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg89_fsm_89 = "1110100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg90_fsm_90 = "1110101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg91_fsm_91 = "1110111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg92_fsm_92 = "1110110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg93_fsm_93 = "1110010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg94_fsm_94 = "1110011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg95_fsm_95 = "1110001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg96_fsm_96 = "1110000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg97_fsm_97 = "1010000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg98_fsm_98 = "1010001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg99_fsm_99 = "1010011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg100_fsm_100 = "1010010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg101_fsm_101 = "1010110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg102_fsm_102 = "1010111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg103_fsm_103 = "1010101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg104_fsm_104 = "1010100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg105_fsm_105 = "1011100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg106_fsm_106 = "1011101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg107_fsm_107 = "1011111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg108_fsm_108 = "1011110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg109_fsm_109 = "1011010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg110_fsm_110 = "1011011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg111_fsm_111 = "1011001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg112_fsm_112 = "1011000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg113_fsm_113 = "1001000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg114_fsm_114 = "1001001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg115_fsm_115 = "1001011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg116_fsm_116 = "1001010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg117_fsm_117 = "1001110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg118_fsm_118 = "1001111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg119_fsm_119 = "1001101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg120_fsm_120 = "1001100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg121_fsm_121 = "1000100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg122_fsm_122 = "1000101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg123_fsm_123 = "1000111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg124_fsm_124 = "1000110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg125_fsm_125 = "1000010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg126_fsm_126 = "1000011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg127_fsm_127 = "1000001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg128_fsm_128 = "1000000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg129_fsm_129 = "11000000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg130_fsm_130 = "11000001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg131_fsm_131 = "11000011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg132_fsm_132 = "11000010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg133_fsm_133 = "11000110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg134_fsm_134 = "11000111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg135_fsm_135 = "11000101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg136_fsm_136 = "11000100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg137_fsm_137 = "11001100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg138_fsm_138 = "11001101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg139_fsm_139 = "11001111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg140_fsm_140 = "11001110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg141_fsm_141 = "11001010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg142_fsm_142 = "11001011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg143_fsm_143 = "11001001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg144_fsm_144 = "11001000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg145_fsm_145 = "11011000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg146_fsm_146 = "11011001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg147_fsm_147 = "11011011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg148_fsm_148 = "11011010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg149_fsm_149 = "11011110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg150_fsm_150 = "11011111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg151_fsm_151 = "11011101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg152_fsm_152 = "11011100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg153_fsm_153 = "11010100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg154_fsm_154 = "11010101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg155_fsm_155 = "11010111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg156_fsm_156 = "11010110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg157_fsm_157 = "11010010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg158_fsm_158 = "11010011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg159_fsm_159 = "11010001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg160_fsm_160 = "11010000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg161_fsm_161 = "11110000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg162_fsm_162 = "11110001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg163_fsm_163 = "11110011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg164_fsm_164 = "11110010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg165_fsm_165 = "11110110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg166_fsm_166 = "11110111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg167_fsm_167 = "11110101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg168_fsm_168 = "11110100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg169_fsm_169 = "11111100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg170_fsm_170 = "11111101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg171_fsm_171 = "11111111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg172_fsm_172 = "11111110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg173_fsm_173 = "11111010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg174_fsm_174 = "11111011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg175_fsm_175 = "11111001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg176_fsm_176 = "11111000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg177_fsm_177 = "11101000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg178_fsm_178 = "11101001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg179_fsm_179 = "11101011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg180_fsm_180 = "11101010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg181_fsm_181 = "11101110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg182_fsm_182 = "11101111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg183_fsm_183 = "11101101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg184_fsm_184 = "11101100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg185_fsm_185 = "11100100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg186_fsm_186 = "11100101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg187_fsm_187 = "11100111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg188_fsm_188 = "11100110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg189_fsm_189 = "11100010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg190_fsm_190 = "11100011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg191_fsm_191 = "11100001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg192_fsm_192 = "11100000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg193_fsm_193 = "10100000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg194_fsm_194 = "10100001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg195_fsm_195 = "10100011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg196_fsm_196 = "10100010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg197_fsm_197 = "10100110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg198_fsm_198 = "10100111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg199_fsm_199 = "10100101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg200_fsm_200 = "10100100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg201_fsm_201 = "10101100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg202_fsm_202 = "10101101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg203_fsm_203 = "10101111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg204_fsm_204 = "10101110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg205_fsm_205 = "10101010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg206_fsm_206 = "10101011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg207_fsm_207 = "10101001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg208_fsm_208 = "10101000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg209_fsm_209 = "10111000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg210_fsm_210 = "10111001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg211_fsm_211 = "10111011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg212_fsm_212 = "10111010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg213_fsm_213 = "10111110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg214_fsm_214 = "10111111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg215_fsm_215 = "10111101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg216_fsm_216 = "10111100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg217_fsm_217 = "10110100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg218_fsm_218 = "10110101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg219_fsm_219 = "10110111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg220_fsm_220 = "10110110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg221_fsm_221 = "10110010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg222_fsm_222 = "10110011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg223_fsm_223 = "10110001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg224_fsm_224 = "10110000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg225_fsm_225 = "10010000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg226_fsm_226 = "10010001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg227_fsm_227 = "10010011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg228_fsm_228 = "10010010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg229_fsm_229 = "10010110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg230_fsm_230 = "10010111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg231_fsm_231 = "10010101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg232_fsm_232 = "10010100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg233_fsm_233 = "10011100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg234_fsm_234 = "10011101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg235_fsm_235 = "10011111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg236_fsm_236 = "10011110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg237_fsm_237 = "10011010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg238_fsm_238 = "10011011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg239_fsm_239 = "10011001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg240_fsm_240 = "10011000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg241_fsm_241 = "10001000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg242_fsm_242 = "10001001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg243_fsm_243 = "10001011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg244_fsm_244 = "10001010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg245_fsm_245 = "10001110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg246_fsm_246 = "10001111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg247_fsm_247 = "10001101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg248_fsm_248 = "10001100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg249_fsm_249 = "10000100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg250_fsm_250 = "10000101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg251_fsm_251 = "10000111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg252_fsm_252 = "10000110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg253_fsm_253 = "10000010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg254_fsm_254 = "10000011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg255_fsm_255 = "10000001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg256_fsm_256 = "10000000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg257_fsm_257 = "110000000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg258_fsm_258 = "110000001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg259_fsm_259 = "110000011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg260_fsm_260 = "110000010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg261_fsm_261 = "110000110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg262_fsm_262 = "110000111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg263_fsm_263 = "110000101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg264_fsm_264 = "110000100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg265_fsm_265 = "110001100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg266_fsm_266 = "110001101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg267_fsm_267 = "110001111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg268_fsm_268 = "110001110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg269_fsm_269 = "110001010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg270_fsm_270 = "110001011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg271_fsm_271 = "110001001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg272_fsm_272 = "110001000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg273_fsm_273 = "110011000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg274_fsm_274 = "110011001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg275_fsm_275 = "110011011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg276_fsm_276 = "110011010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg277_fsm_277 = "110011110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg278_fsm_278 = "110011111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg279_fsm_279 = "110011101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg280_fsm_280 = "110011100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg281_fsm_281 = "110010100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg282_fsm_282 = "110010101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg283_fsm_283 = "110010111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg284_fsm_284 = "110010110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg285_fsm_285 = "110010010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg286_fsm_286 = "110010011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg287_fsm_287 = "110010001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg288_fsm_288 = "110010000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg289_fsm_289 = "110110000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg290_fsm_290 = "110110001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg291_fsm_291 = "110110011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg292_fsm_292 = "110110010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg293_fsm_293 = "110110110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg294_fsm_294 = "110110111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg295_fsm_295 = "110110101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg296_fsm_296 = "110110100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg297_fsm_297 = "110111100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg298_fsm_298 = "110111101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg299_fsm_299 = "110111111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg300_fsm_300 = "110111110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg301_fsm_301 = "110111010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg302_fsm_302 = "110111011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg303_fsm_303 = "110111001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg304_fsm_304 = "110111000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg305_fsm_305 = "110101000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg306_fsm_306 = "110101001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg307_fsm_307 = "110101011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg308_fsm_308 = "110101010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg309_fsm_309 = "110101110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg310_fsm_310 = "110101111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg311_fsm_311 = "110101101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg312_fsm_312 = "110101100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg313_fsm_313 = "110100100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg314_fsm_314 = "110100101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg315_fsm_315 = "110100111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg316_fsm_316 = "110100110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg317_fsm_317 = "110100010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg318_fsm_318 = "110100011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg319_fsm_319 = "110100001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg320_fsm_320 = "110100000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg321_fsm_321 = "111100000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg322_fsm_322 = "111100001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg323_fsm_323 = "111100011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg324_fsm_324 = "111100010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg325_fsm_325 = "111100110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg326_fsm_326 = "111100111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg327_fsm_327 = "111100101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg328_fsm_328 = "111100100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg329_fsm_329 = "111101100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg330_fsm_330 = "111101101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg331_fsm_331 = "111101111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg332_fsm_332 = "111101110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg333_fsm_333 = "111101010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg334_fsm_334 = "111101011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg335_fsm_335 = "111101001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg336_fsm_336 = "111101000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg337_fsm_337 = "111111000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg338_fsm_338 = "111111001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg339_fsm_339 = "111111011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg340_fsm_340 = "111111010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg341_fsm_341 = "111111110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg342_fsm_342 = "111111111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg343_fsm_343 = "111111101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg344_fsm_344 = "111111100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg345_fsm_345 = "111110100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg346_fsm_346 = "111110101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg347_fsm_347 = "111110111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg348_fsm_348 = "111110110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg349_fsm_349 = "111110010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg350_fsm_350 = "111110011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg351_fsm_351 = "111110001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg352_fsm_352 = "111110000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg353_fsm_353 = "111010000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg354_fsm_354 = "111010001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg355_fsm_355 = "111010011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg356_fsm_356 = "111010010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg357_fsm_357 = "111010110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg358_fsm_358 = "111010111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg359_fsm_359 = "111010101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg360_fsm_360 = "111010100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg361_fsm_361 = "111011100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg362_fsm_362 = "111011101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg363_fsm_363 = "111011111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg364_fsm_364 = "111011110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg365_fsm_365 = "111011010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg366_fsm_366 = "111011011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg367_fsm_367 = "111011001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg368_fsm_368 = "111011000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg369_fsm_369 = "111001000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg370_fsm_370 = "111001001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg371_fsm_371 = "111001011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg372_fsm_372 = "111001010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg373_fsm_373 = "111001110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg374_fsm_374 = "111001111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg375_fsm_375 = "111001101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg376_fsm_376 = "111001100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg377_fsm_377 = "111000100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg378_fsm_378 = "111000101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg379_fsm_379 = "111000111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg380_fsm_380 = "111000110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg381_fsm_381 = "111000010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg382_fsm_382 = "111000011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg383_fsm_383 = "111000001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg384_fsm_384 = "111000000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg385_fsm_385 = "101000000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg386_fsm_386 = "101000001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg387_fsm_387 = "101000011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg388_fsm_388 = "101000010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg389_fsm_389 = "101000110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg390_fsm_390 = "101000111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg391_fsm_391 = "101000101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg392_fsm_392 = "101000100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg393_fsm_393 = "101001100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg394_fsm_394 = "101001101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg395_fsm_395 = "101001111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg396_fsm_396 = "101001110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg397_fsm_397 = "101001010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg398_fsm_398 = "101001011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg399_fsm_399 = "101001001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg400_fsm_400 = "101001000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg401_fsm_401 = "101011000";
const sc_lv<9> black_scholes::ap_ST_pp0_stg402_fsm_402 = "101011001";
const sc_lv<9> black_scholes::ap_ST_pp0_stg403_fsm_403 = "101011011";
const sc_lv<9> black_scholes::ap_ST_pp0_stg404_fsm_404 = "101011010";
const sc_lv<9> black_scholes::ap_ST_pp0_stg405_fsm_405 = "101011110";
const sc_lv<9> black_scholes::ap_ST_pp0_stg406_fsm_406 = "101011111";
const sc_lv<9> black_scholes::ap_ST_pp0_stg407_fsm_407 = "101011101";
const sc_lv<9> black_scholes::ap_ST_pp0_stg408_fsm_408 = "101011100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg409_fsm_409 = "101010100";
const sc_lv<9> black_scholes::ap_ST_pp0_stg410_fsm_410 = "101010101";
const sc_lv<64> black_scholes::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<2> black_scholes::ap_const_lv2_0 = "00";
const sc_lv<2> black_scholes::ap_const_lv2_1 = "1";
const sc_lv<5> black_scholes::ap_const_lv5_4 = "100";

black_scholes::black_scholes(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_black_scholes_gaussrand2_fu_103 = new black_scholes_gaussrand2("grp_black_scholes_gaussrand2_fu_103");
    grp_black_scholes_gaussrand2_fu_103->ap_clk(ap_clk);
    grp_black_scholes_gaussrand2_fu_103->ap_rst(ap_rst);
    grp_black_scholes_gaussrand2_fu_103->ap_start(grp_black_scholes_gaussrand2_fu_103_ap_start);
    grp_black_scholes_gaussrand2_fu_103->ap_done(grp_black_scholes_gaussrand2_fu_103_ap_done);
    grp_black_scholes_gaussrand2_fu_103->ap_idle(grp_black_scholes_gaussrand2_fu_103_ap_idle);
    grp_black_scholes_gaussrand2_fu_103->ap_ready(grp_black_scholes_gaussrand2_fu_103_ap_ready);
    grp_black_scholes_gaussrand2_fu_103->ap_ce(grp_black_scholes_gaussrand2_fu_103_ap_ce);
    grp_black_scholes_gaussrand2_fu_103->gaussrand_state_V2_read(grp_black_scholes_gaussrand2_fu_103_gaussrand_state_V2_read);
    grp_black_scholes_gaussrand2_fu_103->gaussrand_state_S_read(grp_black_scholes_gaussrand2_fu_103_gaussrand_state_S_read);
    grp_black_scholes_gaussrand2_fu_103->gaussrand_state_phase_read(grp_black_scholes_gaussrand2_fu_103_gaussrand_state_phase_read);
    grp_black_scholes_gaussrand2_fu_103->ap_return(grp_black_scholes_gaussrand2_fu_103_ap_return);
    black_scholes_dadddsub_64ns_64ns_64_5_full_dsp_U15 = new black_scholes_dadddsub_64ns_64ns_64_5_full_dsp<15,5,64,64,64>("black_scholes_dadddsub_64ns_64ns_64_5_full_dsp_U15");
    black_scholes_dadddsub_64ns_64ns_64_5_full_dsp_U15->clk(ap_clk);
    black_scholes_dadddsub_64ns_64ns_64_5_full_dsp_U15->reset(ap_rst);
    black_scholes_dadddsub_64ns_64ns_64_5_full_dsp_U15->din0(grp_fu_125_p0);
    black_scholes_dadddsub_64ns_64ns_64_5_full_dsp_U15->din1(grp_fu_125_p1);
    black_scholes_dadddsub_64ns_64ns_64_5_full_dsp_U15->opcode(grp_fu_125_opcode);
    black_scholes_dadddsub_64ns_64ns_64_5_full_dsp_U15->ce(grp_fu_125_ce);
    black_scholes_dadddsub_64ns_64ns_64_5_full_dsp_U15->dout(grp_fu_125_p2);
    black_scholes_dmul_64ns_64ns_64_6_max_dsp_U16 = new black_scholes_dmul_64ns_64ns_64_6_max_dsp<16,6,64,64,64>("black_scholes_dmul_64ns_64ns_64_6_max_dsp_U16");
    black_scholes_dmul_64ns_64ns_64_6_max_dsp_U16->clk(ap_clk);
    black_scholes_dmul_64ns_64ns_64_6_max_dsp_U16->reset(ap_rst);
    black_scholes_dmul_64ns_64ns_64_6_max_dsp_U16->din0(grp_fu_129_p0);
    black_scholes_dmul_64ns_64ns_64_6_max_dsp_U16->din1(grp_fu_129_p1);
    black_scholes_dmul_64ns_64ns_64_6_max_dsp_U16->ce(grp_fu_129_ce);
    black_scholes_dmul_64ns_64ns_64_6_max_dsp_U16->dout(grp_fu_129_p2);
    black_scholes_dcmp_64ns_64ns_1_3_U17 = new black_scholes_dcmp_64ns_64ns_1_3<17,3,64,64,1>("black_scholes_dcmp_64ns_64ns_1_3_U17");
    black_scholes_dcmp_64ns_64ns_1_3_U17->clk(ap_clk);
    black_scholes_dcmp_64ns_64ns_1_3_U17->reset(ap_rst);
    black_scholes_dcmp_64ns_64ns_1_3_U17->din0(grp_fu_133_p0);
    black_scholes_dcmp_64ns_64ns_1_3_U17->din1(grp_fu_133_p1);
    black_scholes_dcmp_64ns_64ns_1_3_U17->ce(grp_fu_133_ce);
    black_scholes_dcmp_64ns_64ns_1_3_U17->opcode(grp_fu_133_opcode);
    black_scholes_dcmp_64ns_64ns_1_3_U17->dout(grp_fu_133_p2);
    black_scholes_dexp_64ns_64ns_64_18_full_dsp_U18 = new black_scholes_dexp_64ns_64ns_64_18_full_dsp<18,18,64,64,64>("black_scholes_dexp_64ns_64ns_64_18_full_dsp_U18");
    black_scholes_dexp_64ns_64ns_64_18_full_dsp_U18->clk(ap_clk);
    black_scholes_dexp_64ns_64ns_64_18_full_dsp_U18->reset(ap_rst);
    black_scholes_dexp_64ns_64ns_64_18_full_dsp_U18->din0(grp_fu_138_p0);
    black_scholes_dexp_64ns_64ns_64_18_full_dsp_U18->din1(grp_fu_138_p1);
    black_scholes_dexp_64ns_64ns_64_18_full_dsp_U18->ce(grp_fu_138_ce);
    black_scholes_dexp_64ns_64ns_64_18_full_dsp_U18->dout(grp_fu_138_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );

    SC_METHOD(thread_ap_reg_ppiten_pp0_it0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0_preg );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( grp_fu_129_p2 );

    SC_METHOD(thread_ap_sig_pprstidle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_reg_ppiten_pp0_it0 );

    SC_METHOD(thread_ap_sig_start_in_grp_black_scholes_gaussrand2_fu_103_ap_start);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );

    SC_METHOD(thread_grp_black_scholes_gaussrand2_fu_103_ap_ce);

    SC_METHOD(thread_grp_black_scholes_gaussrand2_fu_103_ap_start);
    sensitive << ( ap_sig_start_in_grp_black_scholes_gaussrand2_fu_103_ap_start );

    SC_METHOD(thread_grp_black_scholes_gaussrand2_fu_103_gaussrand_state_S_read);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( gaussrand_state_S );

    SC_METHOD(thread_grp_black_scholes_gaussrand2_fu_103_gaussrand_state_V2_read);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( gaussrand_state_V2 );

    SC_METHOD(thread_grp_black_scholes_gaussrand2_fu_103_gaussrand_state_phase_read);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( gaussrand_state_phase );

    SC_METHOD(thread_grp_fu_125_ce);

    SC_METHOD(thread_grp_fu_125_opcode);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_grp_fu_125_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( reg_143 );

    SC_METHOD(thread_grp_fu_125_p1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( A_read_reg_177 );
    sensitive << ( E_read_reg_182 );

    SC_METHOD(thread_grp_fu_129_ce);

    SC_METHOD(thread_grp_fu_129_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( rand_number_reg_192 );
    sensitive << ( tmp2_reg_197 );
    sensitive << ( tmp4_reg_202 );

    SC_METHOD(thread_grp_fu_129_p1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( rT_read_reg_167 );
    sensitive << ( B_read_reg_172 );
    sensitive << ( S_read_reg_187 );

    SC_METHOD(thread_grp_fu_133_ce);

    SC_METHOD(thread_grp_fu_133_opcode);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_grp_fu_133_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( reg_148 );

    SC_METHOD(thread_grp_fu_133_p1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_grp_fu_138_ce);

    SC_METHOD(thread_grp_fu_138_p0);

    SC_METHOD(thread_grp_fu_138_p1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( reg_148 );

    SC_METHOD(thread_tmp4_fu_154_p3);
    sensitive << ( reg_148 );
    sensitive << ( grp_fu_133_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_pprstidle_pp0 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "101010111";
    ap_reg_ppiten_pp0_it1 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it0_preg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "black_scholes_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, S, "(port)S");
    sc_trace(mVcdFile, E, "(port)E");
    sc_trace(mVcdFile, A, "(port)A");
    sc_trace(mVcdFile, B, "(port)B");
    sc_trace(mVcdFile, rT, "(port)rT");
    sc_trace(mVcdFile, gaussrand_state_V1, "(port)gaussrand_state_V1");
    sc_trace(mVcdFile, gaussrand_state_V2, "(port)gaussrand_state_V2");
    sc_trace(mVcdFile, gaussrand_state_S, "(port)gaussrand_state_S");
    sc_trace(mVcdFile, gaussrand_state_phase, "(port)gaussrand_state_phase");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it0, "ap_reg_ppiten_pp0_it0");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it1, "ap_reg_ppiten_pp0_it1");
    sc_trace(mVcdFile, grp_fu_129_p2, "grp_fu_129_p2");
    sc_trace(mVcdFile, reg_143, "reg_143");
    sc_trace(mVcdFile, grp_fu_125_p2, "grp_fu_125_p2");
    sc_trace(mVcdFile, reg_148, "reg_148");
    sc_trace(mVcdFile, rT_read_reg_167, "rT_read_reg_167");
    sc_trace(mVcdFile, B_read_reg_172, "B_read_reg_172");
    sc_trace(mVcdFile, A_read_reg_177, "A_read_reg_177");
    sc_trace(mVcdFile, E_read_reg_182, "E_read_reg_182");
    sc_trace(mVcdFile, S_read_reg_187, "S_read_reg_187");
    sc_trace(mVcdFile, grp_black_scholes_gaussrand2_fu_103_ap_return, "grp_black_scholes_gaussrand2_fu_103_ap_return");
    sc_trace(mVcdFile, rand_number_reg_192, "rand_number_reg_192");
    sc_trace(mVcdFile, grp_fu_138_p2, "grp_fu_138_p2");
    sc_trace(mVcdFile, tmp2_reg_197, "tmp2_reg_197");
    sc_trace(mVcdFile, tmp4_fu_154_p3, "tmp4_fu_154_p3");
    sc_trace(mVcdFile, tmp4_reg_202, "tmp4_reg_202");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it0_preg, "ap_reg_ppiten_pp0_it0_preg");
    sc_trace(mVcdFile, grp_black_scholes_gaussrand2_fu_103_ap_start, "grp_black_scholes_gaussrand2_fu_103_ap_start");
    sc_trace(mVcdFile, grp_black_scholes_gaussrand2_fu_103_ap_done, "grp_black_scholes_gaussrand2_fu_103_ap_done");
    sc_trace(mVcdFile, grp_black_scholes_gaussrand2_fu_103_ap_idle, "grp_black_scholes_gaussrand2_fu_103_ap_idle");
    sc_trace(mVcdFile, grp_black_scholes_gaussrand2_fu_103_ap_ready, "grp_black_scholes_gaussrand2_fu_103_ap_ready");
    sc_trace(mVcdFile, grp_black_scholes_gaussrand2_fu_103_ap_ce, "grp_black_scholes_gaussrand2_fu_103_ap_ce");
    sc_trace(mVcdFile, grp_black_scholes_gaussrand2_fu_103_gaussrand_state_V2_read, "grp_black_scholes_gaussrand2_fu_103_gaussrand_state_V2_read");
    sc_trace(mVcdFile, grp_black_scholes_gaussrand2_fu_103_gaussrand_state_S_read, "grp_black_scholes_gaussrand2_fu_103_gaussrand_state_S_read");
    sc_trace(mVcdFile, grp_black_scholes_gaussrand2_fu_103_gaussrand_state_phase_read, "grp_black_scholes_gaussrand2_fu_103_gaussrand_state_phase_read");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_sig_start_in_grp_black_scholes_gaussrand2_fu_103_ap_start, "ap_sig_start_in_grp_black_scholes_gaussrand2_fu_103_ap_start");
    sc_trace(mVcdFile, grp_fu_125_p0, "grp_fu_125_p0");
    sc_trace(mVcdFile, grp_fu_125_p1, "grp_fu_125_p1");
    sc_trace(mVcdFile, grp_fu_129_p0, "grp_fu_129_p0");
    sc_trace(mVcdFile, grp_fu_129_p1, "grp_fu_129_p1");
    sc_trace(mVcdFile, grp_fu_133_p0, "grp_fu_133_p0");
    sc_trace(mVcdFile, grp_fu_133_p1, "grp_fu_133_p1");
    sc_trace(mVcdFile, grp_fu_138_p1, "grp_fu_138_p1");
    sc_trace(mVcdFile, grp_fu_133_p2, "grp_fu_133_p2");
    sc_trace(mVcdFile, grp_fu_125_opcode, "grp_fu_125_opcode");
    sc_trace(mVcdFile, grp_fu_125_ce, "grp_fu_125_ce");
    sc_trace(mVcdFile, grp_fu_129_ce, "grp_fu_129_ce");
    sc_trace(mVcdFile, grp_fu_133_ce, "grp_fu_133_ce");
    sc_trace(mVcdFile, grp_fu_133_opcode, "grp_fu_133_opcode");
    sc_trace(mVcdFile, grp_fu_138_p0, "grp_fu_138_p0");
    sc_trace(mVcdFile, grp_fu_138_ce, "grp_fu_138_ce");
    sc_trace(mVcdFile, ap_sig_pprstidle_pp0, "ap_sig_pprstidle_pp0");
#endif

    }
    mHdltvinHandle.open("black_scholes.hdltvin.dat");
    mHdltvoutHandle.open("black_scholes.hdltvout.dat");
}

black_scholes::~black_scholes() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete grp_black_scholes_gaussrand2_fu_103;
    delete black_scholes_dadddsub_64ns_64ns_64_5_full_dsp_U15;
    delete black_scholes_dmul_64ns_64ns_64_6_max_dsp_U16;
    delete black_scholes_dcmp_64ns_64ns_1_3_U17;
    delete black_scholes_dexp_64ns_64ns_64_18_full_dsp_U18;
}

void black_scholes::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_pp0_stg0_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it0_preg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,9,9>(ap_ST_pp0_stg0_fsm_0, ap_CS_fsm.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)))) {
            ap_reg_ppiten_pp0_it0_preg = ap_start.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,9,9>(ap_ST_pp0_stg203_fsm_203, ap_CS_fsm.read()) && 
             !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
        } else if (esl_seteq<1,9,9>(ap_ST_pp0_stg410_fsm_410, ap_CS_fsm.read())) {
            ap_reg_ppiten_pp0_it1 = ap_reg_ppiten_pp0_it0.read();
        }
    }
    if ((esl_seteq<1,9,9>(ap_ST_pp0_stg410_fsm_410, ap_CS_fsm.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()))) {
        A_read_reg_177 = A.read();
        B_read_reg_172 = B.read();
        E_read_reg_182 = E.read();
        S_read_reg_187 = S.read();
        rT_read_reg_167 = rT.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && esl_seteq<1,9,9>(ap_ST_pp0_stg154_fsm_154, ap_CS_fsm.read()))) {
        rand_number_reg_192 = grp_black_scholes_gaussrand2_fu_103_ap_return.read();
    }
    if (((esl_seteq<1,9,9>(ap_ST_pp0_stg160_fsm_160, ap_CS_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
  esl_seteq<1,9,9>(ap_ST_pp0_stg189_fsm_189, ap_CS_fsm.read())))) {
        reg_143 = grp_fu_129_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
  esl_seteq<1,9,9>(ap_ST_pp0_stg165_fsm_165, ap_CS_fsm.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
  esl_seteq<1,9,9>(ap_ST_pp0_stg194_fsm_194, ap_CS_fsm.read())))) {
        reg_148 = grp_fu_125_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && esl_seteq<1,9,9>(ap_ST_pp0_stg183_fsm_183, ap_CS_fsm.read()))) {
        tmp2_reg_197 = grp_fu_138_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && esl_seteq<1,9,9>(ap_ST_pp0_stg197_fsm_197, ap_CS_fsm.read()))) {
        tmp4_reg_202 = tmp4_fu_154_p3.read();
    }
}

void black_scholes::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,9,9>(ap_ST_pp0_stg203_fsm_203, ap_CS_fsm.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void black_scholes::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,9,9>(ap_ST_pp0_stg0_fsm_0, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void black_scholes::thread_ap_ready() {
    if ((esl_seteq<1,9,9>(ap_ST_pp0_stg410_fsm_410, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void black_scholes::thread_ap_reg_ppiten_pp0_it0() {
    if (esl_seteq<1,9,9>(ap_ST_pp0_stg0_fsm_0, ap_CS_fsm.read())) {
        ap_reg_ppiten_pp0_it0 = ap_start.read();
    } else {
        ap_reg_ppiten_pp0_it0 = ap_reg_ppiten_pp0_it0_preg.read();
    }
}

void black_scholes::thread_ap_return() {
    ap_return = grp_fu_129_p2.read();
}

void black_scholes::thread_ap_sig_pprstidle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()))) {
        ap_sig_pprstidle_pp0 = ap_const_logic_1;
    } else {
        ap_sig_pprstidle_pp0 = ap_const_logic_0;
    }
}

void black_scholes::thread_ap_sig_start_in_grp_black_scholes_gaussrand2_fu_103_ap_start() {
    if ((esl_seteq<1,9,9>(ap_ST_pp0_stg0_fsm_0, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        ap_sig_start_in_grp_black_scholes_gaussrand2_fu_103_ap_start = ap_const_logic_1;
    } else {
        ap_sig_start_in_grp_black_scholes_gaussrand2_fu_103_ap_start = ap_const_logic_0;
    }
}

void black_scholes::thread_grp_black_scholes_gaussrand2_fu_103_ap_ce() {
    grp_black_scholes_gaussrand2_fu_103_ap_ce = ap_const_logic_1;
}

void black_scholes::thread_grp_black_scholes_gaussrand2_fu_103_ap_start() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_start_in_grp_black_scholes_gaussrand2_fu_103_ap_start.read())) {
        grp_black_scholes_gaussrand2_fu_103_ap_start = ap_sig_start_in_grp_black_scholes_gaussrand2_fu_103_ap_start.read();
    } else {
        grp_black_scholes_gaussrand2_fu_103_ap_start = ap_const_logic_0;
    }
}

void black_scholes::thread_grp_black_scholes_gaussrand2_fu_103_gaussrand_state_S_read() {
    grp_black_scholes_gaussrand2_fu_103_gaussrand_state_S_read = gaussrand_state_S.read();
}

void black_scholes::thread_grp_black_scholes_gaussrand2_fu_103_gaussrand_state_V2_read() {
    grp_black_scholes_gaussrand2_fu_103_gaussrand_state_V2_read = gaussrand_state_V2.read();
}

void black_scholes::thread_grp_black_scholes_gaussrand2_fu_103_gaussrand_state_phase_read() {
    grp_black_scholes_gaussrand2_fu_103_gaussrand_state_phase_read = gaussrand_state_phase.read();
}

void black_scholes::thread_grp_fu_125_ce() {
    grp_fu_125_ce = ap_const_logic_1;
}

void black_scholes::thread_grp_fu_125_opcode() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) {
        if (esl_seteq<1,9,9>(ap_ST_pp0_stg190_fsm_190, ap_CS_fsm.read())) {
            grp_fu_125_opcode = ap_const_lv2_1;
        } else if (esl_seteq<1,9,9>(ap_ST_pp0_stg161_fsm_161, ap_CS_fsm.read())) {
            grp_fu_125_opcode = ap_const_lv2_0;
        } else {
            grp_fu_125_opcode = "XX";
        }
    } else {
        grp_fu_125_opcode = "XX";
    }
}

void black_scholes::thread_grp_fu_125_p0() {
    grp_fu_125_p0 = reg_143.read();
}

void black_scholes::thread_grp_fu_125_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) {
        if (esl_seteq<1,9,9>(ap_ST_pp0_stg190_fsm_190, ap_CS_fsm.read())) {
            grp_fu_125_p1 = E_read_reg_182.read();
        } else if (esl_seteq<1,9,9>(ap_ST_pp0_stg161_fsm_161, ap_CS_fsm.read())) {
            grp_fu_125_p1 = A_read_reg_177.read();
        } else {
            grp_fu_125_p1 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        grp_fu_125_p1 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void black_scholes::thread_grp_fu_129_ce() {
    grp_fu_129_ce = ap_const_logic_1;
}

void black_scholes::thread_grp_fu_129_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) {
        if (esl_seteq<1,9,9>(ap_ST_pp0_stg198_fsm_198, ap_CS_fsm.read())) {
            grp_fu_129_p0 = tmp4_reg_202.read();
        } else if (esl_seteq<1,9,9>(ap_ST_pp0_stg184_fsm_184, ap_CS_fsm.read())) {
            grp_fu_129_p0 = tmp2_reg_197.read();
        } else if (esl_seteq<1,9,9>(ap_ST_pp0_stg155_fsm_155, ap_CS_fsm.read())) {
            grp_fu_129_p0 = rand_number_reg_192.read();
        } else {
            grp_fu_129_p0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        grp_fu_129_p0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void black_scholes::thread_grp_fu_129_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) {
        if (esl_seteq<1,9,9>(ap_ST_pp0_stg198_fsm_198, ap_CS_fsm.read())) {
            grp_fu_129_p1 = rT_read_reg_167.read();
        } else if (esl_seteq<1,9,9>(ap_ST_pp0_stg184_fsm_184, ap_CS_fsm.read())) {
            grp_fu_129_p1 = S_read_reg_187.read();
        } else if (esl_seteq<1,9,9>(ap_ST_pp0_stg155_fsm_155, ap_CS_fsm.read())) {
            grp_fu_129_p1 = B_read_reg_172.read();
        } else {
            grp_fu_129_p1 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        grp_fu_129_p1 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void black_scholes::thread_grp_fu_133_ce() {
    grp_fu_133_ce = ap_const_logic_1;
}

void black_scholes::thread_grp_fu_133_opcode() {
    grp_fu_133_opcode = ap_const_lv5_4;
}

void black_scholes::thread_grp_fu_133_p0() {
    grp_fu_133_p0 = reg_148.read();
}

void black_scholes::thread_grp_fu_133_p1() {
    grp_fu_133_p1 = ap_const_lv64_0;
}

void black_scholes::thread_grp_fu_138_ce() {
    grp_fu_138_ce = ap_const_logic_1;
}

void black_scholes::thread_grp_fu_138_p0() {
    grp_fu_138_p0 = ap_const_lv64_0;
}

void black_scholes::thread_grp_fu_138_p1() {
    grp_fu_138_p1 = reg_148.read();
}

void black_scholes::thread_tmp4_fu_154_p3() {
    tmp4_fu_154_p3 = (!grp_fu_133_p2.read()[0].is_01())? sc_lv<64>(): ((grp_fu_133_p2.read()[0].to_bool())? ap_const_lv64_0: reg_148.read());
}

void black_scholes::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 343 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read())))) {
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_0;
            }
            break;
        case 0 : 
            ap_NS_fsm = ap_ST_pp0_stg2_fsm_2;
            break;
        case 1 : 
            ap_NS_fsm = ap_ST_pp0_stg3_fsm_3;
            break;
        case 3 : 
            ap_NS_fsm = ap_ST_pp0_stg4_fsm_4;
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_pp0_stg5_fsm_5;
            break;
        case 6 : 
            ap_NS_fsm = ap_ST_pp0_stg6_fsm_6;
            break;
        case 7 : 
            ap_NS_fsm = ap_ST_pp0_stg7_fsm_7;
            break;
        case 5 : 
            ap_NS_fsm = ap_ST_pp0_stg8_fsm_8;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_pp0_stg9_fsm_9;
            break;
        case 12 : 
            ap_NS_fsm = ap_ST_pp0_stg10_fsm_10;
            break;
        case 13 : 
            ap_NS_fsm = ap_ST_pp0_stg11_fsm_11;
            break;
        case 15 : 
            ap_NS_fsm = ap_ST_pp0_stg12_fsm_12;
            break;
        case 14 : 
            ap_NS_fsm = ap_ST_pp0_stg13_fsm_13;
            break;
        case 10 : 
            ap_NS_fsm = ap_ST_pp0_stg14_fsm_14;
            break;
        case 11 : 
            ap_NS_fsm = ap_ST_pp0_stg15_fsm_15;
            break;
        case 9 : 
            ap_NS_fsm = ap_ST_pp0_stg16_fsm_16;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_pp0_stg17_fsm_17;
            break;
        case 24 : 
            ap_NS_fsm = ap_ST_pp0_stg18_fsm_18;
            break;
        case 25 : 
            ap_NS_fsm = ap_ST_pp0_stg19_fsm_19;
            break;
        case 27 : 
            ap_NS_fsm = ap_ST_pp0_stg20_fsm_20;
            break;
        case 26 : 
            ap_NS_fsm = ap_ST_pp0_stg21_fsm_21;
            break;
        case 30 : 
            ap_NS_fsm = ap_ST_pp0_stg22_fsm_22;
            break;
        case 31 : 
            ap_NS_fsm = ap_ST_pp0_stg23_fsm_23;
            break;
        case 29 : 
            ap_NS_fsm = ap_ST_pp0_stg24_fsm_24;
            break;
        case 28 : 
            ap_NS_fsm = ap_ST_pp0_stg25_fsm_25;
            break;
        case 20 : 
            ap_NS_fsm = ap_ST_pp0_stg26_fsm_26;
            break;
        case 21 : 
            ap_NS_fsm = ap_ST_pp0_stg27_fsm_27;
            break;
        case 23 : 
            ap_NS_fsm = ap_ST_pp0_stg28_fsm_28;
            break;
        case 22 : 
            ap_NS_fsm = ap_ST_pp0_stg29_fsm_29;
            break;
        case 18 : 
            ap_NS_fsm = ap_ST_pp0_stg30_fsm_30;
            break;
        case 19 : 
            ap_NS_fsm = ap_ST_pp0_stg31_fsm_31;
            break;
        case 17 : 
            ap_NS_fsm = ap_ST_pp0_stg32_fsm_32;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_pp0_stg33_fsm_33;
            break;
        case 48 : 
            ap_NS_fsm = ap_ST_pp0_stg34_fsm_34;
            break;
        case 49 : 
            ap_NS_fsm = ap_ST_pp0_stg35_fsm_35;
            break;
        case 51 : 
            ap_NS_fsm = ap_ST_pp0_stg36_fsm_36;
            break;
        case 50 : 
            ap_NS_fsm = ap_ST_pp0_stg37_fsm_37;
            break;
        case 54 : 
            ap_NS_fsm = ap_ST_pp0_stg38_fsm_38;
            break;
        case 55 : 
            ap_NS_fsm = ap_ST_pp0_stg39_fsm_39;
            break;
        case 53 : 
            ap_NS_fsm = ap_ST_pp0_stg40_fsm_40;
            break;
        case 52 : 
            ap_NS_fsm = ap_ST_pp0_stg41_fsm_41;
            break;
        case 60 : 
            ap_NS_fsm = ap_ST_pp0_stg42_fsm_42;
            break;
        case 61 : 
            ap_NS_fsm = ap_ST_pp0_stg43_fsm_43;
            break;
        case 63 : 
            ap_NS_fsm = ap_ST_pp0_stg44_fsm_44;
            break;
        case 62 : 
            ap_NS_fsm = ap_ST_pp0_stg45_fsm_45;
            break;
        case 58 : 
            ap_NS_fsm = ap_ST_pp0_stg46_fsm_46;
            break;
        case 59 : 
            ap_NS_fsm = ap_ST_pp0_stg47_fsm_47;
            break;
        case 57 : 
            ap_NS_fsm = ap_ST_pp0_stg48_fsm_48;
            break;
        case 56 : 
            ap_NS_fsm = ap_ST_pp0_stg49_fsm_49;
            break;
        case 40 : 
            ap_NS_fsm = ap_ST_pp0_stg50_fsm_50;
            break;
        case 41 : 
            ap_NS_fsm = ap_ST_pp0_stg51_fsm_51;
            break;
        case 43 : 
            ap_NS_fsm = ap_ST_pp0_stg52_fsm_52;
            break;
        case 42 : 
            ap_NS_fsm = ap_ST_pp0_stg53_fsm_53;
            break;
        case 46 : 
            ap_NS_fsm = ap_ST_pp0_stg54_fsm_54;
            break;
        case 47 : 
            ap_NS_fsm = ap_ST_pp0_stg55_fsm_55;
            break;
        case 45 : 
            ap_NS_fsm = ap_ST_pp0_stg56_fsm_56;
            break;
        case 44 : 
            ap_NS_fsm = ap_ST_pp0_stg57_fsm_57;
            break;
        case 36 : 
            ap_NS_fsm = ap_ST_pp0_stg58_fsm_58;
            break;
        case 37 : 
            ap_NS_fsm = ap_ST_pp0_stg59_fsm_59;
            break;
        case 39 : 
            ap_NS_fsm = ap_ST_pp0_stg60_fsm_60;
            break;
        case 38 : 
            ap_NS_fsm = ap_ST_pp0_stg61_fsm_61;
            break;
        case 34 : 
            ap_NS_fsm = ap_ST_pp0_stg62_fsm_62;
            break;
        case 35 : 
            ap_NS_fsm = ap_ST_pp0_stg63_fsm_63;
            break;
        case 33 : 
            ap_NS_fsm = ap_ST_pp0_stg64_fsm_64;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_pp0_stg65_fsm_65;
            break;
        case 96 : 
            ap_NS_fsm = ap_ST_pp0_stg66_fsm_66;
            break;
        case 97 : 
            ap_NS_fsm = ap_ST_pp0_stg67_fsm_67;
            break;
        case 99 : 
            ap_NS_fsm = ap_ST_pp0_stg68_fsm_68;
            break;
        case 98 : 
            ap_NS_fsm = ap_ST_pp0_stg69_fsm_69;
            break;
        case 102 : 
            ap_NS_fsm = ap_ST_pp0_stg70_fsm_70;
            break;
        case 103 : 
            ap_NS_fsm = ap_ST_pp0_stg71_fsm_71;
            break;
        case 101 : 
            ap_NS_fsm = ap_ST_pp0_stg72_fsm_72;
            break;
        case 100 : 
            ap_NS_fsm = ap_ST_pp0_stg73_fsm_73;
            break;
        case 108 : 
            ap_NS_fsm = ap_ST_pp0_stg74_fsm_74;
            break;
        case 109 : 
            ap_NS_fsm = ap_ST_pp0_stg75_fsm_75;
            break;
        case 111 : 
            ap_NS_fsm = ap_ST_pp0_stg76_fsm_76;
            break;
        case 110 : 
            ap_NS_fsm = ap_ST_pp0_stg77_fsm_77;
            break;
        case 106 : 
            ap_NS_fsm = ap_ST_pp0_stg78_fsm_78;
            break;
        case 107 : 
            ap_NS_fsm = ap_ST_pp0_stg79_fsm_79;
            break;
        case 105 : 
            ap_NS_fsm = ap_ST_pp0_stg80_fsm_80;
            break;
        case 104 : 
            ap_NS_fsm = ap_ST_pp0_stg81_fsm_81;
            break;
        case 120 : 
            ap_NS_fsm = ap_ST_pp0_stg82_fsm_82;
            break;
        case 121 : 
            ap_NS_fsm = ap_ST_pp0_stg83_fsm_83;
            break;
        case 123 : 
            ap_NS_fsm = ap_ST_pp0_stg84_fsm_84;
            break;
        case 122 : 
            ap_NS_fsm = ap_ST_pp0_stg85_fsm_85;
            break;
        case 126 : 
            ap_NS_fsm = ap_ST_pp0_stg86_fsm_86;
            break;
        case 127 : 
            ap_NS_fsm = ap_ST_pp0_stg87_fsm_87;
            break;
        case 125 : 
            ap_NS_fsm = ap_ST_pp0_stg88_fsm_88;
            break;
        case 124 : 
            ap_NS_fsm = ap_ST_pp0_stg89_fsm_89;
            break;
        case 116 : 
            ap_NS_fsm = ap_ST_pp0_stg90_fsm_90;
            break;
        case 117 : 
            ap_NS_fsm = ap_ST_pp0_stg91_fsm_91;
            break;
        case 119 : 
            ap_NS_fsm = ap_ST_pp0_stg92_fsm_92;
            break;
        case 118 : 
            ap_NS_fsm = ap_ST_pp0_stg93_fsm_93;
            break;
        case 114 : 
            ap_NS_fsm = ap_ST_pp0_stg94_fsm_94;
            break;
        case 115 : 
            ap_NS_fsm = ap_ST_pp0_stg95_fsm_95;
            break;
        case 113 : 
            ap_NS_fsm = ap_ST_pp0_stg96_fsm_96;
            break;
        case 112 : 
            ap_NS_fsm = ap_ST_pp0_stg97_fsm_97;
            break;
        case 80 : 
            ap_NS_fsm = ap_ST_pp0_stg98_fsm_98;
            break;
        case 81 : 
            ap_NS_fsm = ap_ST_pp0_stg99_fsm_99;
            break;
        case 83 : 
            ap_NS_fsm = ap_ST_pp0_stg100_fsm_100;
            break;
        case 82 : 
            ap_NS_fsm = ap_ST_pp0_stg101_fsm_101;
            break;
        case 86 : 
            ap_NS_fsm = ap_ST_pp0_stg102_fsm_102;
            break;
        case 87 : 
            ap_NS_fsm = ap_ST_pp0_stg103_fsm_103;
            break;
        case 85 : 
            ap_NS_fsm = ap_ST_pp0_stg104_fsm_104;
            break;
        case 84 : 
            ap_NS_fsm = ap_ST_pp0_stg105_fsm_105;
            break;
        case 92 : 
            ap_NS_fsm = ap_ST_pp0_stg106_fsm_106;
            break;
        case 93 : 
            ap_NS_fsm = ap_ST_pp0_stg107_fsm_107;
            break;
        case 95 : 
            ap_NS_fsm = ap_ST_pp0_stg108_fsm_108;
            break;
        case 94 : 
            ap_NS_fsm = ap_ST_pp0_stg109_fsm_109;
            break;
        case 90 : 
            ap_NS_fsm = ap_ST_pp0_stg110_fsm_110;
            break;
        case 91 : 
            ap_NS_fsm = ap_ST_pp0_stg111_fsm_111;
            break;
        case 89 : 
            ap_NS_fsm = ap_ST_pp0_stg112_fsm_112;
            break;
        case 88 : 
            ap_NS_fsm = ap_ST_pp0_stg113_fsm_113;
            break;
        case 72 : 
            ap_NS_fsm = ap_ST_pp0_stg114_fsm_114;
            break;
        case 73 : 
            ap_NS_fsm = ap_ST_pp0_stg115_fsm_115;
            break;
        case 75 : 
            ap_NS_fsm = ap_ST_pp0_stg116_fsm_116;
            break;
        case 74 : 
            ap_NS_fsm = ap_ST_pp0_stg117_fsm_117;
            break;
        case 78 : 
            ap_NS_fsm = ap_ST_pp0_stg118_fsm_118;
            break;
        case 79 : 
            ap_NS_fsm = ap_ST_pp0_stg119_fsm_119;
            break;
        case 77 : 
            ap_NS_fsm = ap_ST_pp0_stg120_fsm_120;
            break;
        case 76 : 
            ap_NS_fsm = ap_ST_pp0_stg121_fsm_121;
            break;
        case 68 : 
            ap_NS_fsm = ap_ST_pp0_stg122_fsm_122;
            break;
        case 69 : 
            ap_NS_fsm = ap_ST_pp0_stg123_fsm_123;
            break;
        case 71 : 
            ap_NS_fsm = ap_ST_pp0_stg124_fsm_124;
            break;
        case 70 : 
            ap_NS_fsm = ap_ST_pp0_stg125_fsm_125;
            break;
        case 66 : 
            ap_NS_fsm = ap_ST_pp0_stg126_fsm_126;
            break;
        case 67 : 
            ap_NS_fsm = ap_ST_pp0_stg127_fsm_127;
            break;
        case 65 : 
            ap_NS_fsm = ap_ST_pp0_stg128_fsm_128;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_pp0_stg129_fsm_129;
            break;
        case 192 : 
            ap_NS_fsm = ap_ST_pp0_stg130_fsm_130;
            break;
        case 193 : 
            ap_NS_fsm = ap_ST_pp0_stg131_fsm_131;
            break;
        case 195 : 
            ap_NS_fsm = ap_ST_pp0_stg132_fsm_132;
            break;
        case 194 : 
            ap_NS_fsm = ap_ST_pp0_stg133_fsm_133;
            break;
        case 198 : 
            ap_NS_fsm = ap_ST_pp0_stg134_fsm_134;
            break;
        case 199 : 
            ap_NS_fsm = ap_ST_pp0_stg135_fsm_135;
            break;
        case 197 : 
            ap_NS_fsm = ap_ST_pp0_stg136_fsm_136;
            break;
        case 196 : 
            ap_NS_fsm = ap_ST_pp0_stg137_fsm_137;
            break;
        case 204 : 
            ap_NS_fsm = ap_ST_pp0_stg138_fsm_138;
            break;
        case 205 : 
            ap_NS_fsm = ap_ST_pp0_stg139_fsm_139;
            break;
        case 207 : 
            ap_NS_fsm = ap_ST_pp0_stg140_fsm_140;
            break;
        case 206 : 
            ap_NS_fsm = ap_ST_pp0_stg141_fsm_141;
            break;
        case 202 : 
            ap_NS_fsm = ap_ST_pp0_stg142_fsm_142;
            break;
        case 203 : 
            ap_NS_fsm = ap_ST_pp0_stg143_fsm_143;
            break;
        case 201 : 
            ap_NS_fsm = ap_ST_pp0_stg144_fsm_144;
            break;
        case 200 : 
            ap_NS_fsm = ap_ST_pp0_stg145_fsm_145;
            break;
        case 216 : 
            ap_NS_fsm = ap_ST_pp0_stg146_fsm_146;
            break;
        case 217 : 
            ap_NS_fsm = ap_ST_pp0_stg147_fsm_147;
            break;
        case 219 : 
            ap_NS_fsm = ap_ST_pp0_stg148_fsm_148;
            break;
        case 218 : 
            ap_NS_fsm = ap_ST_pp0_stg149_fsm_149;
            break;
        case 222 : 
            ap_NS_fsm = ap_ST_pp0_stg150_fsm_150;
            break;
        case 223 : 
            ap_NS_fsm = ap_ST_pp0_stg151_fsm_151;
            break;
        case 221 : 
            ap_NS_fsm = ap_ST_pp0_stg152_fsm_152;
            break;
        case 220 : 
            ap_NS_fsm = ap_ST_pp0_stg153_fsm_153;
            break;
        case 212 : 
            ap_NS_fsm = ap_ST_pp0_stg154_fsm_154;
            break;
        case 213 : 
            ap_NS_fsm = ap_ST_pp0_stg155_fsm_155;
            break;
        case 215 : 
            ap_NS_fsm = ap_ST_pp0_stg156_fsm_156;
            break;
        case 214 : 
            ap_NS_fsm = ap_ST_pp0_stg157_fsm_157;
            break;
        case 210 : 
            ap_NS_fsm = ap_ST_pp0_stg158_fsm_158;
            break;
        case 211 : 
            ap_NS_fsm = ap_ST_pp0_stg159_fsm_159;
            break;
        case 209 : 
            ap_NS_fsm = ap_ST_pp0_stg160_fsm_160;
            break;
        case 208 : 
            ap_NS_fsm = ap_ST_pp0_stg161_fsm_161;
            break;
        case 240 : 
            ap_NS_fsm = ap_ST_pp0_stg162_fsm_162;
            break;
        case 241 : 
            ap_NS_fsm = ap_ST_pp0_stg163_fsm_163;
            break;
        case 243 : 
            ap_NS_fsm = ap_ST_pp0_stg164_fsm_164;
            break;
        case 242 : 
            ap_NS_fsm = ap_ST_pp0_stg165_fsm_165;
            break;
        case 246 : 
            ap_NS_fsm = ap_ST_pp0_stg166_fsm_166;
            break;
        case 247 : 
            ap_NS_fsm = ap_ST_pp0_stg167_fsm_167;
            break;
        case 245 : 
            ap_NS_fsm = ap_ST_pp0_stg168_fsm_168;
            break;
        case 244 : 
            ap_NS_fsm = ap_ST_pp0_stg169_fsm_169;
            break;
        case 252 : 
            ap_NS_fsm = ap_ST_pp0_stg170_fsm_170;
            break;
        case 253 : 
            ap_NS_fsm = ap_ST_pp0_stg171_fsm_171;
            break;
        case 255 : 
            ap_NS_fsm = ap_ST_pp0_stg172_fsm_172;
            break;
        case 254 : 
            ap_NS_fsm = ap_ST_pp0_stg173_fsm_173;
            break;
        case 250 : 
            ap_NS_fsm = ap_ST_pp0_stg174_fsm_174;
            break;
        case 251 : 
            ap_NS_fsm = ap_ST_pp0_stg175_fsm_175;
            break;
        case 249 : 
            ap_NS_fsm = ap_ST_pp0_stg176_fsm_176;
            break;
        case 248 : 
            ap_NS_fsm = ap_ST_pp0_stg177_fsm_177;
            break;
        case 232 : 
            ap_NS_fsm = ap_ST_pp0_stg178_fsm_178;
            break;
        case 233 : 
            ap_NS_fsm = ap_ST_pp0_stg179_fsm_179;
            break;
        case 235 : 
            ap_NS_fsm = ap_ST_pp0_stg180_fsm_180;
            break;
        case 234 : 
            ap_NS_fsm = ap_ST_pp0_stg181_fsm_181;
            break;
        case 238 : 
            ap_NS_fsm = ap_ST_pp0_stg182_fsm_182;
            break;
        case 239 : 
            ap_NS_fsm = ap_ST_pp0_stg183_fsm_183;
            break;
        case 237 : 
            ap_NS_fsm = ap_ST_pp0_stg184_fsm_184;
            break;
        case 236 : 
            ap_NS_fsm = ap_ST_pp0_stg185_fsm_185;
            break;
        case 228 : 
            ap_NS_fsm = ap_ST_pp0_stg186_fsm_186;
            break;
        case 229 : 
            ap_NS_fsm = ap_ST_pp0_stg187_fsm_187;
            break;
        case 231 : 
            ap_NS_fsm = ap_ST_pp0_stg188_fsm_188;
            break;
        case 230 : 
            ap_NS_fsm = ap_ST_pp0_stg189_fsm_189;
            break;
        case 226 : 
            ap_NS_fsm = ap_ST_pp0_stg190_fsm_190;
            break;
        case 227 : 
            ap_NS_fsm = ap_ST_pp0_stg191_fsm_191;
            break;
        case 225 : 
            ap_NS_fsm = ap_ST_pp0_stg192_fsm_192;
            break;
        case 224 : 
            ap_NS_fsm = ap_ST_pp0_stg193_fsm_193;
            break;
        case 160 : 
            ap_NS_fsm = ap_ST_pp0_stg194_fsm_194;
            break;
        case 161 : 
            ap_NS_fsm = ap_ST_pp0_stg195_fsm_195;
            break;
        case 163 : 
            ap_NS_fsm = ap_ST_pp0_stg196_fsm_196;
            break;
        case 162 : 
            ap_NS_fsm = ap_ST_pp0_stg197_fsm_197;
            break;
        case 166 : 
            ap_NS_fsm = ap_ST_pp0_stg198_fsm_198;
            break;
        case 167 : 
            ap_NS_fsm = ap_ST_pp0_stg199_fsm_199;
            break;
        case 165 : 
            ap_NS_fsm = ap_ST_pp0_stg200_fsm_200;
            break;
        case 164 : 
            ap_NS_fsm = ap_ST_pp0_stg201_fsm_201;
            break;
        case 172 : 
            ap_NS_fsm = ap_ST_pp0_stg202_fsm_202;
            break;
        case 173 : 
            ap_NS_fsm = ap_ST_pp0_stg203_fsm_203;
            break;
        case 175 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_pprstidle_pp0.read())) {
                ap_NS_fsm = ap_ST_pp0_stg204_fsm_204;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_0;
            }
            break;
        case 174 : 
            ap_NS_fsm = ap_ST_pp0_stg205_fsm_205;
            break;
        case 170 : 
            ap_NS_fsm = ap_ST_pp0_stg206_fsm_206;
            break;
        case 171 : 
            ap_NS_fsm = ap_ST_pp0_stg207_fsm_207;
            break;
        case 169 : 
            ap_NS_fsm = ap_ST_pp0_stg208_fsm_208;
            break;
        case 168 : 
            ap_NS_fsm = ap_ST_pp0_stg209_fsm_209;
            break;
        case 184 : 
            ap_NS_fsm = ap_ST_pp0_stg210_fsm_210;
            break;
        case 185 : 
            ap_NS_fsm = ap_ST_pp0_stg211_fsm_211;
            break;
        case 187 : 
            ap_NS_fsm = ap_ST_pp0_stg212_fsm_212;
            break;
        case 186 : 
            ap_NS_fsm = ap_ST_pp0_stg213_fsm_213;
            break;
        case 190 : 
            ap_NS_fsm = ap_ST_pp0_stg214_fsm_214;
            break;
        case 191 : 
            ap_NS_fsm = ap_ST_pp0_stg215_fsm_215;
            break;
        case 189 : 
            ap_NS_fsm = ap_ST_pp0_stg216_fsm_216;
            break;
        case 188 : 
            ap_NS_fsm = ap_ST_pp0_stg217_fsm_217;
            break;
        case 180 : 
            ap_NS_fsm = ap_ST_pp0_stg218_fsm_218;
            break;
        case 181 : 
            ap_NS_fsm = ap_ST_pp0_stg219_fsm_219;
            break;
        case 183 : 
            ap_NS_fsm = ap_ST_pp0_stg220_fsm_220;
            break;
        case 182 : 
            ap_NS_fsm = ap_ST_pp0_stg221_fsm_221;
            break;
        case 178 : 
            ap_NS_fsm = ap_ST_pp0_stg222_fsm_222;
            break;
        case 179 : 
            ap_NS_fsm = ap_ST_pp0_stg223_fsm_223;
            break;
        case 177 : 
            ap_NS_fsm = ap_ST_pp0_stg224_fsm_224;
            break;
        case 176 : 
            ap_NS_fsm = ap_ST_pp0_stg225_fsm_225;
            break;
        case 144 : 
            ap_NS_fsm = ap_ST_pp0_stg226_fsm_226;
            break;
        case 145 : 
            ap_NS_fsm = ap_ST_pp0_stg227_fsm_227;
            break;
        case 147 : 
            ap_NS_fsm = ap_ST_pp0_stg228_fsm_228;
            break;
        case 146 : 
            ap_NS_fsm = ap_ST_pp0_stg229_fsm_229;
            break;
        case 150 : 
            ap_NS_fsm = ap_ST_pp0_stg230_fsm_230;
            break;
        case 151 : 
            ap_NS_fsm = ap_ST_pp0_stg231_fsm_231;
            break;
        case 149 : 
            ap_NS_fsm = ap_ST_pp0_stg232_fsm_232;
            break;
        case 148 : 
            ap_NS_fsm = ap_ST_pp0_stg233_fsm_233;
            break;
        case 156 : 
            ap_NS_fsm = ap_ST_pp0_stg234_fsm_234;
            break;
        case 157 : 
            ap_NS_fsm = ap_ST_pp0_stg235_fsm_235;
            break;
        case 159 : 
            ap_NS_fsm = ap_ST_pp0_stg236_fsm_236;
            break;
        case 158 : 
            ap_NS_fsm = ap_ST_pp0_stg237_fsm_237;
            break;
        case 154 : 
            ap_NS_fsm = ap_ST_pp0_stg238_fsm_238;
            break;
        case 155 : 
            ap_NS_fsm = ap_ST_pp0_stg239_fsm_239;
            break;
        case 153 : 
            ap_NS_fsm = ap_ST_pp0_stg240_fsm_240;
            break;
        case 152 : 
            ap_NS_fsm = ap_ST_pp0_stg241_fsm_241;
            break;
        case 136 : 
            ap_NS_fsm = ap_ST_pp0_stg242_fsm_242;
            break;
        case 137 : 
            ap_NS_fsm = ap_ST_pp0_stg243_fsm_243;
            break;
        case 139 : 
            ap_NS_fsm = ap_ST_pp0_stg244_fsm_244;
            break;
        case 138 : 
            ap_NS_fsm = ap_ST_pp0_stg245_fsm_245;
            break;
        case 142 : 
            ap_NS_fsm = ap_ST_pp0_stg246_fsm_246;
            break;
        case 143 : 
            ap_NS_fsm = ap_ST_pp0_stg247_fsm_247;
            break;
        case 141 : 
            ap_NS_fsm = ap_ST_pp0_stg248_fsm_248;
            break;
        case 140 : 
            ap_NS_fsm = ap_ST_pp0_stg249_fsm_249;
            break;
        case 132 : 
            ap_NS_fsm = ap_ST_pp0_stg250_fsm_250;
            break;
        case 133 : 
            ap_NS_fsm = ap_ST_pp0_stg251_fsm_251;
            break;
        case 135 : 
            ap_NS_fsm = ap_ST_pp0_stg252_fsm_252;
            break;
        case 134 : 
            ap_NS_fsm = ap_ST_pp0_stg253_fsm_253;
            break;
        case 130 : 
            ap_NS_fsm = ap_ST_pp0_stg254_fsm_254;
            break;
        case 131 : 
            ap_NS_fsm = ap_ST_pp0_stg255_fsm_255;
            break;
        case 129 : 
            ap_NS_fsm = ap_ST_pp0_stg256_fsm_256;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_pp0_stg257_fsm_257;
            break;
        case 384 : 
            ap_NS_fsm = ap_ST_pp0_stg258_fsm_258;
            break;
        case 385 : 
            ap_NS_fsm = ap_ST_pp0_stg259_fsm_259;
            break;
        case 387 : 
            ap_NS_fsm = ap_ST_pp0_stg260_fsm_260;
            break;
        case 386 : 
            ap_NS_fsm = ap_ST_pp0_stg261_fsm_261;
            break;
        case 390 : 
            ap_NS_fsm = ap_ST_pp0_stg262_fsm_262;
            break;
        case 391 : 
            ap_NS_fsm = ap_ST_pp0_stg263_fsm_263;
            break;
        case 389 : 
            ap_NS_fsm = ap_ST_pp0_stg264_fsm_264;
            break;
        case 388 : 
            ap_NS_fsm = ap_ST_pp0_stg265_fsm_265;
            break;
        case 396 : 
            ap_NS_fsm = ap_ST_pp0_stg266_fsm_266;
            break;
        case 397 : 
            ap_NS_fsm = ap_ST_pp0_stg267_fsm_267;
            break;
        case 399 : 
            ap_NS_fsm = ap_ST_pp0_stg268_fsm_268;
            break;
        case 398 : 
            ap_NS_fsm = ap_ST_pp0_stg269_fsm_269;
            break;
        case 394 : 
            ap_NS_fsm = ap_ST_pp0_stg270_fsm_270;
            break;
        case 395 : 
            ap_NS_fsm = ap_ST_pp0_stg271_fsm_271;
            break;
        case 393 : 
            ap_NS_fsm = ap_ST_pp0_stg272_fsm_272;
            break;
        case 392 : 
            ap_NS_fsm = ap_ST_pp0_stg273_fsm_273;
            break;
        case 408 : 
            ap_NS_fsm = ap_ST_pp0_stg274_fsm_274;
            break;
        case 409 : 
            ap_NS_fsm = ap_ST_pp0_stg275_fsm_275;
            break;
        case 411 : 
            ap_NS_fsm = ap_ST_pp0_stg276_fsm_276;
            break;
        case 410 : 
            ap_NS_fsm = ap_ST_pp0_stg277_fsm_277;
            break;
        case 414 : 
            ap_NS_fsm = ap_ST_pp0_stg278_fsm_278;
            break;
        case 415 : 
            ap_NS_fsm = ap_ST_pp0_stg279_fsm_279;
            break;
        case 413 : 
            ap_NS_fsm = ap_ST_pp0_stg280_fsm_280;
            break;
        case 412 : 
            ap_NS_fsm = ap_ST_pp0_stg281_fsm_281;
            break;
        case 404 : 
            ap_NS_fsm = ap_ST_pp0_stg282_fsm_282;
            break;
        case 405 : 
            ap_NS_fsm = ap_ST_pp0_stg283_fsm_283;
            break;
        case 407 : 
            ap_NS_fsm = ap_ST_pp0_stg284_fsm_284;
            break;
        case 406 : 
            ap_NS_fsm = ap_ST_pp0_stg285_fsm_285;
            break;
        case 402 : 
            ap_NS_fsm = ap_ST_pp0_stg286_fsm_286;
            break;
        case 403 : 
            ap_NS_fsm = ap_ST_pp0_stg287_fsm_287;
            break;
        case 401 : 
            ap_NS_fsm = ap_ST_pp0_stg288_fsm_288;
            break;
        case 400 : 
            ap_NS_fsm = ap_ST_pp0_stg289_fsm_289;
            break;
        case 432 : 
            ap_NS_fsm = ap_ST_pp0_stg290_fsm_290;
            break;
        case 433 : 
            ap_NS_fsm = ap_ST_pp0_stg291_fsm_291;
            break;
        case 435 : 
            ap_NS_fsm = ap_ST_pp0_stg292_fsm_292;
            break;
        case 434 : 
            ap_NS_fsm = ap_ST_pp0_stg293_fsm_293;
            break;
        case 438 : 
            ap_NS_fsm = ap_ST_pp0_stg294_fsm_294;
            break;
        case 439 : 
            ap_NS_fsm = ap_ST_pp0_stg295_fsm_295;
            break;
        case 437 : 
            ap_NS_fsm = ap_ST_pp0_stg296_fsm_296;
            break;
        case 436 : 
            ap_NS_fsm = ap_ST_pp0_stg297_fsm_297;
            break;
        case 444 : 
            ap_NS_fsm = ap_ST_pp0_stg298_fsm_298;
            break;
        case 445 : 
            ap_NS_fsm = ap_ST_pp0_stg299_fsm_299;
            break;
        case 447 : 
            ap_NS_fsm = ap_ST_pp0_stg300_fsm_300;
            break;
        case 446 : 
            ap_NS_fsm = ap_ST_pp0_stg301_fsm_301;
            break;
        case 442 : 
            ap_NS_fsm = ap_ST_pp0_stg302_fsm_302;
            break;
        case 443 : 
            ap_NS_fsm = ap_ST_pp0_stg303_fsm_303;
            break;
        case 441 : 
            ap_NS_fsm = ap_ST_pp0_stg304_fsm_304;
            break;
        case 440 : 
            ap_NS_fsm = ap_ST_pp0_stg305_fsm_305;
            break;
        case 424 : 
            ap_NS_fsm = ap_ST_pp0_stg306_fsm_306;
            break;
        case 425 : 
            ap_NS_fsm = ap_ST_pp0_stg307_fsm_307;
            break;
        case 427 : 
            ap_NS_fsm = ap_ST_pp0_stg308_fsm_308;
            break;
        case 426 : 
            ap_NS_fsm = ap_ST_pp0_stg309_fsm_309;
            break;
        case 430 : 
            ap_NS_fsm = ap_ST_pp0_stg310_fsm_310;
            break;
        case 431 : 
            ap_NS_fsm = ap_ST_pp0_stg311_fsm_311;
            break;
        case 429 : 
            ap_NS_fsm = ap_ST_pp0_stg312_fsm_312;
            break;
        case 428 : 
            ap_NS_fsm = ap_ST_pp0_stg313_fsm_313;
            break;
        case 420 : 
            ap_NS_fsm = ap_ST_pp0_stg314_fsm_314;
            break;
        case 421 : 
            ap_NS_fsm = ap_ST_pp0_stg315_fsm_315;
            break;
        case 423 : 
            ap_NS_fsm = ap_ST_pp0_stg316_fsm_316;
            break;
        case 422 : 
            ap_NS_fsm = ap_ST_pp0_stg317_fsm_317;
            break;
        case 418 : 
            ap_NS_fsm = ap_ST_pp0_stg318_fsm_318;
            break;
        case 419 : 
            ap_NS_fsm = ap_ST_pp0_stg319_fsm_319;
            break;
        case 417 : 
            ap_NS_fsm = ap_ST_pp0_stg320_fsm_320;
            break;
        case 416 : 
            ap_NS_fsm = ap_ST_pp0_stg321_fsm_321;
            break;
        case 480 : 
            ap_NS_fsm = ap_ST_pp0_stg322_fsm_322;
            break;
        case 481 : 
            ap_NS_fsm = ap_ST_pp0_stg323_fsm_323;
            break;
        case 483 : 
            ap_NS_fsm = ap_ST_pp0_stg324_fsm_324;
            break;
        case 482 : 
            ap_NS_fsm = ap_ST_pp0_stg325_fsm_325;
            break;
        case 486 : 
            ap_NS_fsm = ap_ST_pp0_stg326_fsm_326;
            break;
        case 487 : 
            ap_NS_fsm = ap_ST_pp0_stg327_fsm_327;
            break;
        case 485 : 
            ap_NS_fsm = ap_ST_pp0_stg328_fsm_328;
            break;
        case 484 : 
            ap_NS_fsm = ap_ST_pp0_stg329_fsm_329;
            break;
        case 492 : 
            ap_NS_fsm = ap_ST_pp0_stg330_fsm_330;
            break;
        case 493 : 
            ap_NS_fsm = ap_ST_pp0_stg331_fsm_331;
            break;
        case 495 : 
            ap_NS_fsm = ap_ST_pp0_stg332_fsm_332;
            break;
        case 494 : 
            ap_NS_fsm = ap_ST_pp0_stg333_fsm_333;
            break;
        case 490 : 
            ap_NS_fsm = ap_ST_pp0_stg334_fsm_334;
            break;
        case 491 : 
            ap_NS_fsm = ap_ST_pp0_stg335_fsm_335;
            break;
        case 489 : 
            ap_NS_fsm = ap_ST_pp0_stg336_fsm_336;
            break;
        case 488 : 
            ap_NS_fsm = ap_ST_pp0_stg337_fsm_337;
            break;
        case 504 : 
            ap_NS_fsm = ap_ST_pp0_stg338_fsm_338;
            break;
        case 505 : 
            ap_NS_fsm = ap_ST_pp0_stg339_fsm_339;
            break;
        case 507 : 
            ap_NS_fsm = ap_ST_pp0_stg340_fsm_340;
            break;
        case 506 : 
            ap_NS_fsm = ap_ST_pp0_stg341_fsm_341;
            break;
        case 510 : 
            ap_NS_fsm = ap_ST_pp0_stg342_fsm_342;
            break;
        case 511 : 
            ap_NS_fsm = ap_ST_pp0_stg343_fsm_343;
            break;
        case 509 : 
            ap_NS_fsm = ap_ST_pp0_stg344_fsm_344;
            break;
        case 508 : 
            ap_NS_fsm = ap_ST_pp0_stg345_fsm_345;
            break;
        case 500 : 
            ap_NS_fsm = ap_ST_pp0_stg346_fsm_346;
            break;
        case 501 : 
            ap_NS_fsm = ap_ST_pp0_stg347_fsm_347;
            break;
        case 503 : 
            ap_NS_fsm = ap_ST_pp0_stg348_fsm_348;
            break;
        case 502 : 
            ap_NS_fsm = ap_ST_pp0_stg349_fsm_349;
            break;
        case 498 : 
            ap_NS_fsm = ap_ST_pp0_stg350_fsm_350;
            break;
        case 499 : 
            ap_NS_fsm = ap_ST_pp0_stg351_fsm_351;
            break;
        case 497 : 
            ap_NS_fsm = ap_ST_pp0_stg352_fsm_352;
            break;
        case 496 : 
            ap_NS_fsm = ap_ST_pp0_stg353_fsm_353;
            break;
        case 464 : 
            ap_NS_fsm = ap_ST_pp0_stg354_fsm_354;
            break;
        case 465 : 
            ap_NS_fsm = ap_ST_pp0_stg355_fsm_355;
            break;
        case 467 : 
            ap_NS_fsm = ap_ST_pp0_stg356_fsm_356;
            break;
        case 466 : 
            ap_NS_fsm = ap_ST_pp0_stg357_fsm_357;
            break;
        case 470 : 
            ap_NS_fsm = ap_ST_pp0_stg358_fsm_358;
            break;
        case 471 : 
            ap_NS_fsm = ap_ST_pp0_stg359_fsm_359;
            break;
        case 469 : 
            ap_NS_fsm = ap_ST_pp0_stg360_fsm_360;
            break;
        case 468 : 
            ap_NS_fsm = ap_ST_pp0_stg361_fsm_361;
            break;
        case 476 : 
            ap_NS_fsm = ap_ST_pp0_stg362_fsm_362;
            break;
        case 477 : 
            ap_NS_fsm = ap_ST_pp0_stg363_fsm_363;
            break;
        case 479 : 
            ap_NS_fsm = ap_ST_pp0_stg364_fsm_364;
            break;
        case 478 : 
            ap_NS_fsm = ap_ST_pp0_stg365_fsm_365;
            break;
        case 474 : 
            ap_NS_fsm = ap_ST_pp0_stg366_fsm_366;
            break;
        case 475 : 
            ap_NS_fsm = ap_ST_pp0_stg367_fsm_367;
            break;
        case 473 : 
            ap_NS_fsm = ap_ST_pp0_stg368_fsm_368;
            break;
        case 472 : 
            ap_NS_fsm = ap_ST_pp0_stg369_fsm_369;
            break;
        case 456 : 
            ap_NS_fsm = ap_ST_pp0_stg370_fsm_370;
            break;
        case 457 : 
            ap_NS_fsm = ap_ST_pp0_stg371_fsm_371;
            break;
        case 459 : 
            ap_NS_fsm = ap_ST_pp0_stg372_fsm_372;
            break;
        case 458 : 
            ap_NS_fsm = ap_ST_pp0_stg373_fsm_373;
            break;
        case 462 : 
            ap_NS_fsm = ap_ST_pp0_stg374_fsm_374;
            break;
        case 463 : 
            ap_NS_fsm = ap_ST_pp0_stg375_fsm_375;
            break;
        case 461 : 
            ap_NS_fsm = ap_ST_pp0_stg376_fsm_376;
            break;
        case 460 : 
            ap_NS_fsm = ap_ST_pp0_stg377_fsm_377;
            break;
        case 452 : 
            ap_NS_fsm = ap_ST_pp0_stg378_fsm_378;
            break;
        case 453 : 
            ap_NS_fsm = ap_ST_pp0_stg379_fsm_379;
            break;
        case 455 : 
            ap_NS_fsm = ap_ST_pp0_stg380_fsm_380;
            break;
        case 454 : 
            ap_NS_fsm = ap_ST_pp0_stg381_fsm_381;
            break;
        case 450 : 
            ap_NS_fsm = ap_ST_pp0_stg382_fsm_382;
            break;
        case 451 : 
            ap_NS_fsm = ap_ST_pp0_stg383_fsm_383;
            break;
        case 449 : 
            ap_NS_fsm = ap_ST_pp0_stg384_fsm_384;
            break;
        case 448 : 
            ap_NS_fsm = ap_ST_pp0_stg385_fsm_385;
            break;
        case 320 : 
            ap_NS_fsm = ap_ST_pp0_stg386_fsm_386;
            break;
        case 321 : 
            ap_NS_fsm = ap_ST_pp0_stg387_fsm_387;
            break;
        case 323 : 
            ap_NS_fsm = ap_ST_pp0_stg388_fsm_388;
            break;
        case 322 : 
            ap_NS_fsm = ap_ST_pp0_stg389_fsm_389;
            break;
        case 326 : 
            ap_NS_fsm = ap_ST_pp0_stg390_fsm_390;
            break;
        case 327 : 
            ap_NS_fsm = ap_ST_pp0_stg391_fsm_391;
            break;
        case 325 : 
            ap_NS_fsm = ap_ST_pp0_stg392_fsm_392;
            break;
        case 324 : 
            ap_NS_fsm = ap_ST_pp0_stg393_fsm_393;
            break;
        case 332 : 
            ap_NS_fsm = ap_ST_pp0_stg394_fsm_394;
            break;
        case 333 : 
            ap_NS_fsm = ap_ST_pp0_stg395_fsm_395;
            break;
        case 335 : 
            ap_NS_fsm = ap_ST_pp0_stg396_fsm_396;
            break;
        case 334 : 
            ap_NS_fsm = ap_ST_pp0_stg397_fsm_397;
            break;
        case 330 : 
            ap_NS_fsm = ap_ST_pp0_stg398_fsm_398;
            break;
        case 331 : 
            ap_NS_fsm = ap_ST_pp0_stg399_fsm_399;
            break;
        case 329 : 
            ap_NS_fsm = ap_ST_pp0_stg400_fsm_400;
            break;
        case 328 : 
            ap_NS_fsm = ap_ST_pp0_stg401_fsm_401;
            break;
        case 344 : 
            ap_NS_fsm = ap_ST_pp0_stg402_fsm_402;
            break;
        case 345 : 
            ap_NS_fsm = ap_ST_pp0_stg403_fsm_403;
            break;
        case 347 : 
            ap_NS_fsm = ap_ST_pp0_stg404_fsm_404;
            break;
        case 346 : 
            ap_NS_fsm = ap_ST_pp0_stg405_fsm_405;
            break;
        case 350 : 
            ap_NS_fsm = ap_ST_pp0_stg406_fsm_406;
            break;
        case 351 : 
            ap_NS_fsm = ap_ST_pp0_stg407_fsm_407;
            break;
        case 349 : 
            ap_NS_fsm = ap_ST_pp0_stg408_fsm_408;
            break;
        case 348 : 
            ap_NS_fsm = ap_ST_pp0_stg409_fsm_409;
            break;
        case 340 : 
            ap_NS_fsm = ap_ST_pp0_stg410_fsm_410;
            break;
        case 341 : 
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_0;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<9>) ("XXXXXXXXX");
            break;
    }
}

void black_scholes::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"S\" :  \"" << S.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"E\" :  \"" << E.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A\" :  \"" << A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"B\" :  \"" << B.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"rT\" :  \"" << rT.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"gaussrand_state_V1\" :  \"" << gaussrand_state_V1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"gaussrand_state_V2\" :  \"" << gaussrand_state_V2.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"gaussrand_state_S\" :  \"" << gaussrand_state_S.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"gaussrand_state_phase\" :  \"" << gaussrand_state_phase.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_return\" :  \"" << ap_return.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

