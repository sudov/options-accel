

================================================================
== Vivado HLS Report for 'rand_uint32'
================================================================
* Date:           Thu Dec 11 23:28:39 2014

* Version:        2014.2 (Build 932637 on Wed Jun 11 12:38:34 PM 2014)
* Project:        hls.prj
* Solution:       solution1
* Product family: zynq zynq_fpv6 
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |  10.00|      6.85|        1.25|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |    2|    2|    1|    1| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 3
* Pipeline: 1
  Pipeline-0: II = 1, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
* FSM state operations: 

 <State 1>: 5.61ns
ST_1: kk_load [1/1] 0.00ns
:1  %kk_load = load i16* @kk, align 2

ST_1: tmp [1/1] 0.00ns
:2  %tmp = zext i16 %kk_load to i64

ST_1: mt_kk_addr [1/1] 0.00ns
:3  %mt_kk_addr = getelementptr inbounds [624 x i64]* @mt_kk, i64 0, i64 %tmp

ST_1: mt_kk_load [2/2] 2.39ns
:4  %mt_kk_load = load i64* %mt_kk_addr, align 8

ST_1: kk_p1_load [1/1] 0.00ns
:6  %kk_p1_load = load i16* @kk_p1, align 2

ST_1: tmp_s [1/1] 0.00ns
:7  %tmp_s = zext i16 %kk_p1_load to i64

ST_1: mt_kkp1_addr [1/1] 0.00ns
:8  %mt_kkp1_addr = getelementptr inbounds [624 x i64]* @mt_kkp1, i64 0, i64 %tmp_s

ST_1: mt_kkp1_load [2/2] 2.39ns
:9  %mt_kkp1_load = load i64* %mt_kkp1_addr, align 8

ST_1: kk_pm_load [1/1] 0.00ns
:12  %kk_pm_load = load i16* @kk_pm, align 2

ST_1: tmp_10 [1/1] 0.00ns
:13  %tmp_10 = zext i16 %kk_pm_load to i64

ST_1: mt_kkpm_addr [1/1] 0.00ns
:14  %mt_kkpm_addr = getelementptr inbounds [624 x i64]* @mt_kkpm, i64 0, i64 %tmp_10

ST_1: mt_kkpm_load [2/2] 2.39ns
:15  %mt_kkpm_load = load i64* %mt_kkpm_addr, align 8

ST_1: a_assign [1/1] 1.96ns
:48  %a_assign = add i16 %kk_load, 1

ST_1: tmp_i [1/1] 2.28ns
:49  %tmp_i = icmp ugt i16 %a_assign, 623

ST_1: tmp_i_100 [1/1] 1.96ns
:50  %tmp_i_100 = add i16 %kk_load, -623

ST_1: a_assign_1 [1/1] 1.37ns
:51  %a_assign_1 = select i1 %tmp_i, i16 %tmp_i_100, i16 %a_assign

ST_1: stg_20 [1/1] 0.00ns
:52  store i16 %a_assign_1, i16* @kk, align 2

ST_1: a_assign_2 [1/1] 1.96ns
:53  %a_assign_2 = add i16 %kk_p1_load, 1

ST_1: tmp_i1 [1/1] 2.28ns
:54  %tmp_i1 = icmp ugt i16 %a_assign_2, 623

ST_1: tmp_i2 [1/1] 1.96ns
:55  %tmp_i2 = add i16 %kk_p1_load, -623

ST_1: a_assign_3 [1/1] 1.37ns
:56  %a_assign_3 = select i1 %tmp_i1, i16 %tmp_i2, i16 %a_assign_2

ST_1: stg_25 [1/1] 0.00ns
:57  store i16 %a_assign_3, i16* @kk_p1, align 2

ST_1: a_assign_4 [1/1] 1.96ns
:58  %a_assign_4 = add i16 %kk_pm_load, 1

ST_1: tmp_i4 [1/1] 2.28ns
:59  %tmp_i4 = icmp ugt i16 %a_assign_4, 623

ST_1: tmp_i5 [1/1] 1.96ns
:60  %tmp_i5 = add i16 %kk_pm_load, -623

ST_1: a_assign_5 [1/1] 1.37ns
:61  %a_assign_5 = select i1 %tmp_i4, i16 %tmp_i5, i16 %a_assign_4

ST_1: stg_30 [1/1] 0.00ns
:62  store i16 %a_assign_5, i16* @kk_pm, align 2


 <State 2>: 5.13ns
ST_2: mt_kk_load [1/2] 2.39ns
:4  %mt_kk_load = load i64* %mt_kk_addr, align 8

ST_2: tmp_35 [1/1] 0.00ns
:5  %tmp_35 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %mt_kk_load, i32 31)

ST_2: mt_kkp1_load [1/2] 2.39ns
:9  %mt_kkp1_load = load i64* %mt_kkp1_addr, align 8

ST_2: tmp_36 [1/1] 0.00ns
:10  %tmp_36 = trunc i64 %mt_kkp1_load to i1

ST_2: mag01_cast_cast [1/1] 1.37ns
:11  %mag01_cast_cast = select i1 %tmp_36, i64 2567483615, i64 0

ST_2: mt_kkpm_load [1/2] 2.39ns
:15  %mt_kkpm_load = load i64* %mt_kkpm_addr, align 8

ST_2: tmp_11 [1/1] 0.00ns
:16  %tmp_11 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %mt_kkp1_load, i32 1, i32 30)

ST_2: tmp1 [1/1] 1.37ns
:19  %tmp1 = xor i64 %mag01_cast_cast, %mt_kkpm_load


 <State 3>: 6.85ns
ST_3: stg_39 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str13) nounwind

ST_3: tmp_12 [1/1] 0.00ns
:17  %tmp_12 = call i31 @_ssdm_op_BitConcatenate.i31.i1.i30(i1 %tmp_35, i30 %tmp_11)

ST_3: tmp_32_cast [1/1] 0.00ns
:18  %tmp_32_cast = zext i31 %tmp_12 to i64

ST_3: mt_kk_new [1/1] 1.37ns
:20  %mt_kk_new = xor i64 %tmp1, %tmp_32_cast

ST_3: stg_43 [1/1] 2.39ns
:21  store i64 %mt_kk_new, i64* %mt_kk_addr, align 8

ST_3: stg_44 [1/1] 2.39ns
:22  store i64 %mt_kk_new, i64* %mt_kkp1_addr, align 8

ST_3: stg_45 [1/1] 2.39ns
:23  store i64 %mt_kk_new, i64* %mt_kkpm_addr, align 8

ST_3: tmp_13 [1/1] 0.00ns
:24  %tmp_13 = call i53 @_ssdm_op_PartSelect.i53.i64.i32.i32(i64 %mt_kk_new, i32 11, i32 63)

ST_3: tmp_14 [1/1] 0.00ns
:25  %tmp_14 = zext i53 %tmp_13 to i64

ST_3: y_1 [1/1] 1.37ns
:26  %y_1 = xor i64 %tmp_14, %mt_kk_new

ST_3: tmp_37 [1/1] 0.00ns
:27  %tmp_37 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %y_1, i32 24)

ST_3: tmp_15 [1/1] 0.00ns
:28  %tmp_15 = call i3 @_ssdm_op_PartSelect.i3.i64.i32.i32(i64 %y_1, i32 19, i32 21)

ST_3: tmp_39 [1/1] 0.00ns
:29  %tmp_39 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %y_1, i32 17)

ST_3: tmp_44 [1/1] 0.00ns
:30  %tmp_44 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %y_1, i32 14)

ST_3: tmp_16 [1/1] 0.00ns
:31  %tmp_16 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %y_1, i32 11, i32 12)

ST_3: tmp_45 [1/1] 0.00ns
:32  %tmp_45 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %y_1, i32 7)

ST_3: tmp_46 [1/1] 0.00ns
:33  %tmp_46 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %y_1, i32 5)

ST_3: tmp_17 [1/1] 0.00ns
:34  %tmp_17 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %y_1, i32 2, i32 3)

ST_3: tmp_47 [1/1] 0.00ns
:35  %tmp_47 = trunc i64 %y_1 to i1

ST_3: tmp_18 [1/1] 0.00ns
:36  %tmp_18 = call i32 @_ssdm_op_BitConcatenate.i32.i1.i2.i3.i1.i1.i2.i1.i1.i2.i3.i1.i1.i1.i1.i2.i1.i1.i7(i1 %tmp_37, i2 0, i3 %tmp_15, i1 false, i1 %tmp_39, i2 0, i1 %tmp_44, i1 false, i2 %tmp_16, i3 0, i1 %tmp_45, i1 false, i1 %tmp_46, i1 false, i2 %tmp_17, i1 false, i1 %tmp_47, i7 0)

ST_3: tmp_36_cast [1/1] 0.00ns
:37  %tmp_36_cast = zext i32 %tmp_18 to i64

ST_3: y_2 [1/1] 1.37ns
:38  %y_2 = xor i64 %tmp_36_cast, %y_1

ST_3: tmp_19 [1/1] 0.00ns
:39  %tmp_19 = call i3 @_ssdm_op_PartSelect.i3.i64.i32.i32(i64 %y_2, i32 14, i32 16)

ST_3: tmp_20 [1/1] 0.00ns
:40  %tmp_20 = call i6 @_ssdm_op_PartSelect.i6.i64.i32.i32(i64 %y_2, i32 7, i32 12)

ST_3: tmp_21 [1/1] 0.00ns
:41  %tmp_21 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %y_2, i32 2, i32 3)

ST_3: tmp_22 [1/1] 0.00ns
:42  %tmp_22 = call i32 @_ssdm_op_BitConcatenate.i32.i3.i1.i6.i3.i2.i17(i3 %tmp_19, i1 false, i6 %tmp_20, i3 0, i2 %tmp_21, i17 0)

ST_3: tmp_38_cast [1/1] 0.00ns
:43  %tmp_38_cast = zext i32 %tmp_22 to i64

ST_3: y_3 [1/1] 1.37ns
:44  %y_3 = xor i64 %tmp_38_cast, %y_2

ST_3: tmp_23 [1/1] 0.00ns
:45  %tmp_23 = call i46 @_ssdm_op_PartSelect.i46.i64.i32.i32(i64 %y_3, i32 18, i32 63)

ST_3: tmp_24 [1/1] 0.00ns
:46  %tmp_24 = zext i46 %tmp_23 to i64

ST_3: y_4 [1/1] 1.37ns
:47  %y_4 = xor i64 %tmp_24, %y_3

ST_3: stg_70 [1/1] 0.00ns
:63  ret i64 %y_4



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
