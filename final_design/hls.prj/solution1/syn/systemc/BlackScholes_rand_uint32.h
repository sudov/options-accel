// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.2
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _BlackScholes_rand_uint32_HH_
#define _BlackScholes_rand_uint32_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "BlackScholes_rand_uint32_mt_kk.h"

namespace ap_rtl {

struct BlackScholes_rand_uint32 : public sc_module {
    // Port declarations 8
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_logic > ap_ce;
    sc_out< sc_lv<64> > ap_return;


    // Module declarations
    BlackScholes_rand_uint32(sc_module_name name);
    SC_HAS_PROCESS(BlackScholes_rand_uint32);

    ~BlackScholes_rand_uint32();

    sc_trace_file* mVcdFile;

    BlackScholes_rand_uint32_mt_kk* mt_kk_U;
    BlackScholes_rand_uint32_mt_kk* mt_kkp1_U;
    BlackScholes_rand_uint32_mt_kk* mt_kkpm_U;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it0;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it1;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it2;
    sc_signal< sc_lv<16> > kk;
    sc_signal< sc_lv<10> > mt_kk_address0;
    sc_signal< sc_logic > mt_kk_ce0;
    sc_signal< sc_lv<64> > mt_kk_q0;
    sc_signal< sc_lv<10> > mt_kk_address1;
    sc_signal< sc_logic > mt_kk_ce1;
    sc_signal< sc_logic > mt_kk_we1;
    sc_signal< sc_lv<64> > mt_kk_d1;
    sc_signal< sc_lv<16> > kk_p1;
    sc_signal< sc_lv<10> > mt_kkp1_address0;
    sc_signal< sc_logic > mt_kkp1_ce0;
    sc_signal< sc_lv<64> > mt_kkp1_q0;
    sc_signal< sc_lv<10> > mt_kkp1_address1;
    sc_signal< sc_logic > mt_kkp1_ce1;
    sc_signal< sc_logic > mt_kkp1_we1;
    sc_signal< sc_lv<64> > mt_kkp1_d1;
    sc_signal< sc_lv<16> > kk_pm;
    sc_signal< sc_lv<10> > mt_kkpm_address0;
    sc_signal< sc_logic > mt_kkpm_ce0;
    sc_signal< sc_lv<64> > mt_kkpm_q0;
    sc_signal< sc_lv<10> > mt_kkpm_address1;
    sc_signal< sc_logic > mt_kkpm_ce1;
    sc_signal< sc_logic > mt_kkpm_we1;
    sc_signal< sc_lv<64> > mt_kkpm_d1;
    sc_signal< sc_lv<10> > mt_kk_addr_reg_535;
    sc_signal< sc_lv<10> > ap_reg_ppstg_mt_kk_addr_reg_535_pp0_it1;
    sc_signal< sc_lv<10> > mt_kkp1_addr_reg_541;
    sc_signal< sc_lv<10> > ap_reg_ppstg_mt_kkp1_addr_reg_541_pp0_it1;
    sc_signal< sc_lv<10> > mt_kkpm_addr_reg_547;
    sc_signal< sc_lv<10> > ap_reg_ppstg_mt_kkpm_addr_reg_547_pp0_it1;
    sc_signal< sc_lv<1> > tmp_1_reg_553;
    sc_signal< sc_lv<30> > tmp_3_reg_558;
    sc_signal< sc_lv<64> > tmp1_fu_291_p2;
    sc_signal< sc_lv<64> > tmp1_reg_563;
    sc_signal< sc_lv<64> > tmp_fu_142_p1;
    sc_signal< sc_lv<64> > tmp_5_fu_151_p1;
    sc_signal< sc_lv<64> > tmp_9_fu_160_p1;
    sc_signal< sc_lv<16> > a_assign_1_fu_183_p3;
    sc_signal< sc_lv<16> > a_assign_3_fu_215_p3;
    sc_signal< sc_lv<16> > a_assign_5_fu_247_p3;
    sc_signal< sc_lv<64> > mt_kk_new_fu_307_p2;
    sc_signal< sc_lv<16> > a_assign_fu_165_p2;
    sc_signal< sc_lv<1> > tmp_i_fu_171_p2;
    sc_signal< sc_lv<16> > tmp_1_i_fu_177_p2;
    sc_signal< sc_lv<16> > a_assign_2_fu_197_p2;
    sc_signal< sc_lv<1> > tmp_i1_fu_203_p2;
    sc_signal< sc_lv<16> > tmp_2_i_fu_209_p2;
    sc_signal< sc_lv<16> > a_assign_4_fu_229_p2;
    sc_signal< sc_lv<1> > tmp_i3_fu_235_p2;
    sc_signal< sc_lv<16> > tmp_3_i_fu_241_p2;
    sc_signal< sc_lv<1> > tmp_7_fu_269_p1;
    sc_signal< sc_lv<64> > mag01_cast_cast_fu_273_p3;
    sc_signal< sc_lv<31> > tmp_s_fu_297_p3;
    sc_signal< sc_lv<64> > tmp_cast_fu_303_p1;
    sc_signal< sc_lv<53> > tmp_2_fu_315_p4;
    sc_signal< sc_lv<64> > tmp_4_fu_325_p1;
    sc_signal< sc_lv<64> > y_1_fu_329_p2;
    sc_signal< sc_lv<1> > tmp_12_fu_335_p3;
    sc_signal< sc_lv<3> > tmp_11_fu_343_p4;
    sc_signal< sc_lv<1> > tmp_13_fu_353_p3;
    sc_signal< sc_lv<1> > tmp_15_fu_361_p3;
    sc_signal< sc_lv<2> > tmp_14_fu_369_p4;
    sc_signal< sc_lv<1> > tmp_16_fu_379_p3;
    sc_signal< sc_lv<1> > tmp_18_fu_387_p3;
    sc_signal< sc_lv<2> > tmp_17_fu_395_p4;
    sc_signal< sc_lv<1> > tmp_23_fu_405_p1;
    sc_signal< sc_lv<32> > tmp_6_fu_409_p19;
    sc_signal< sc_lv<64> > tmp_10_cast_fu_449_p1;
    sc_signal< sc_lv<64> > y_2_fu_453_p2;
    sc_signal< sc_lv<3> > tmp_19_fu_459_p4;
    sc_signal< sc_lv<6> > tmp_20_fu_469_p4;
    sc_signal< sc_lv<2> > tmp_21_fu_479_p4;
    sc_signal< sc_lv<32> > tmp_8_fu_489_p7;
    sc_signal< sc_lv<64> > tmp_12_cast_fu_505_p1;
    sc_signal< sc_lv<64> > y_3_fu_509_p2;
    sc_signal< sc_lv<46> > tmp_10_fu_515_p4;
    sc_signal< sc_lv<64> > tmp_22_fu_525_p1;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_sig_pprstidle_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_pp0_stg0_fsm_0;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<16> ap_const_lv16_26F;
    static const sc_lv<16> ap_const_lv16_FD91;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<64> ap_const_lv64_9908B0DF;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<17> ap_const_lv17_0;
    static const sc_lv<32> ap_const_lv32_12;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_a_assign_1_fu_183_p3();
    void thread_a_assign_2_fu_197_p2();
    void thread_a_assign_3_fu_215_p3();
    void thread_a_assign_4_fu_229_p2();
    void thread_a_assign_5_fu_247_p3();
    void thread_a_assign_fu_165_p2();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_reg_ppiten_pp0_it0();
    void thread_ap_return();
    void thread_ap_sig_pprstidle_pp0();
    void thread_mag01_cast_cast_fu_273_p3();
    void thread_mt_kk_address0();
    void thread_mt_kk_address1();
    void thread_mt_kk_ce0();
    void thread_mt_kk_ce1();
    void thread_mt_kk_d1();
    void thread_mt_kk_new_fu_307_p2();
    void thread_mt_kk_we1();
    void thread_mt_kkp1_address0();
    void thread_mt_kkp1_address1();
    void thread_mt_kkp1_ce0();
    void thread_mt_kkp1_ce1();
    void thread_mt_kkp1_d1();
    void thread_mt_kkp1_we1();
    void thread_mt_kkpm_address0();
    void thread_mt_kkpm_address1();
    void thread_mt_kkpm_ce0();
    void thread_mt_kkpm_ce1();
    void thread_mt_kkpm_d1();
    void thread_mt_kkpm_we1();
    void thread_tmp1_fu_291_p2();
    void thread_tmp_10_cast_fu_449_p1();
    void thread_tmp_10_fu_515_p4();
    void thread_tmp_11_fu_343_p4();
    void thread_tmp_12_cast_fu_505_p1();
    void thread_tmp_12_fu_335_p3();
    void thread_tmp_13_fu_353_p3();
    void thread_tmp_14_fu_369_p4();
    void thread_tmp_15_fu_361_p3();
    void thread_tmp_16_fu_379_p3();
    void thread_tmp_17_fu_395_p4();
    void thread_tmp_18_fu_387_p3();
    void thread_tmp_19_fu_459_p4();
    void thread_tmp_1_i_fu_177_p2();
    void thread_tmp_20_fu_469_p4();
    void thread_tmp_21_fu_479_p4();
    void thread_tmp_22_fu_525_p1();
    void thread_tmp_23_fu_405_p1();
    void thread_tmp_2_fu_315_p4();
    void thread_tmp_2_i_fu_209_p2();
    void thread_tmp_3_i_fu_241_p2();
    void thread_tmp_4_fu_325_p1();
    void thread_tmp_5_fu_151_p1();
    void thread_tmp_6_fu_409_p19();
    void thread_tmp_7_fu_269_p1();
    void thread_tmp_8_fu_489_p7();
    void thread_tmp_9_fu_160_p1();
    void thread_tmp_cast_fu_303_p1();
    void thread_tmp_fu_142_p1();
    void thread_tmp_i1_fu_203_p2();
    void thread_tmp_i3_fu_235_p2();
    void thread_tmp_i_fu_171_p2();
    void thread_tmp_s_fu_297_p3();
    void thread_y_1_fu_329_p2();
    void thread_y_2_fu_453_p2();
    void thread_y_3_fu_509_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
