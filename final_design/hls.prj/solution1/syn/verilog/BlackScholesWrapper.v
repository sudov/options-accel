// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.2
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="BlackScholesWrapper,hls_ip_2014_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.623000,HLS_SYN_LAT=400210,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=0}" *)

module BlackScholesWrapper (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        CallPutFlag,
        S,
        X,
        T,
        r,
        b,
        a_address0,
        a_ce0,
        a_we0,
        a_d0
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 3'b000;
parameter    ap_ST_pp0_stg0_fsm_1 = 3'b1;
parameter    ap_ST_pp0_stg1_fsm_2 = 3'b10;
parameter    ap_ST_pp0_stg2_fsm_3 = 3'b11;
parameter    ap_ST_pp0_stg3_fsm_4 = 3'b100;
parameter    ap_ST_st215_fsm_5 = 3'b101;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv17_0 = 17'b00000000000000000;
parameter    ap_const_lv17_186A0 = 17'b11000011010100000;
parameter    ap_const_lv17_1 = 17'b1;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] CallPutFlag;
input  [63:0] S;
input  [63:0] X;
input  [63:0] T;
input  [63:0] r;
input  [63:0] b;
output  [16:0] a_address0;
output   a_ce0;
output   a_we0;
output  [63:0] a_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg a_ce0;
reg a_we0;
reg   [2:0] ap_CS_fsm = 3'b000;
reg   [16:0] i_reg_116;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it1;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
reg    ap_reg_ppiten_pp0_it3 = 1'b0;
reg    ap_reg_ppiten_pp0_it4 = 1'b0;
reg    ap_reg_ppiten_pp0_it5 = 1'b0;
reg    ap_reg_ppiten_pp0_it6 = 1'b0;
reg    ap_reg_ppiten_pp0_it7 = 1'b0;
reg    ap_reg_ppiten_pp0_it8 = 1'b0;
reg    ap_reg_ppiten_pp0_it9 = 1'b0;
reg    ap_reg_ppiten_pp0_it10 = 1'b0;
reg    ap_reg_ppiten_pp0_it11 = 1'b0;
reg    ap_reg_ppiten_pp0_it12 = 1'b0;
reg    ap_reg_ppiten_pp0_it13 = 1'b0;
reg    ap_reg_ppiten_pp0_it14 = 1'b0;
reg    ap_reg_ppiten_pp0_it15 = 1'b0;
reg    ap_reg_ppiten_pp0_it16 = 1'b0;
reg    ap_reg_ppiten_pp0_it17 = 1'b0;
reg    ap_reg_ppiten_pp0_it18 = 1'b0;
reg    ap_reg_ppiten_pp0_it19 = 1'b0;
reg    ap_reg_ppiten_pp0_it20 = 1'b0;
reg    ap_reg_ppiten_pp0_it21 = 1'b0;
reg    ap_reg_ppiten_pp0_it22 = 1'b0;
reg    ap_reg_ppiten_pp0_it23 = 1'b0;
reg    ap_reg_ppiten_pp0_it24 = 1'b0;
reg    ap_reg_ppiten_pp0_it25 = 1'b0;
reg    ap_reg_ppiten_pp0_it26 = 1'b0;
reg    ap_reg_ppiten_pp0_it27 = 1'b0;
reg    ap_reg_ppiten_pp0_it28 = 1'b0;
reg    ap_reg_ppiten_pp0_it29 = 1'b0;
reg    ap_reg_ppiten_pp0_it30 = 1'b0;
reg    ap_reg_ppiten_pp0_it31 = 1'b0;
reg    ap_reg_ppiten_pp0_it32 = 1'b0;
reg    ap_reg_ppiten_pp0_it33 = 1'b0;
reg    ap_reg_ppiten_pp0_it34 = 1'b0;
reg    ap_reg_ppiten_pp0_it35 = 1'b0;
reg    ap_reg_ppiten_pp0_it36 = 1'b0;
reg    ap_reg_ppiten_pp0_it37 = 1'b0;
reg    ap_reg_ppiten_pp0_it38 = 1'b0;
reg    ap_reg_ppiten_pp0_it39 = 1'b0;
reg    ap_reg_ppiten_pp0_it40 = 1'b0;
reg    ap_reg_ppiten_pp0_it41 = 1'b0;
reg    ap_reg_ppiten_pp0_it42 = 1'b0;
reg    ap_reg_ppiten_pp0_it43 = 1'b0;
reg    ap_reg_ppiten_pp0_it44 = 1'b0;
reg    ap_reg_ppiten_pp0_it45 = 1'b0;
reg    ap_reg_ppiten_pp0_it46 = 1'b0;
reg    ap_reg_ppiten_pp0_it47 = 1'b0;
reg    ap_reg_ppiten_pp0_it48 = 1'b0;
reg    ap_reg_ppiten_pp0_it49 = 1'b0;
reg    ap_reg_ppiten_pp0_it50 = 1'b0;
reg    ap_reg_ppiten_pp0_it51 = 1'b0;
reg    ap_reg_ppiten_pp0_it52 = 1'b0;
reg    ap_reg_ppiten_pp0_it53 = 1'b0;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it2;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it3;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it4;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it5;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it6;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it7;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it8;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it9;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it10;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it11;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it12;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it13;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it14;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it15;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it16;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it17;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it18;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it19;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it20;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it21;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it22;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it23;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it24;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it25;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it26;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it27;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it28;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it29;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it30;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it31;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it32;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it33;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it34;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it35;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it36;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it37;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it38;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it39;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it40;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it41;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it42;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it43;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it44;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it45;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it46;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it47;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it48;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it49;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it50;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it51;
reg   [16:0] ap_reg_ppstg_i_reg_116_pp0_it52;
wire   [0:0] exitcond_fu_151_p2;
reg   [0:0] exitcond_reg_198;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it1;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it2;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it3;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it4;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it5;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it6;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it7;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it8;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it9;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it10;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it11;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it12;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it13;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it14;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it15;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it16;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it17;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it18;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it19;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it20;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it21;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it22;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it23;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it24;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it25;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it26;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it27;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it28;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it29;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it30;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it31;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it32;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it33;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it34;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it35;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it36;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it37;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it38;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it39;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it40;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it41;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it42;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it43;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it44;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it45;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it46;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it47;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it48;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it49;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it50;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it51;
reg   [0:0] ap_reg_ppstg_exitcond_reg_198_pp0_it52;
wire   [16:0] i_1_fu_157_p2;
reg   [16:0] i_1_reg_202;
wire   [63:0] grp_BlackScholes_fu_129_ap_return;
reg   [63:0] tmp_reg_207;
wire    grp_BlackScholes_fu_129_ap_start;
wire    grp_BlackScholes_fu_129_ap_done;
wire    grp_BlackScholes_fu_129_ap_idle;
wire    grp_BlackScholes_fu_129_ap_ready;
wire    grp_BlackScholes_fu_129_ap_ce;
wire   [7:0] grp_BlackScholes_fu_129_CallPutFlag;
wire   [63:0] grp_BlackScholes_fu_129_S;
wire   [63:0] grp_BlackScholes_fu_129_X;
wire   [63:0] grp_BlackScholes_fu_129_T;
wire   [63:0] grp_BlackScholes_fu_129_r;
wire   [63:0] grp_BlackScholes_fu_129_b;
reg   [16:0] i_phi_fu_120_p4;
reg    grp_BlackScholes_fu_129_ap_start_ap_start_reg = 1'b0;
wire   [63:0] tmp_s_fu_163_p1;
reg   [2:0] ap_NS_fsm;


BlackScholes grp_BlackScholes_fu_129(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_BlackScholes_fu_129_ap_start ),
    .ap_done( grp_BlackScholes_fu_129_ap_done ),
    .ap_idle( grp_BlackScholes_fu_129_ap_idle ),
    .ap_ready( grp_BlackScholes_fu_129_ap_ready ),
    .ap_ce( grp_BlackScholes_fu_129_ap_ce ),
    .CallPutFlag( grp_BlackScholes_fu_129_CallPutFlag ),
    .S( grp_BlackScholes_fu_129_S ),
    .X( grp_BlackScholes_fu_129_X ),
    .T( grp_BlackScholes_fu_129_T ),
    .r( grp_BlackScholes_fu_129_r ),
    .b( grp_BlackScholes_fu_129_b ),
    .ap_return( grp_BlackScholes_fu_129_ap_return )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & ~(exitcond_fu_151_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm) & (exitcond_reg_198 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0)) | ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm) & ~(exitcond_reg_198 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it10 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it10
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it10 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it10 <= ap_reg_ppiten_pp0_it9;
        end
    end
end

/// ap_reg_ppiten_pp0_it11 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it11
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it11 <= ap_reg_ppiten_pp0_it10;
        end
    end
end

/// ap_reg_ppiten_pp0_it12 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it12
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it12 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it12 <= ap_reg_ppiten_pp0_it11;
        end
    end
end

/// ap_reg_ppiten_pp0_it13 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it13
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it13 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it13 <= ap_reg_ppiten_pp0_it12;
        end
    end
end

/// ap_reg_ppiten_pp0_it14 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it14
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it14 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it14 <= ap_reg_ppiten_pp0_it13;
        end
    end
end

/// ap_reg_ppiten_pp0_it15 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it15
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it15 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it15 <= ap_reg_ppiten_pp0_it14;
        end
    end
end

/// ap_reg_ppiten_pp0_it16 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it16
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it16 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it16 <= ap_reg_ppiten_pp0_it15;
        end
    end
end

/// ap_reg_ppiten_pp0_it17 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it17
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it17 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it17 <= ap_reg_ppiten_pp0_it16;
        end
    end
end

/// ap_reg_ppiten_pp0_it18 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it18
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it18 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it18 <= ap_reg_ppiten_pp0_it17;
        end
    end
end

/// ap_reg_ppiten_pp0_it19 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it19
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it19 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it19 <= ap_reg_ppiten_pp0_it18;
        end
    end
end

/// ap_reg_ppiten_pp0_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end
    end
end

/// ap_reg_ppiten_pp0_it20 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it20
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it20 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it20 <= ap_reg_ppiten_pp0_it19;
        end
    end
end

/// ap_reg_ppiten_pp0_it21 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it21
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it21 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it21 <= ap_reg_ppiten_pp0_it20;
        end
    end
end

/// ap_reg_ppiten_pp0_it22 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it22
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it22 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it22 <= ap_reg_ppiten_pp0_it21;
        end
    end
end

/// ap_reg_ppiten_pp0_it23 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it23
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it23 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it23 <= ap_reg_ppiten_pp0_it22;
        end
    end
end

/// ap_reg_ppiten_pp0_it24 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it24
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it24 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it24 <= ap_reg_ppiten_pp0_it23;
        end
    end
end

/// ap_reg_ppiten_pp0_it25 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it25
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it25 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it25 <= ap_reg_ppiten_pp0_it24;
        end
    end
end

/// ap_reg_ppiten_pp0_it26 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it26
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it26 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it26 <= ap_reg_ppiten_pp0_it25;
        end
    end
end

/// ap_reg_ppiten_pp0_it27 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it27
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it27 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it27 <= ap_reg_ppiten_pp0_it26;
        end
    end
end

/// ap_reg_ppiten_pp0_it28 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it28
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it28 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it28 <= ap_reg_ppiten_pp0_it27;
        end
    end
end

/// ap_reg_ppiten_pp0_it29 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it29
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it29 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it29 <= ap_reg_ppiten_pp0_it28;
        end
    end
end

/// ap_reg_ppiten_pp0_it3 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it3
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
        end
    end
end

/// ap_reg_ppiten_pp0_it30 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it30
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it30 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it30 <= ap_reg_ppiten_pp0_it29;
        end
    end
end

/// ap_reg_ppiten_pp0_it31 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it31
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it31 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it31 <= ap_reg_ppiten_pp0_it30;
        end
    end
end

/// ap_reg_ppiten_pp0_it32 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it32
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it32 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it32 <= ap_reg_ppiten_pp0_it31;
        end
    end
end

/// ap_reg_ppiten_pp0_it33 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it33
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it33 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it33 <= ap_reg_ppiten_pp0_it32;
        end
    end
end

/// ap_reg_ppiten_pp0_it34 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it34
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it34 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it34 <= ap_reg_ppiten_pp0_it33;
        end
    end
end

/// ap_reg_ppiten_pp0_it35 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it35
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it35 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it35 <= ap_reg_ppiten_pp0_it34;
        end
    end
end

/// ap_reg_ppiten_pp0_it36 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it36
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it36 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it36 <= ap_reg_ppiten_pp0_it35;
        end
    end
end

/// ap_reg_ppiten_pp0_it37 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it37
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it37 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it37 <= ap_reg_ppiten_pp0_it36;
        end
    end
end

/// ap_reg_ppiten_pp0_it38 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it38
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it38 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it38 <= ap_reg_ppiten_pp0_it37;
        end
    end
end

/// ap_reg_ppiten_pp0_it39 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it39
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it39 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it39 <= ap_reg_ppiten_pp0_it38;
        end
    end
end

/// ap_reg_ppiten_pp0_it4 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it4
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
        end
    end
end

/// ap_reg_ppiten_pp0_it40 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it40
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it40 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it40 <= ap_reg_ppiten_pp0_it39;
        end
    end
end

/// ap_reg_ppiten_pp0_it41 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it41
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it41 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it41 <= ap_reg_ppiten_pp0_it40;
        end
    end
end

/// ap_reg_ppiten_pp0_it42 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it42
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it42 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it42 <= ap_reg_ppiten_pp0_it41;
        end
    end
end

/// ap_reg_ppiten_pp0_it43 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it43
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it43 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it43 <= ap_reg_ppiten_pp0_it42;
        end
    end
end

/// ap_reg_ppiten_pp0_it44 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it44
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it44 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it44 <= ap_reg_ppiten_pp0_it43;
        end
    end
end

/// ap_reg_ppiten_pp0_it45 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it45
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it45 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it45 <= ap_reg_ppiten_pp0_it44;
        end
    end
end

/// ap_reg_ppiten_pp0_it46 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it46
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it46 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it46 <= ap_reg_ppiten_pp0_it45;
        end
    end
end

/// ap_reg_ppiten_pp0_it47 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it47
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it47 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it47 <= ap_reg_ppiten_pp0_it46;
        end
    end
end

/// ap_reg_ppiten_pp0_it48 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it48
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it48 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it48 <= ap_reg_ppiten_pp0_it47;
        end
    end
end

/// ap_reg_ppiten_pp0_it49 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it49
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it49 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it49 <= ap_reg_ppiten_pp0_it48;
        end
    end
end

/// ap_reg_ppiten_pp0_it5 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it5
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
        end
    end
end

/// ap_reg_ppiten_pp0_it50 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it50
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it50 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it50 <= ap_reg_ppiten_pp0_it49;
        end
    end
end

/// ap_reg_ppiten_pp0_it51 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it51
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it51 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it51 <= ap_reg_ppiten_pp0_it50;
        end
    end
end

/// ap_reg_ppiten_pp0_it52 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it52
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it52 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it52 <= ap_reg_ppiten_pp0_it51;
        end
    end
end

/// ap_reg_ppiten_pp0_it53 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it53
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it53 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it53 <= ap_reg_ppiten_pp0_it52;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it53 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it6 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it6
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
        end
    end
end

/// ap_reg_ppiten_pp0_it7 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it7
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
        end
    end
end

/// ap_reg_ppiten_pp0_it8 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it8
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
        end
    end
end

/// ap_reg_ppiten_pp0_it9 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it9
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
    end else begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it9 <= ap_reg_ppiten_pp0_it8;
        end
    end
end

/// grp_BlackScholes_fu_129_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_BlackScholes_fu_129_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_BlackScholes_fu_129_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond_fu_151_p2 == ap_const_lv1_0))) begin
            grp_BlackScholes_fu_129_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_BlackScholes_fu_129_ap_ready)) begin
            grp_BlackScholes_fu_129_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_198 == ap_const_lv1_0))) begin
        i_reg_116 <= i_1_reg_202;
    end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
        i_reg_116 <= ap_const_lv17_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
        ap_reg_ppstg_exitcond_reg_198_pp0_it1 <= exitcond_reg_198;
        ap_reg_ppstg_exitcond_reg_198_pp0_it10 <= ap_reg_ppstg_exitcond_reg_198_pp0_it9;
        ap_reg_ppstg_exitcond_reg_198_pp0_it11 <= ap_reg_ppstg_exitcond_reg_198_pp0_it10;
        ap_reg_ppstg_exitcond_reg_198_pp0_it12 <= ap_reg_ppstg_exitcond_reg_198_pp0_it11;
        ap_reg_ppstg_exitcond_reg_198_pp0_it13 <= ap_reg_ppstg_exitcond_reg_198_pp0_it12;
        ap_reg_ppstg_exitcond_reg_198_pp0_it14 <= ap_reg_ppstg_exitcond_reg_198_pp0_it13;
        ap_reg_ppstg_exitcond_reg_198_pp0_it15 <= ap_reg_ppstg_exitcond_reg_198_pp0_it14;
        ap_reg_ppstg_exitcond_reg_198_pp0_it16 <= ap_reg_ppstg_exitcond_reg_198_pp0_it15;
        ap_reg_ppstg_exitcond_reg_198_pp0_it17 <= ap_reg_ppstg_exitcond_reg_198_pp0_it16;
        ap_reg_ppstg_exitcond_reg_198_pp0_it18 <= ap_reg_ppstg_exitcond_reg_198_pp0_it17;
        ap_reg_ppstg_exitcond_reg_198_pp0_it19 <= ap_reg_ppstg_exitcond_reg_198_pp0_it18;
        ap_reg_ppstg_exitcond_reg_198_pp0_it2 <= ap_reg_ppstg_exitcond_reg_198_pp0_it1;
        ap_reg_ppstg_exitcond_reg_198_pp0_it20 <= ap_reg_ppstg_exitcond_reg_198_pp0_it19;
        ap_reg_ppstg_exitcond_reg_198_pp0_it21 <= ap_reg_ppstg_exitcond_reg_198_pp0_it20;
        ap_reg_ppstg_exitcond_reg_198_pp0_it22 <= ap_reg_ppstg_exitcond_reg_198_pp0_it21;
        ap_reg_ppstg_exitcond_reg_198_pp0_it23 <= ap_reg_ppstg_exitcond_reg_198_pp0_it22;
        ap_reg_ppstg_exitcond_reg_198_pp0_it24 <= ap_reg_ppstg_exitcond_reg_198_pp0_it23;
        ap_reg_ppstg_exitcond_reg_198_pp0_it25 <= ap_reg_ppstg_exitcond_reg_198_pp0_it24;
        ap_reg_ppstg_exitcond_reg_198_pp0_it26 <= ap_reg_ppstg_exitcond_reg_198_pp0_it25;
        ap_reg_ppstg_exitcond_reg_198_pp0_it27 <= ap_reg_ppstg_exitcond_reg_198_pp0_it26;
        ap_reg_ppstg_exitcond_reg_198_pp0_it28 <= ap_reg_ppstg_exitcond_reg_198_pp0_it27;
        ap_reg_ppstg_exitcond_reg_198_pp0_it29 <= ap_reg_ppstg_exitcond_reg_198_pp0_it28;
        ap_reg_ppstg_exitcond_reg_198_pp0_it3 <= ap_reg_ppstg_exitcond_reg_198_pp0_it2;
        ap_reg_ppstg_exitcond_reg_198_pp0_it30 <= ap_reg_ppstg_exitcond_reg_198_pp0_it29;
        ap_reg_ppstg_exitcond_reg_198_pp0_it31 <= ap_reg_ppstg_exitcond_reg_198_pp0_it30;
        ap_reg_ppstg_exitcond_reg_198_pp0_it32 <= ap_reg_ppstg_exitcond_reg_198_pp0_it31;
        ap_reg_ppstg_exitcond_reg_198_pp0_it33 <= ap_reg_ppstg_exitcond_reg_198_pp0_it32;
        ap_reg_ppstg_exitcond_reg_198_pp0_it34 <= ap_reg_ppstg_exitcond_reg_198_pp0_it33;
        ap_reg_ppstg_exitcond_reg_198_pp0_it35 <= ap_reg_ppstg_exitcond_reg_198_pp0_it34;
        ap_reg_ppstg_exitcond_reg_198_pp0_it36 <= ap_reg_ppstg_exitcond_reg_198_pp0_it35;
        ap_reg_ppstg_exitcond_reg_198_pp0_it37 <= ap_reg_ppstg_exitcond_reg_198_pp0_it36;
        ap_reg_ppstg_exitcond_reg_198_pp0_it38 <= ap_reg_ppstg_exitcond_reg_198_pp0_it37;
        ap_reg_ppstg_exitcond_reg_198_pp0_it39 <= ap_reg_ppstg_exitcond_reg_198_pp0_it38;
        ap_reg_ppstg_exitcond_reg_198_pp0_it4 <= ap_reg_ppstg_exitcond_reg_198_pp0_it3;
        ap_reg_ppstg_exitcond_reg_198_pp0_it40 <= ap_reg_ppstg_exitcond_reg_198_pp0_it39;
        ap_reg_ppstg_exitcond_reg_198_pp0_it41 <= ap_reg_ppstg_exitcond_reg_198_pp0_it40;
        ap_reg_ppstg_exitcond_reg_198_pp0_it42 <= ap_reg_ppstg_exitcond_reg_198_pp0_it41;
        ap_reg_ppstg_exitcond_reg_198_pp0_it43 <= ap_reg_ppstg_exitcond_reg_198_pp0_it42;
        ap_reg_ppstg_exitcond_reg_198_pp0_it44 <= ap_reg_ppstg_exitcond_reg_198_pp0_it43;
        ap_reg_ppstg_exitcond_reg_198_pp0_it45 <= ap_reg_ppstg_exitcond_reg_198_pp0_it44;
        ap_reg_ppstg_exitcond_reg_198_pp0_it46 <= ap_reg_ppstg_exitcond_reg_198_pp0_it45;
        ap_reg_ppstg_exitcond_reg_198_pp0_it47 <= ap_reg_ppstg_exitcond_reg_198_pp0_it46;
        ap_reg_ppstg_exitcond_reg_198_pp0_it48 <= ap_reg_ppstg_exitcond_reg_198_pp0_it47;
        ap_reg_ppstg_exitcond_reg_198_pp0_it49 <= ap_reg_ppstg_exitcond_reg_198_pp0_it48;
        ap_reg_ppstg_exitcond_reg_198_pp0_it5 <= ap_reg_ppstg_exitcond_reg_198_pp0_it4;
        ap_reg_ppstg_exitcond_reg_198_pp0_it50 <= ap_reg_ppstg_exitcond_reg_198_pp0_it49;
        ap_reg_ppstg_exitcond_reg_198_pp0_it51 <= ap_reg_ppstg_exitcond_reg_198_pp0_it50;
        ap_reg_ppstg_exitcond_reg_198_pp0_it52 <= ap_reg_ppstg_exitcond_reg_198_pp0_it51;
        ap_reg_ppstg_exitcond_reg_198_pp0_it6 <= ap_reg_ppstg_exitcond_reg_198_pp0_it5;
        ap_reg_ppstg_exitcond_reg_198_pp0_it7 <= ap_reg_ppstg_exitcond_reg_198_pp0_it6;
        ap_reg_ppstg_exitcond_reg_198_pp0_it8 <= ap_reg_ppstg_exitcond_reg_198_pp0_it7;
        ap_reg_ppstg_exitcond_reg_198_pp0_it9 <= ap_reg_ppstg_exitcond_reg_198_pp0_it8;
        ap_reg_ppstg_i_reg_116_pp0_it1 <= i_reg_116;
        ap_reg_ppstg_i_reg_116_pp0_it10 <= ap_reg_ppstg_i_reg_116_pp0_it9;
        ap_reg_ppstg_i_reg_116_pp0_it11 <= ap_reg_ppstg_i_reg_116_pp0_it10;
        ap_reg_ppstg_i_reg_116_pp0_it12 <= ap_reg_ppstg_i_reg_116_pp0_it11;
        ap_reg_ppstg_i_reg_116_pp0_it13 <= ap_reg_ppstg_i_reg_116_pp0_it12;
        ap_reg_ppstg_i_reg_116_pp0_it14 <= ap_reg_ppstg_i_reg_116_pp0_it13;
        ap_reg_ppstg_i_reg_116_pp0_it15 <= ap_reg_ppstg_i_reg_116_pp0_it14;
        ap_reg_ppstg_i_reg_116_pp0_it16 <= ap_reg_ppstg_i_reg_116_pp0_it15;
        ap_reg_ppstg_i_reg_116_pp0_it17 <= ap_reg_ppstg_i_reg_116_pp0_it16;
        ap_reg_ppstg_i_reg_116_pp0_it18 <= ap_reg_ppstg_i_reg_116_pp0_it17;
        ap_reg_ppstg_i_reg_116_pp0_it19 <= ap_reg_ppstg_i_reg_116_pp0_it18;
        ap_reg_ppstg_i_reg_116_pp0_it2 <= ap_reg_ppstg_i_reg_116_pp0_it1;
        ap_reg_ppstg_i_reg_116_pp0_it20 <= ap_reg_ppstg_i_reg_116_pp0_it19;
        ap_reg_ppstg_i_reg_116_pp0_it21 <= ap_reg_ppstg_i_reg_116_pp0_it20;
        ap_reg_ppstg_i_reg_116_pp0_it22 <= ap_reg_ppstg_i_reg_116_pp0_it21;
        ap_reg_ppstg_i_reg_116_pp0_it23 <= ap_reg_ppstg_i_reg_116_pp0_it22;
        ap_reg_ppstg_i_reg_116_pp0_it24 <= ap_reg_ppstg_i_reg_116_pp0_it23;
        ap_reg_ppstg_i_reg_116_pp0_it25 <= ap_reg_ppstg_i_reg_116_pp0_it24;
        ap_reg_ppstg_i_reg_116_pp0_it26 <= ap_reg_ppstg_i_reg_116_pp0_it25;
        ap_reg_ppstg_i_reg_116_pp0_it27 <= ap_reg_ppstg_i_reg_116_pp0_it26;
        ap_reg_ppstg_i_reg_116_pp0_it28 <= ap_reg_ppstg_i_reg_116_pp0_it27;
        ap_reg_ppstg_i_reg_116_pp0_it29 <= ap_reg_ppstg_i_reg_116_pp0_it28;
        ap_reg_ppstg_i_reg_116_pp0_it3 <= ap_reg_ppstg_i_reg_116_pp0_it2;
        ap_reg_ppstg_i_reg_116_pp0_it30 <= ap_reg_ppstg_i_reg_116_pp0_it29;
        ap_reg_ppstg_i_reg_116_pp0_it31 <= ap_reg_ppstg_i_reg_116_pp0_it30;
        ap_reg_ppstg_i_reg_116_pp0_it32 <= ap_reg_ppstg_i_reg_116_pp0_it31;
        ap_reg_ppstg_i_reg_116_pp0_it33 <= ap_reg_ppstg_i_reg_116_pp0_it32;
        ap_reg_ppstg_i_reg_116_pp0_it34 <= ap_reg_ppstg_i_reg_116_pp0_it33;
        ap_reg_ppstg_i_reg_116_pp0_it35 <= ap_reg_ppstg_i_reg_116_pp0_it34;
        ap_reg_ppstg_i_reg_116_pp0_it36 <= ap_reg_ppstg_i_reg_116_pp0_it35;
        ap_reg_ppstg_i_reg_116_pp0_it37 <= ap_reg_ppstg_i_reg_116_pp0_it36;
        ap_reg_ppstg_i_reg_116_pp0_it38 <= ap_reg_ppstg_i_reg_116_pp0_it37;
        ap_reg_ppstg_i_reg_116_pp0_it39 <= ap_reg_ppstg_i_reg_116_pp0_it38;
        ap_reg_ppstg_i_reg_116_pp0_it4 <= ap_reg_ppstg_i_reg_116_pp0_it3;
        ap_reg_ppstg_i_reg_116_pp0_it40 <= ap_reg_ppstg_i_reg_116_pp0_it39;
        ap_reg_ppstg_i_reg_116_pp0_it41 <= ap_reg_ppstg_i_reg_116_pp0_it40;
        ap_reg_ppstg_i_reg_116_pp0_it42 <= ap_reg_ppstg_i_reg_116_pp0_it41;
        ap_reg_ppstg_i_reg_116_pp0_it43 <= ap_reg_ppstg_i_reg_116_pp0_it42;
        ap_reg_ppstg_i_reg_116_pp0_it44 <= ap_reg_ppstg_i_reg_116_pp0_it43;
        ap_reg_ppstg_i_reg_116_pp0_it45 <= ap_reg_ppstg_i_reg_116_pp0_it44;
        ap_reg_ppstg_i_reg_116_pp0_it46 <= ap_reg_ppstg_i_reg_116_pp0_it45;
        ap_reg_ppstg_i_reg_116_pp0_it47 <= ap_reg_ppstg_i_reg_116_pp0_it46;
        ap_reg_ppstg_i_reg_116_pp0_it48 <= ap_reg_ppstg_i_reg_116_pp0_it47;
        ap_reg_ppstg_i_reg_116_pp0_it49 <= ap_reg_ppstg_i_reg_116_pp0_it48;
        ap_reg_ppstg_i_reg_116_pp0_it5 <= ap_reg_ppstg_i_reg_116_pp0_it4;
        ap_reg_ppstg_i_reg_116_pp0_it50 <= ap_reg_ppstg_i_reg_116_pp0_it49;
        ap_reg_ppstg_i_reg_116_pp0_it51 <= ap_reg_ppstg_i_reg_116_pp0_it50;
        ap_reg_ppstg_i_reg_116_pp0_it52 <= ap_reg_ppstg_i_reg_116_pp0_it51;
        ap_reg_ppstg_i_reg_116_pp0_it6 <= ap_reg_ppstg_i_reg_116_pp0_it5;
        ap_reg_ppstg_i_reg_116_pp0_it7 <= ap_reg_ppstg_i_reg_116_pp0_it6;
        ap_reg_ppstg_i_reg_116_pp0_it8 <= ap_reg_ppstg_i_reg_116_pp0_it7;
        ap_reg_ppstg_i_reg_116_pp0_it9 <= ap_reg_ppstg_i_reg_116_pp0_it8;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        exitcond_reg_198 <= exitcond_fu_151_p2;
        i_1_reg_202 <= i_1_fu_157_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it52) & (ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm) & (ap_reg_ppstg_exitcond_reg_198_pp0_it52 == ap_const_lv1_0))) begin
        tmp_reg_207 <= grp_BlackScholes_fu_129_ap_return;
    end
end

/// a_ce0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it53)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it53))) begin
        a_ce0 = ap_const_logic_1;
    end else begin
        a_ce0 = ap_const_logic_0;
    end
end

/// a_we0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it53 or ap_reg_ppstg_exitcond_reg_198_pp0_it52)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it53) & (ap_reg_ppstg_exitcond_reg_198_pp0_it52 == ap_const_lv1_0))) begin
        a_we0 = ap_const_logic_1;
    end else begin
        a_we0 = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st215_fsm_5 == ap_CS_fsm)) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st215_fsm_5 == ap_CS_fsm)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// i_phi_fu_120_p4 assign process. ///
always @ (ap_CS_fsm or i_reg_116 or ap_reg_ppiten_pp0_it1 or exitcond_reg_198 or i_1_reg_202)
begin
    if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_198 == ap_const_lv1_0))) begin
        i_phi_fu_120_p4 = i_1_reg_202;
    end else begin
        i_phi_fu_120_p4 = i_reg_116;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it52 or ap_reg_ppiten_pp0_it53 or exitcond_fu_151_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_pp0_stg0_fsm_1 : 
        begin
            if ((~((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it53) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it52)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(exitcond_fu_151_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_2;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(exitcond_fu_151_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_st215_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st215_fsm_5;
            end
        end
        ap_ST_pp0_stg1_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg2_fsm_3;
        end
        ap_ST_pp0_stg2_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg3_fsm_4;
        end
        ap_ST_pp0_stg3_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
        end
        ap_ST_st215_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_address0 = tmp_s_fu_163_p1;
assign a_d0 = tmp_reg_207;
assign exitcond_fu_151_p2 = (i_phi_fu_120_p4 == ap_const_lv17_186A0? 1'b1: 1'b0);
assign grp_BlackScholes_fu_129_CallPutFlag = CallPutFlag;
assign grp_BlackScholes_fu_129_S = S;
assign grp_BlackScholes_fu_129_T = T;
assign grp_BlackScholes_fu_129_X = X;
assign grp_BlackScholes_fu_129_ap_ce = ap_const_logic_1;
assign grp_BlackScholes_fu_129_ap_start = grp_BlackScholes_fu_129_ap_start_ap_start_reg;
assign grp_BlackScholes_fu_129_b = b;
assign grp_BlackScholes_fu_129_r = r;
assign i_1_fu_157_p2 = (i_phi_fu_120_p4 + ap_const_lv17_1);
assign tmp_s_fu_163_p1 = $unsigned(ap_reg_ppstg_i_reg_116_pp0_it52);


endmodule //BlackScholesWrapper

