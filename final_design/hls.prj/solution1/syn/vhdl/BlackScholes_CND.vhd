-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2014.2
-- Copyright (C) 2014 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity BlackScholes_CND is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    X : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of BlackScholes_CND is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_true : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv64_3FF0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111110000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_3FCDA6711871100E : STD_LOGIC_VECTOR (63 downto 0) := "0011111111001101101001100111000100011000011100010001000000001110";
    constant ap_const_lv64_BFD6D1F0E5A8325B : STD_LOGIC_VECTOR (63 downto 0) := "1011111111010110110100011111000011100101101010000011001001011011";
    constant ap_const_lv64_BFE0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "1011111111100000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_3FD470BF3A92F8EC : STD_LOGIC_VECTOR (63 downto 0) := "0011111111010100011100001011111100111010100100101111100011101100";
    constant ap_const_lv64_3FFC80EF025F5E68 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111111100100000001110111100000010010111110101111001101000";
    constant ap_const_lv64_BFFD23DD4EF278D0 : STD_LOGIC_VECTOR (63 downto 0) := "1011111111111101001000111101110101001110111100100111100011010000";
    constant ap_const_lv64_3FF548CDD6F42943 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111110101010010001100110111010110111101000010100101000011";
    constant ap_const_lv64_3FD9884533D43651 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111011001100010000100010100110011110101000011011001010001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";

    signal X_read_reg_182 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_X_read_reg_182_pp0_it1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_X_read_reg_182_pp0_it2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_X_read_reg_182_pp0_it3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_X_read_reg_182_pp0_it4 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_X_read_reg_182_pp0_it5 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_X_read_reg_182_pp0_it6 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_X_read_reg_182_pp0_it7 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_X_read_reg_182_pp0_it8 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_X_read_reg_182_pp0_it9 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_X_read_reg_182_pp0_it10 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_X_read_reg_182_pp0_it11 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_X_read_reg_182_pp0_it12 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_X_read_reg_182_pp0_it13 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_X_read_reg_182_pp0_it14 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_X_read_reg_182_pp0_it15 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_X_read_reg_182_pp0_it16 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_X_read_reg_182_pp0_it17 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_X_read_reg_182_pp0_it18 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_X_read_reg_182_pp0_it19 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_X_read_reg_182_pp0_it20 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_73_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_reg_194 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_47_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_reg_199 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_146_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal K_reg_204 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_K_reg_204_pp0_it22 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_K_reg_204_pp0_it23 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_K_reg_204_pp0_it24 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_K_reg_204_pp0_it25 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_K_reg_204_pp0_it26 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_K_reg_204_pp0_it27 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_K_reg_204_pp0_it28 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_K_reg_204_pp0_it29 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_K_reg_204_pp0_it30 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_K_reg_204_pp0_it31 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_K_reg_204_pp0_it32 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_K_reg_204_pp0_it33 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_K_reg_204_pp0_it34 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_K_reg_204_pp0_it35 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_K_reg_204_pp0_it36 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_K_reg_204_pp0_it37 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_K_reg_204_pp0_it38 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_K_reg_204_pp0_it39 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_141_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_216 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_29_reg_216_pp0_it24 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_29_reg_216_pp0_it25 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_29_reg_216_pp0_it26 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_29_reg_216_pp0_it27 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_29_reg_216_pp0_it28 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_29_reg_216_pp0_it29 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_29_reg_216_pp0_it30 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_29_reg_216_pp0_it31 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_29_reg_216_pp0_it32 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_29_reg_216_pp0_it33 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_29_reg_216_pp0_it34 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_29_reg_216_pp0_it35 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_29_reg_216_pp0_it36 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_29_reg_216_pp0_it37 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_29_reg_216_pp0_it38 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_29_reg_216_pp0_it39 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_29_reg_216_pp0_it40 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_29_reg_216_pp0_it41 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_29_reg_216_pp0_it42 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_29_reg_216_pp0_it43 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_29_reg_216_pp0_it44 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_29_reg_216_pp0_it45 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_29_reg_216_pp0_it46 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_29_reg_216_pp0_it47 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_29_reg_216_pp0_it48 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_29_reg_216_pp0_it49 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_29_reg_216_pp0_it50 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_29_reg_216_pp0_it51 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_29_reg_216_pp0_it52 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_29_reg_216_pp0_it53 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_29_reg_216_pp0_it54 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_29_reg_216_pp0_it55 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_29_reg_216_pp0_it56 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_29_reg_216_pp0_it57 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_29_reg_216_pp0_it58 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_29_reg_216_pp0_it59 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_29_reg_216_pp0_it60 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_29_reg_216_pp0_it61 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_29_reg_216_pp0_it62 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_29_reg_216_pp0_it63 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_29_reg_216_pp0_it64 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_29_reg_216_pp0_it65 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_29_reg_216_pp0_it66 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_29_reg_216_pp0_it67 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_78_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_reg_221 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_82_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal pow7_reg_226 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_86_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_reg_231 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_91_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_reg_236 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_96_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_reg_241 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_20_reg_241_pp0_it34 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_100_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_reg_247 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_105_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_18_reg_252 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_109_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_reg_257 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_52_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_reg_263 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_113_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_21_reg_268 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_56_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_22_reg_273 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_118_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_24_reg_278 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_123_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_26_reg_283 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_151_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_14_reg_288 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_60_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_25_reg_293 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_25_reg_293_pp0_it51 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_127_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_reg_298 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_132_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_reg_303 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_64_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_28_reg_308 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_137_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal w_reg_313 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_w_reg_313_pp0_it63 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_w_reg_313_pp0_it64 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_w_reg_313_pp0_it65 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_w_reg_313_pp0_it66 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_w_reg_313_pp0_it67 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_68_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_30_reg_319 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_47_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_47_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_52_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_52_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_56_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_56_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_60_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_60_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_64_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_64_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_68_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_68_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_73_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_73_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_78_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_78_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_82_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_82_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_86_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_86_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_91_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_91_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_96_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_96_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_100_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_100_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_105_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_105_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_109_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_109_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_113_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_113_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_118_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_118_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_123_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_123_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_127_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_127_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_132_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_132_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_137_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_137_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_141_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_141_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_146_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_151_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_s_fu_156_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_160_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Result_s_fu_164_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_47_ce : STD_LOGIC;
    signal grp_fu_52_ce : STD_LOGIC;
    signal grp_fu_56_ce : STD_LOGIC;
    signal grp_fu_60_ce : STD_LOGIC;
    signal grp_fu_64_ce : STD_LOGIC;
    signal grp_fu_68_ce : STD_LOGIC;
    signal grp_fu_73_ce : STD_LOGIC;
    signal grp_fu_78_ce : STD_LOGIC;
    signal grp_fu_82_ce : STD_LOGIC;
    signal grp_fu_86_ce : STD_LOGIC;
    signal grp_fu_91_ce : STD_LOGIC;
    signal grp_fu_96_ce : STD_LOGIC;
    signal grp_fu_100_ce : STD_LOGIC;
    signal grp_fu_105_ce : STD_LOGIC;
    signal grp_fu_109_ce : STD_LOGIC;
    signal grp_fu_113_ce : STD_LOGIC;
    signal grp_fu_118_ce : STD_LOGIC;
    signal grp_fu_123_ce : STD_LOGIC;
    signal grp_fu_127_ce : STD_LOGIC;
    signal grp_fu_132_ce : STD_LOGIC;
    signal grp_fu_137_ce : STD_LOGIC;
    signal grp_fu_141_ce : STD_LOGIC;
    signal grp_fu_141_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_146_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_146_ce : STD_LOGIC;
    signal grp_fu_151_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_151_ce : STD_LOGIC;

    component BlackScholes_dadd_64ns_64ns_64_5_full_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component BlackScholes_dsub_64ns_64ns_64_5_full_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component BlackScholes_dmul_64ns_64ns_64_6_max_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component BlackScholes_dcmp_64ns_64ns_1_3 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component BlackScholes_drecip_64ns_64ns_64_11 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component BlackScholes_dexp_64ns_64ns_64_18_full_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    BlackScholes_dadd_64ns_64ns_64_5_full_dsp_U2 : component BlackScholes_dadd_64ns_64ns_64_5_full_dsp
    generic map (
        ID => 2,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_47_p0,
        din1 => grp_fu_47_p1,
        ce => grp_fu_47_ce,
        dout => grp_fu_47_p2);

    BlackScholes_dadd_64ns_64ns_64_5_full_dsp_U3 : component BlackScholes_dadd_64ns_64ns_64_5_full_dsp
    generic map (
        ID => 3,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_52_p0,
        din1 => grp_fu_52_p1,
        ce => grp_fu_52_ce,
        dout => grp_fu_52_p2);

    BlackScholes_dadd_64ns_64ns_64_5_full_dsp_U4 : component BlackScholes_dadd_64ns_64ns_64_5_full_dsp
    generic map (
        ID => 4,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_56_p0,
        din1 => grp_fu_56_p1,
        ce => grp_fu_56_ce,
        dout => grp_fu_56_p2);

    BlackScholes_dadd_64ns_64ns_64_5_full_dsp_U5 : component BlackScholes_dadd_64ns_64ns_64_5_full_dsp
    generic map (
        ID => 5,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_60_p0,
        din1 => grp_fu_60_p1,
        ce => grp_fu_60_ce,
        dout => grp_fu_60_p2);

    BlackScholes_dadd_64ns_64ns_64_5_full_dsp_U6 : component BlackScholes_dadd_64ns_64ns_64_5_full_dsp
    generic map (
        ID => 6,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_64_p0,
        din1 => grp_fu_64_p1,
        ce => grp_fu_64_ce,
        dout => grp_fu_64_p2);

    BlackScholes_dsub_64ns_64ns_64_5_full_dsp_U7 : component BlackScholes_dsub_64ns_64ns_64_5_full_dsp
    generic map (
        ID => 7,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_68_p0,
        din1 => grp_fu_68_p1,
        ce => grp_fu_68_ce,
        dout => grp_fu_68_p2);

    BlackScholes_dmul_64ns_64ns_64_6_max_dsp_U8 : component BlackScholes_dmul_64ns_64ns_64_6_max_dsp
    generic map (
        ID => 8,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_73_p0,
        din1 => grp_fu_73_p1,
        ce => grp_fu_73_ce,
        dout => grp_fu_73_p2);

    BlackScholes_dmul_64ns_64ns_64_6_max_dsp_U9 : component BlackScholes_dmul_64ns_64ns_64_6_max_dsp
    generic map (
        ID => 9,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_78_p0,
        din1 => grp_fu_78_p1,
        ce => grp_fu_78_ce,
        dout => grp_fu_78_p2);

    BlackScholes_dmul_64ns_64ns_64_6_max_dsp_U10 : component BlackScholes_dmul_64ns_64ns_64_6_max_dsp
    generic map (
        ID => 10,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_82_p0,
        din1 => grp_fu_82_p1,
        ce => grp_fu_82_ce,
        dout => grp_fu_82_p2);

    BlackScholes_dmul_64ns_64ns_64_6_max_dsp_U11 : component BlackScholes_dmul_64ns_64ns_64_6_max_dsp
    generic map (
        ID => 11,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_86_p0,
        din1 => grp_fu_86_p1,
        ce => grp_fu_86_ce,
        dout => grp_fu_86_p2);

    BlackScholes_dmul_64ns_64ns_64_6_max_dsp_U12 : component BlackScholes_dmul_64ns_64ns_64_6_max_dsp
    generic map (
        ID => 12,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_91_p0,
        din1 => grp_fu_91_p1,
        ce => grp_fu_91_ce,
        dout => grp_fu_91_p2);

    BlackScholes_dmul_64ns_64ns_64_6_max_dsp_U13 : component BlackScholes_dmul_64ns_64ns_64_6_max_dsp
    generic map (
        ID => 13,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_96_p0,
        din1 => grp_fu_96_p1,
        ce => grp_fu_96_ce,
        dout => grp_fu_96_p2);

    BlackScholes_dmul_64ns_64ns_64_6_max_dsp_U14 : component BlackScholes_dmul_64ns_64ns_64_6_max_dsp
    generic map (
        ID => 14,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_100_p0,
        din1 => grp_fu_100_p1,
        ce => grp_fu_100_ce,
        dout => grp_fu_100_p2);

    BlackScholes_dmul_64ns_64ns_64_6_max_dsp_U15 : component BlackScholes_dmul_64ns_64ns_64_6_max_dsp
    generic map (
        ID => 15,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_105_p0,
        din1 => grp_fu_105_p1,
        ce => grp_fu_105_ce,
        dout => grp_fu_105_p2);

    BlackScholes_dmul_64ns_64ns_64_6_max_dsp_U16 : component BlackScholes_dmul_64ns_64ns_64_6_max_dsp
    generic map (
        ID => 16,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_109_p0,
        din1 => grp_fu_109_p1,
        ce => grp_fu_109_ce,
        dout => grp_fu_109_p2);

    BlackScholes_dmul_64ns_64ns_64_6_max_dsp_U17 : component BlackScholes_dmul_64ns_64ns_64_6_max_dsp
    generic map (
        ID => 17,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_113_p0,
        din1 => grp_fu_113_p1,
        ce => grp_fu_113_ce,
        dout => grp_fu_113_p2);

    BlackScholes_dmul_64ns_64ns_64_6_max_dsp_U18 : component BlackScholes_dmul_64ns_64ns_64_6_max_dsp
    generic map (
        ID => 18,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_118_p0,
        din1 => grp_fu_118_p1,
        ce => grp_fu_118_ce,
        dout => grp_fu_118_p2);

    BlackScholes_dmul_64ns_64ns_64_6_max_dsp_U19 : component BlackScholes_dmul_64ns_64ns_64_6_max_dsp
    generic map (
        ID => 19,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_123_p0,
        din1 => grp_fu_123_p1,
        ce => grp_fu_123_ce,
        dout => grp_fu_123_p2);

    BlackScholes_dmul_64ns_64ns_64_6_max_dsp_U20 : component BlackScholes_dmul_64ns_64ns_64_6_max_dsp
    generic map (
        ID => 20,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_127_p0,
        din1 => grp_fu_127_p1,
        ce => grp_fu_127_ce,
        dout => grp_fu_127_p2);

    BlackScholes_dmul_64ns_64ns_64_6_max_dsp_U21 : component BlackScholes_dmul_64ns_64ns_64_6_max_dsp
    generic map (
        ID => 21,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_132_p0,
        din1 => grp_fu_132_p1,
        ce => grp_fu_132_ce,
        dout => grp_fu_132_p2);

    BlackScholes_dmul_64ns_64ns_64_6_max_dsp_U22 : component BlackScholes_dmul_64ns_64ns_64_6_max_dsp
    generic map (
        ID => 22,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_137_p0,
        din1 => grp_fu_137_p1,
        ce => grp_fu_137_ce,
        dout => grp_fu_137_p2);

    BlackScholes_dcmp_64ns_64ns_1_3_U23 : component BlackScholes_dcmp_64ns_64ns_1_3
    generic map (
        ID => 23,
        NUM_STAGE => 3,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_141_p0,
        din1 => grp_fu_141_p1,
        ce => grp_fu_141_ce,
        opcode => grp_fu_141_opcode,
        dout => grp_fu_141_p2);

    BlackScholes_drecip_64ns_64ns_64_11_U24 : component BlackScholes_drecip_64ns_64ns_64_11
    generic map (
        ID => 24,
        NUM_STAGE => 11,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_146_p0,
        din1 => grp_fu_146_p1,
        ce => grp_fu_146_ce,
        dout => grp_fu_146_p2);

    BlackScholes_dexp_64ns_64ns_64_18_full_dsp_U25 : component BlackScholes_dexp_64ns_64ns_64_18_full_dsp
    generic map (
        ID => 25,
        NUM_STAGE => 18,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_151_p0,
        din1 => grp_fu_151_p1,
        ce => grp_fu_151_ce,
        dout => grp_fu_151_p2);





    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                K_reg_204 <= grp_fu_146_p2;
                X_read_reg_182 <= X;
                ap_reg_ppstg_K_reg_204_pp0_it22 <= K_reg_204;
                ap_reg_ppstg_K_reg_204_pp0_it23 <= ap_reg_ppstg_K_reg_204_pp0_it22;
                ap_reg_ppstg_K_reg_204_pp0_it24 <= ap_reg_ppstg_K_reg_204_pp0_it23;
                ap_reg_ppstg_K_reg_204_pp0_it25 <= ap_reg_ppstg_K_reg_204_pp0_it24;
                ap_reg_ppstg_K_reg_204_pp0_it26 <= ap_reg_ppstg_K_reg_204_pp0_it25;
                ap_reg_ppstg_K_reg_204_pp0_it27 <= ap_reg_ppstg_K_reg_204_pp0_it26;
                ap_reg_ppstg_K_reg_204_pp0_it28 <= ap_reg_ppstg_K_reg_204_pp0_it27;
                ap_reg_ppstg_K_reg_204_pp0_it29 <= ap_reg_ppstg_K_reg_204_pp0_it28;
                ap_reg_ppstg_K_reg_204_pp0_it30 <= ap_reg_ppstg_K_reg_204_pp0_it29;
                ap_reg_ppstg_K_reg_204_pp0_it31 <= ap_reg_ppstg_K_reg_204_pp0_it30;
                ap_reg_ppstg_K_reg_204_pp0_it32 <= ap_reg_ppstg_K_reg_204_pp0_it31;
                ap_reg_ppstg_K_reg_204_pp0_it33 <= ap_reg_ppstg_K_reg_204_pp0_it32;
                ap_reg_ppstg_K_reg_204_pp0_it34 <= ap_reg_ppstg_K_reg_204_pp0_it33;
                ap_reg_ppstg_K_reg_204_pp0_it35 <= ap_reg_ppstg_K_reg_204_pp0_it34;
                ap_reg_ppstg_K_reg_204_pp0_it36 <= ap_reg_ppstg_K_reg_204_pp0_it35;
                ap_reg_ppstg_K_reg_204_pp0_it37 <= ap_reg_ppstg_K_reg_204_pp0_it36;
                ap_reg_ppstg_K_reg_204_pp0_it38 <= ap_reg_ppstg_K_reg_204_pp0_it37;
                ap_reg_ppstg_K_reg_204_pp0_it39 <= ap_reg_ppstg_K_reg_204_pp0_it38;
                ap_reg_ppstg_X_read_reg_182_pp0_it1 <= X_read_reg_182;
                ap_reg_ppstg_X_read_reg_182_pp0_it10 <= ap_reg_ppstg_X_read_reg_182_pp0_it9;
                ap_reg_ppstg_X_read_reg_182_pp0_it11 <= ap_reg_ppstg_X_read_reg_182_pp0_it10;
                ap_reg_ppstg_X_read_reg_182_pp0_it12 <= ap_reg_ppstg_X_read_reg_182_pp0_it11;
                ap_reg_ppstg_X_read_reg_182_pp0_it13 <= ap_reg_ppstg_X_read_reg_182_pp0_it12;
                ap_reg_ppstg_X_read_reg_182_pp0_it14 <= ap_reg_ppstg_X_read_reg_182_pp0_it13;
                ap_reg_ppstg_X_read_reg_182_pp0_it15 <= ap_reg_ppstg_X_read_reg_182_pp0_it14;
                ap_reg_ppstg_X_read_reg_182_pp0_it16 <= ap_reg_ppstg_X_read_reg_182_pp0_it15;
                ap_reg_ppstg_X_read_reg_182_pp0_it17 <= ap_reg_ppstg_X_read_reg_182_pp0_it16;
                ap_reg_ppstg_X_read_reg_182_pp0_it18 <= ap_reg_ppstg_X_read_reg_182_pp0_it17;
                ap_reg_ppstg_X_read_reg_182_pp0_it19 <= ap_reg_ppstg_X_read_reg_182_pp0_it18;
                ap_reg_ppstg_X_read_reg_182_pp0_it2 <= ap_reg_ppstg_X_read_reg_182_pp0_it1;
                ap_reg_ppstg_X_read_reg_182_pp0_it20 <= ap_reg_ppstg_X_read_reg_182_pp0_it19;
                ap_reg_ppstg_X_read_reg_182_pp0_it3 <= ap_reg_ppstg_X_read_reg_182_pp0_it2;
                ap_reg_ppstg_X_read_reg_182_pp0_it4 <= ap_reg_ppstg_X_read_reg_182_pp0_it3;
                ap_reg_ppstg_X_read_reg_182_pp0_it5 <= ap_reg_ppstg_X_read_reg_182_pp0_it4;
                ap_reg_ppstg_X_read_reg_182_pp0_it6 <= ap_reg_ppstg_X_read_reg_182_pp0_it5;
                ap_reg_ppstg_X_read_reg_182_pp0_it7 <= ap_reg_ppstg_X_read_reg_182_pp0_it6;
                ap_reg_ppstg_X_read_reg_182_pp0_it8 <= ap_reg_ppstg_X_read_reg_182_pp0_it7;
                ap_reg_ppstg_X_read_reg_182_pp0_it9 <= ap_reg_ppstg_X_read_reg_182_pp0_it8;
                ap_reg_ppstg_tmp_20_reg_241_pp0_it34 <= tmp_20_reg_241;
                ap_reg_ppstg_tmp_25_reg_293_pp0_it51 <= tmp_25_reg_293;
                ap_reg_ppstg_tmp_29_reg_216_pp0_it24 <= tmp_29_reg_216;
                ap_reg_ppstg_tmp_29_reg_216_pp0_it25 <= ap_reg_ppstg_tmp_29_reg_216_pp0_it24;
                ap_reg_ppstg_tmp_29_reg_216_pp0_it26 <= ap_reg_ppstg_tmp_29_reg_216_pp0_it25;
                ap_reg_ppstg_tmp_29_reg_216_pp0_it27 <= ap_reg_ppstg_tmp_29_reg_216_pp0_it26;
                ap_reg_ppstg_tmp_29_reg_216_pp0_it28 <= ap_reg_ppstg_tmp_29_reg_216_pp0_it27;
                ap_reg_ppstg_tmp_29_reg_216_pp0_it29 <= ap_reg_ppstg_tmp_29_reg_216_pp0_it28;
                ap_reg_ppstg_tmp_29_reg_216_pp0_it30 <= ap_reg_ppstg_tmp_29_reg_216_pp0_it29;
                ap_reg_ppstg_tmp_29_reg_216_pp0_it31 <= ap_reg_ppstg_tmp_29_reg_216_pp0_it30;
                ap_reg_ppstg_tmp_29_reg_216_pp0_it32 <= ap_reg_ppstg_tmp_29_reg_216_pp0_it31;
                ap_reg_ppstg_tmp_29_reg_216_pp0_it33 <= ap_reg_ppstg_tmp_29_reg_216_pp0_it32;
                ap_reg_ppstg_tmp_29_reg_216_pp0_it34 <= ap_reg_ppstg_tmp_29_reg_216_pp0_it33;
                ap_reg_ppstg_tmp_29_reg_216_pp0_it35 <= ap_reg_ppstg_tmp_29_reg_216_pp0_it34;
                ap_reg_ppstg_tmp_29_reg_216_pp0_it36 <= ap_reg_ppstg_tmp_29_reg_216_pp0_it35;
                ap_reg_ppstg_tmp_29_reg_216_pp0_it37 <= ap_reg_ppstg_tmp_29_reg_216_pp0_it36;
                ap_reg_ppstg_tmp_29_reg_216_pp0_it38 <= ap_reg_ppstg_tmp_29_reg_216_pp0_it37;
                ap_reg_ppstg_tmp_29_reg_216_pp0_it39 <= ap_reg_ppstg_tmp_29_reg_216_pp0_it38;
                ap_reg_ppstg_tmp_29_reg_216_pp0_it40 <= ap_reg_ppstg_tmp_29_reg_216_pp0_it39;
                ap_reg_ppstg_tmp_29_reg_216_pp0_it41 <= ap_reg_ppstg_tmp_29_reg_216_pp0_it40;
                ap_reg_ppstg_tmp_29_reg_216_pp0_it42 <= ap_reg_ppstg_tmp_29_reg_216_pp0_it41;
                ap_reg_ppstg_tmp_29_reg_216_pp0_it43 <= ap_reg_ppstg_tmp_29_reg_216_pp0_it42;
                ap_reg_ppstg_tmp_29_reg_216_pp0_it44 <= ap_reg_ppstg_tmp_29_reg_216_pp0_it43;
                ap_reg_ppstg_tmp_29_reg_216_pp0_it45 <= ap_reg_ppstg_tmp_29_reg_216_pp0_it44;
                ap_reg_ppstg_tmp_29_reg_216_pp0_it46 <= ap_reg_ppstg_tmp_29_reg_216_pp0_it45;
                ap_reg_ppstg_tmp_29_reg_216_pp0_it47 <= ap_reg_ppstg_tmp_29_reg_216_pp0_it46;
                ap_reg_ppstg_tmp_29_reg_216_pp0_it48 <= ap_reg_ppstg_tmp_29_reg_216_pp0_it47;
                ap_reg_ppstg_tmp_29_reg_216_pp0_it49 <= ap_reg_ppstg_tmp_29_reg_216_pp0_it48;
                ap_reg_ppstg_tmp_29_reg_216_pp0_it50 <= ap_reg_ppstg_tmp_29_reg_216_pp0_it49;
                ap_reg_ppstg_tmp_29_reg_216_pp0_it51 <= ap_reg_ppstg_tmp_29_reg_216_pp0_it50;
                ap_reg_ppstg_tmp_29_reg_216_pp0_it52 <= ap_reg_ppstg_tmp_29_reg_216_pp0_it51;
                ap_reg_ppstg_tmp_29_reg_216_pp0_it53 <= ap_reg_ppstg_tmp_29_reg_216_pp0_it52;
                ap_reg_ppstg_tmp_29_reg_216_pp0_it54 <= ap_reg_ppstg_tmp_29_reg_216_pp0_it53;
                ap_reg_ppstg_tmp_29_reg_216_pp0_it55 <= ap_reg_ppstg_tmp_29_reg_216_pp0_it54;
                ap_reg_ppstg_tmp_29_reg_216_pp0_it56 <= ap_reg_ppstg_tmp_29_reg_216_pp0_it55;
                ap_reg_ppstg_tmp_29_reg_216_pp0_it57 <= ap_reg_ppstg_tmp_29_reg_216_pp0_it56;
                ap_reg_ppstg_tmp_29_reg_216_pp0_it58 <= ap_reg_ppstg_tmp_29_reg_216_pp0_it57;
                ap_reg_ppstg_tmp_29_reg_216_pp0_it59 <= ap_reg_ppstg_tmp_29_reg_216_pp0_it58;
                ap_reg_ppstg_tmp_29_reg_216_pp0_it60 <= ap_reg_ppstg_tmp_29_reg_216_pp0_it59;
                ap_reg_ppstg_tmp_29_reg_216_pp0_it61 <= ap_reg_ppstg_tmp_29_reg_216_pp0_it60;
                ap_reg_ppstg_tmp_29_reg_216_pp0_it62 <= ap_reg_ppstg_tmp_29_reg_216_pp0_it61;
                ap_reg_ppstg_tmp_29_reg_216_pp0_it63 <= ap_reg_ppstg_tmp_29_reg_216_pp0_it62;
                ap_reg_ppstg_tmp_29_reg_216_pp0_it64 <= ap_reg_ppstg_tmp_29_reg_216_pp0_it63;
                ap_reg_ppstg_tmp_29_reg_216_pp0_it65 <= ap_reg_ppstg_tmp_29_reg_216_pp0_it64;
                ap_reg_ppstg_tmp_29_reg_216_pp0_it66 <= ap_reg_ppstg_tmp_29_reg_216_pp0_it65;
                ap_reg_ppstg_tmp_29_reg_216_pp0_it67 <= ap_reg_ppstg_tmp_29_reg_216_pp0_it66;
                ap_reg_ppstg_w_reg_313_pp0_it63 <= w_reg_313;
                ap_reg_ppstg_w_reg_313_pp0_it64 <= ap_reg_ppstg_w_reg_313_pp0_it63;
                ap_reg_ppstg_w_reg_313_pp0_it65 <= ap_reg_ppstg_w_reg_313_pp0_it64;
                ap_reg_ppstg_w_reg_313_pp0_it66 <= ap_reg_ppstg_w_reg_313_pp0_it65;
                ap_reg_ppstg_w_reg_313_pp0_it67 <= ap_reg_ppstg_w_reg_313_pp0_it66;
                pow7_reg_226 <= grp_fu_82_p2;
                tmp_11_reg_199 <= grp_fu_47_p2;
                tmp_12_reg_221 <= grp_fu_78_p2;
                tmp_13_reg_236 <= grp_fu_91_p2;
                tmp_14_reg_288 <= grp_fu_151_p2;
                tmp_15_reg_303 <= grp_fu_132_p2;
                tmp_16_reg_247 <= grp_fu_100_p2;
                tmp_17_reg_231 <= grp_fu_86_p2;
                tmp_18_reg_252 <= grp_fu_105_p2;
                tmp_19_reg_263 <= grp_fu_52_p2;
                tmp_20_reg_241 <= grp_fu_96_p2;
                tmp_21_reg_268 <= grp_fu_113_p2;
                tmp_22_reg_273 <= grp_fu_56_p2;
                tmp_23_reg_257 <= grp_fu_109_p2;
                tmp_24_reg_278 <= grp_fu_118_p2;
                tmp_25_reg_293 <= grp_fu_60_p2;
                tmp_26_reg_283 <= grp_fu_123_p2;
                tmp_27_reg_298 <= grp_fu_127_p2;
                tmp_28_reg_308 <= grp_fu_64_p2;
                tmp_29_reg_216 <= grp_fu_141_p2;
                tmp_s_reg_194 <= grp_fu_73_p2;
                w_reg_313 <= grp_fu_137_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_reg_ppstg_tmp_29_reg_216_pp0_it66 = ap_const_lv1_0))) then
                tmp_30_reg_319 <= grp_fu_68_p2;
            end if;
        end if;
    end process;
    ap_return <= 
        ap_reg_ppstg_w_reg_313_pp0_it67 when (ap_reg_ppstg_tmp_29_reg_216_pp0_it67(0) = '1') else 
        tmp_30_reg_319;

    -- grp_fu_100_ce assign process. --
    grp_fu_100_ce_assign_proc : process(ap_ce)
    begin
        if (not((ap_const_logic_1 = ap_ce))) then 
            grp_fu_100_ce <= ap_const_logic_0;
        else 
            grp_fu_100_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_100_p0 <= ap_reg_ppstg_K_reg_204_pp0_it29;
    grp_fu_100_p1 <= ap_const_lv64_3FD470BF3A92F8EC;

    -- grp_fu_105_ce assign process. --
    grp_fu_105_ce_assign_proc : process(ap_ce)
    begin
        if (not((ap_const_logic_1 = ap_ce))) then 
            grp_fu_105_ce <= ap_const_logic_0;
        else 
            grp_fu_105_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_105_p0 <= tmp_17_reg_231;
    grp_fu_105_p1 <= ap_reg_ppstg_K_reg_204_pp0_it29;

    -- grp_fu_109_ce assign process. --
    grp_fu_109_ce_assign_proc : process(ap_ce)
    begin
        if (not((ap_const_logic_1 = ap_ce))) then 
            grp_fu_109_ce <= ap_const_logic_0;
        else 
            grp_fu_109_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_109_p0 <= tmp_20_reg_241;
    grp_fu_109_p1 <= ap_reg_ppstg_K_reg_204_pp0_it33;

    -- grp_fu_113_ce assign process. --
    grp_fu_113_ce_assign_proc : process(ap_ce)
    begin
        if (not((ap_const_logic_1 = ap_ce))) then 
            grp_fu_113_ce <= ap_const_logic_0;
        else 
            grp_fu_113_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_113_p0 <= ap_reg_ppstg_tmp_20_reg_241_pp0_it34;
    grp_fu_113_p1 <= ap_const_lv64_3FFC80EF025F5E68;

    -- grp_fu_118_ce assign process. --
    grp_fu_118_ce_assign_proc : process(ap_ce)
    begin
        if (not((ap_const_logic_1 = ap_ce))) then 
            grp_fu_118_ce <= ap_const_logic_0;
        else 
            grp_fu_118_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_118_p0 <= tmp_23_reg_257;
    grp_fu_118_p1 <= ap_const_lv64_BFFD23DD4EF278D0;

    -- grp_fu_123_ce assign process. --
    grp_fu_123_ce_assign_proc : process(ap_ce)
    begin
        if (not((ap_const_logic_1 = ap_ce))) then 
            grp_fu_123_ce <= ap_const_logic_0;
        else 
            grp_fu_123_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_123_p0 <= tmp_23_reg_257;
    grp_fu_123_p1 <= ap_reg_ppstg_K_reg_204_pp0_it39;

    -- grp_fu_127_ce assign process. --
    grp_fu_127_ce_assign_proc : process(ap_ce)
    begin
        if (not((ap_const_logic_1 = ap_ce))) then 
            grp_fu_127_ce <= ap_const_logic_0;
        else 
            grp_fu_127_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_127_p0 <= tmp_26_reg_283;
    grp_fu_127_p1 <= ap_const_lv64_3FF548CDD6F42943;

    -- grp_fu_132_ce assign process. --
    grp_fu_132_ce_assign_proc : process(ap_ce)
    begin
        if (not((ap_const_logic_1 = ap_ce))) then 
            grp_fu_132_ce <= ap_const_logic_0;
        else 
            grp_fu_132_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_132_p0 <= tmp_14_reg_288;
    grp_fu_132_p1 <= ap_const_lv64_3FD9884533D43651;

    -- grp_fu_137_ce assign process. --
    grp_fu_137_ce_assign_proc : process(ap_ce)
    begin
        if (not((ap_const_logic_1 = ap_ce))) then 
            grp_fu_137_ce <= ap_const_logic_0;
        else 
            grp_fu_137_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_137_p0 <= tmp_15_reg_303;
    grp_fu_137_p1 <= tmp_28_reg_308;

    -- grp_fu_141_ce assign process. --
    grp_fu_141_ce_assign_proc : process(ap_ce)
    begin
        if (not((ap_const_logic_1 = ap_ce))) then 
            grp_fu_141_ce <= ap_const_logic_0;
        else 
            grp_fu_141_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_141_opcode <= ap_const_lv5_4;
    grp_fu_141_p0 <= ap_reg_ppstg_X_read_reg_182_pp0_it20;
    grp_fu_141_p1 <= ap_const_lv64_0;

    -- grp_fu_146_ce assign process. --
    grp_fu_146_ce_assign_proc : process(ap_ce)
    begin
        if (not((ap_const_logic_1 = ap_ce))) then 
            grp_fu_146_ce <= ap_const_logic_0;
        else 
            grp_fu_146_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_146_p0 <= ap_const_lv64_0;
    grp_fu_146_p1 <= tmp_11_reg_199;

    -- grp_fu_151_ce assign process. --
    grp_fu_151_ce_assign_proc : process(ap_ce)
    begin
        if (not((ap_const_logic_1 = ap_ce))) then 
            grp_fu_151_ce <= ap_const_logic_0;
        else 
            grp_fu_151_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_151_p0 <= ap_const_lv64_0;
    grp_fu_151_p1 <= tmp_13_reg_236;

    -- grp_fu_47_ce assign process. --
    grp_fu_47_ce_assign_proc : process(ap_ce)
    begin
        if (not((ap_const_logic_1 = ap_ce))) then 
            grp_fu_47_ce <= ap_const_logic_0;
        else 
            grp_fu_47_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_47_p0 <= tmp_s_reg_194;
    grp_fu_47_p1 <= ap_const_lv64_3FF0000000000000;

    -- grp_fu_52_ce assign process. --
    grp_fu_52_ce_assign_proc : process(ap_ce)
    begin
        if (not((ap_const_logic_1 = ap_ce))) then 
            grp_fu_52_ce <= ap_const_logic_0;
        else 
            grp_fu_52_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_52_p0 <= tmp_16_reg_247;
    grp_fu_52_p1 <= tmp_18_reg_252;

    -- grp_fu_56_ce assign process. --
    grp_fu_56_ce_assign_proc : process(ap_ce)
    begin
        if (not((ap_const_logic_1 = ap_ce))) then 
            grp_fu_56_ce <= ap_const_logic_0;
        else 
            grp_fu_56_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_56_p0 <= tmp_19_reg_263;
    grp_fu_56_p1 <= tmp_21_reg_268;

    -- grp_fu_60_ce assign process. --
    grp_fu_60_ce_assign_proc : process(ap_ce)
    begin
        if (not((ap_const_logic_1 = ap_ce))) then 
            grp_fu_60_ce <= ap_const_logic_0;
        else 
            grp_fu_60_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_60_p0 <= tmp_22_reg_273;
    grp_fu_60_p1 <= tmp_24_reg_278;

    -- grp_fu_64_ce assign process. --
    grp_fu_64_ce_assign_proc : process(ap_ce)
    begin
        if (not((ap_const_logic_1 = ap_ce))) then 
            grp_fu_64_ce <= ap_const_logic_0;
        else 
            grp_fu_64_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_64_p0 <= ap_reg_ppstg_tmp_25_reg_293_pp0_it51;
    grp_fu_64_p1 <= tmp_27_reg_298;

    -- grp_fu_68_ce assign process. --
    grp_fu_68_ce_assign_proc : process(ap_ce, ap_reg_ppstg_tmp_29_reg_216_pp0_it62, ap_reg_ppstg_tmp_29_reg_216_pp0_it63, ap_reg_ppstg_tmp_29_reg_216_pp0_it64, ap_reg_ppstg_tmp_29_reg_216_pp0_it65, ap_reg_ppstg_tmp_29_reg_216_pp0_it66)
    begin
        if (((ap_const_logic_1 = ap_ce) and ((ap_reg_ppstg_tmp_29_reg_216_pp0_it66 = ap_const_lv1_0) or (ap_reg_ppstg_tmp_29_reg_216_pp0_it62 = ap_const_lv1_0) or (ap_reg_ppstg_tmp_29_reg_216_pp0_it63 = ap_const_lv1_0) or (ap_reg_ppstg_tmp_29_reg_216_pp0_it64 = ap_const_lv1_0) or (ap_reg_ppstg_tmp_29_reg_216_pp0_it65 = ap_const_lv1_0)))) then 
            grp_fu_68_ce <= ap_const_logic_1;
        else 
            grp_fu_68_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_68_p0 <= ap_const_lv64_3FF0000000000000;
    grp_fu_68_p1 <= w_reg_313;

    -- grp_fu_73_ce assign process. --
    grp_fu_73_ce_assign_proc : process(ap_ce)
    begin
        if (not((ap_const_logic_1 = ap_ce))) then 
            grp_fu_73_ce <= ap_const_logic_0;
        else 
            grp_fu_73_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_73_p0 <= p_Result_s_fu_164_p3;
    grp_fu_73_p1 <= ap_const_lv64_3FCDA6711871100E;

    -- grp_fu_78_ce assign process. --
    grp_fu_78_ce_assign_proc : process(ap_ce)
    begin
        if (not((ap_const_logic_1 = ap_ce))) then 
            grp_fu_78_ce <= ap_const_logic_0;
        else 
            grp_fu_78_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_78_p0 <= ap_reg_ppstg_X_read_reg_182_pp0_it20;
    grp_fu_78_p1 <= ap_reg_ppstg_X_read_reg_182_pp0_it20;

    -- grp_fu_82_ce assign process. --
    grp_fu_82_ce_assign_proc : process(ap_ce)
    begin
        if (not((ap_const_logic_1 = ap_ce))) then 
            grp_fu_82_ce <= ap_const_logic_0;
        else 
            grp_fu_82_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_82_p0 <= K_reg_204;
    grp_fu_82_p1 <= K_reg_204;

    -- grp_fu_86_ce assign process. --
    grp_fu_86_ce_assign_proc : process(ap_ce)
    begin
        if (not((ap_const_logic_1 = ap_ce))) then 
            grp_fu_86_ce <= ap_const_logic_0;
        else 
            grp_fu_86_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_86_p0 <= ap_reg_ppstg_K_reg_204_pp0_it23;
    grp_fu_86_p1 <= ap_const_lv64_BFD6D1F0E5A8325B;

    -- grp_fu_91_ce assign process. --
    grp_fu_91_ce_assign_proc : process(ap_ce)
    begin
        if (not((ap_const_logic_1 = ap_ce))) then 
            grp_fu_91_ce <= ap_const_logic_0;
        else 
            grp_fu_91_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_91_p0 <= tmp_12_reg_221;
    grp_fu_91_p1 <= ap_const_lv64_BFE0000000000000;

    -- grp_fu_96_ce assign process. --
    grp_fu_96_ce_assign_proc : process(ap_ce)
    begin
        if (not((ap_const_logic_1 = ap_ce))) then 
            grp_fu_96_ce <= ap_const_logic_0;
        else 
            grp_fu_96_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_96_p0 <= pow7_reg_226;
    grp_fu_96_p1 <= ap_reg_ppstg_K_reg_204_pp0_it27;
    p_Result_s_fu_164_p3 <= (ap_const_lv1_0 & tmp_fu_160_p1);
    p_Val2_s_fu_156_p1 <= X;
    tmp_fu_160_p1 <= p_Val2_s_fu_156_p1(63 - 1 downto 0);
end behav;
