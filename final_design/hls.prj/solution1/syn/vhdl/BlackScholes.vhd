-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2014.2
-- Copyright (C) 2014 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity BlackScholes is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    CallPutFlag : IN STD_LOGIC_VECTOR (7 downto 0);
    S : IN STD_LOGIC_VECTOR (63 downto 0);
    X : IN STD_LOGIC_VECTOR (63 downto 0);
    T : IN STD_LOGIC_VECTOR (63 downto 0);
    r : IN STD_LOGIC_VECTOR (63 downto 0);
    b : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of BlackScholes is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_pp0_stg0_fsm_0 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_ST_pp0_stg1_fsm_1 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_ST_pp0_stg2_fsm_2 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_pp0_stg3_fsm_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_ST_pp0_stg4_fsm_4 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_pp0_stg5_fsm_5 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_ST_pp0_stg6_fsm_6 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_ST_pp0_stg7_fsm_7 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv64_BFE0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "1011111111100000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_3FF0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111110000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_BFFD23DD4EF278D0 : STD_LOGIC_VECTOR (63 downto 0) := "1011111111111101001000111101110101001110111100100111100011010000";
    constant ap_const_lv64_BFF0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "1011111111110000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_3FFC80EF025F5E68 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111111100100000001110111100000010010111110101111001101000";
    constant ap_const_lv64_BFD6D1F0E5A8325B : STD_LOGIC_VECTOR (63 downto 0) := "1011111111010110110100011111000011100101101010000011001001011011";
    constant ap_const_lv64_3FD470BF3A92F8EC : STD_LOGIC_VECTOR (63 downto 0) := "0011111111010100011100001011111100111010100100101111100011101100";
    constant ap_const_lv64_3CA0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0011110010100000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_4000000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0100000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_3FE0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111100000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_4190000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0100000110010000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_3FCDA6711871100E : STD_LOGIC_VECTOR (63 downto 0) := "0011111111001101101001100111000100011000011100010001000000001110";
    constant ap_const_lv64_3FD9884533D43651 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111011001100010000100010100110011110101000011011001010001";
    constant ap_const_lv64_3FF548CDD6F42943 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111110101010010001100110111010110111101000010100101000011";
    constant ap_const_lv64_42374876E8000000 : STD_LOGIC_VECTOR (63 downto 0) := "0100001000110111010010000111011011101000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_8000000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv8_63 : STD_LOGIC_VECTOR (7 downto 0) := "01100011";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_true : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "100";
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it4 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it5 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it6 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it7 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it8 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it9 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it10 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it11 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it12 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it13 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it14 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it15 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it16 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it17 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it18 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it19 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it20 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it21 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it22 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it23 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it24 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it25 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it26 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it27 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it28 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it29 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it30 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it31 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it32 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it33 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it34 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it35 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it36 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it37 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it38 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it39 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it40 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it41 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it42 : STD_LOGIC := '0';
    signal grp_fu_227_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_292 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_49_reg_570 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_49_reg_570_pp0_it29 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_182_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_298 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_49_reg_570_pp0_it32 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_i1_reg_830 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_i1_reg_830_pp0_it39 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_49_reg_570_pp0_it39 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_49_reg_570_pp0_it41 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_303 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_49_reg_570_pp0_it33 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_reg_303_pp0_it35 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_reg_303_pp0_it36 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_reg_303_pp0_it37 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_reg_303_pp0_it38 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_reg_303_pp0_it39 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_177_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_309 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_57_i_reg_765 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_i_reg_765_pp0_it38 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_49_reg_570_pp0_it38 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_314 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_49_reg_570_pp0_it35 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_i3_reg_835 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_i3_reg_835_pp0_it40 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_239_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_319 : STD_LOGIC_VECTOR (63 downto 0);
    signal b_read_reg_498 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_b_read_reg_498_pp0_it1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_b_read_reg_498_pp0_it2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_b_read_reg_498_pp0_it3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_b_read_reg_498_pp0_it4 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_b_read_reg_498_pp0_it5 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_b_read_reg_498_pp0_it6 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_b_read_reg_498_pp0_it7 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_b_read_reg_498_pp0_it8 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_b_read_reg_498_pp0_it9 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_b_read_reg_498_pp0_it10 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_b_read_reg_498_pp0_it11 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_b_read_reg_498_pp0_it12 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_b_read_reg_498_pp0_it13 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_b_read_reg_498_pp0_it14 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_b_read_reg_498_pp0_it15 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_b_read_reg_498_pp0_it16 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_b_read_reg_498_pp0_it17 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_b_read_reg_498_pp0_it18 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_b_read_reg_498_pp0_it19 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_b_read_reg_498_pp0_it20 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_b_read_reg_498_pp0_it21 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_b_read_reg_498_pp0_it22 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_b_read_reg_498_pp0_it23 : STD_LOGIC_VECTOR (63 downto 0);
    signal T_read_reg_509 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_T_read_reg_509_pp0_it1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_T_read_reg_509_pp0_it2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_T_read_reg_509_pp0_it3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_T_read_reg_509_pp0_it4 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_T_read_reg_509_pp0_it5 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_T_read_reg_509_pp0_it6 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_T_read_reg_509_pp0_it7 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_T_read_reg_509_pp0_it8 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_T_read_reg_509_pp0_it9 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_T_read_reg_509_pp0_it10 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_T_read_reg_509_pp0_it11 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_T_read_reg_509_pp0_it12 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_T_read_reg_509_pp0_it13 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_T_read_reg_509_pp0_it14 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_T_read_reg_509_pp0_it15 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_T_read_reg_509_pp0_it16 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_T_read_reg_509_pp0_it17 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_T_read_reg_509_pp0_it18 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_T_read_reg_509_pp0_it19 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_T_read_reg_509_pp0_it20 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_T_read_reg_509_pp0_it21 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_T_read_reg_509_pp0_it22 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_T_read_reg_509_pp0_it23 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_T_read_reg_509_pp0_it24 : STD_LOGIC_VECTOR (63 downto 0);
    signal X_read_reg_516 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_X_read_reg_516_pp0_it1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_X_read_reg_516_pp0_it2 : STD_LOGIC_VECTOR (63 downto 0);
    signal S_read_reg_522 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_S_read_reg_522_pp0_it1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_S_read_reg_522_pp0_it2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_S_read_reg_522_pp0_it3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_S_read_reg_522_pp0_it4 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_S_read_reg_522_pp0_it5 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_S_read_reg_522_pp0_it6 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_S_read_reg_522_pp0_it7 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_S_read_reg_522_pp0_it8 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_77_neg_fu_329_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_77_neg_reg_530 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_39_fu_335_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal k_reg_540 : STD_LOGIC_VECTOR (58 downto 0);
    signal l_reg_545 : STD_LOGIC_VECTOR (57 downto 0);
    signal tmp_9_fu_359_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_26_fu_363_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_163_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_36_reg_560 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_207_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_40_reg_565 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_49_fu_367_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_49_reg_570_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_49_reg_570_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_49_reg_570_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_49_reg_570_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_49_reg_570_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_49_reg_570_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_49_reg_570_pp0_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_49_reg_570_pp0_it8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_49_reg_570_pp0_it9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_49_reg_570_pp0_it10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_49_reg_570_pp0_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_49_reg_570_pp0_it12 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_49_reg_570_pp0_it13 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_49_reg_570_pp0_it14 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_49_reg_570_pp0_it15 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_49_reg_570_pp0_it16 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_49_reg_570_pp0_it17 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_49_reg_570_pp0_it18 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_49_reg_570_pp0_it19 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_49_reg_570_pp0_it20 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_49_reg_570_pp0_it21 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_49_reg_570_pp0_it22 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_49_reg_570_pp0_it23 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_49_reg_570_pp0_it24 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_49_reg_570_pp0_it25 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_49_reg_570_pp0_it26 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_49_reg_570_pp0_it27 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_49_reg_570_pp0_it28 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_49_reg_570_pp0_it30 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_49_reg_570_pp0_it31 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_49_reg_570_pp0_it34 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_49_reg_570_pp0_it36 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_49_reg_570_pp0_it37 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_49_reg_570_pp0_it40 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_268_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_reg_575 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_reg_580 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_37_reg_585 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_211_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_25_reg_590 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_28_reg_595 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_287_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_41_reg_600 : STD_LOGIC_VECTOR (63 downto 0);
    signal U_reg_605 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_38_reg_610 : STD_LOGIC_VECTOR (63 downto 0);
    signal t2_reg_615 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t2_reg_615_pp0_it4 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t2_reg_615_pp0_it5 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t2_reg_615_pp0_it6 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t2_reg_615_pp0_it7 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t2_reg_615_pp0_it8 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t2_reg_615_pp0_it9 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t2_reg_615_pp0_it10 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t2_reg_615_pp0_it11 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t2_reg_615_pp0_it12 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t2_reg_615_pp0_it13 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t2_reg_615_pp0_it14 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t2_reg_615_pp0_it15 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t2_reg_615_pp0_it16 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t2_reg_615_pp0_it17 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t2_reg_615_pp0_it18 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t2_reg_615_pp0_it19 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t2_reg_615_pp0_it20 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t2_reg_615_pp0_it21 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t2_reg_615_pp0_it22 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t2_reg_615_pp0_it23 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t2_reg_615_pp0_it24 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t2_reg_615_pp0_it25 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t2_reg_615_pp0_it26 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t2_reg_615_pp0_it27 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t2_reg_615_pp0_it28 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t2_reg_615_pp0_it29 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t2_reg_615_pp0_it30 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t2_reg_615_pp0_it31 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t2_reg_615_pp0_it32 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t2_reg_615_pp0_it33 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t2_reg_615_pp0_it34 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t2_reg_615_pp0_it35 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t2_reg_615_pp0_it36 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t2_reg_615_pp0_it37 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t2_reg_615_pp0_it38 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t2_reg_615_pp0_it39 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t2_reg_615_pp0_it40 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_255_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_42_reg_621 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_271_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_48_reg_626 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_48_reg_626_pp0_it4 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_48_reg_626_pp0_it5 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_48_reg_626_pp0_it6 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_48_reg_626_pp0_it7 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_48_reg_626_pp0_it8 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_48_reg_626_pp0_it9 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_48_reg_626_pp0_it10 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_48_reg_626_pp0_it11 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_48_reg_626_pp0_it12 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_48_reg_626_pp0_it13 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_48_reg_626_pp0_it14 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_48_reg_626_pp0_it15 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_48_reg_626_pp0_it16 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_48_reg_626_pp0_it17 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_48_reg_626_pp0_it18 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_48_reg_626_pp0_it19 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_48_reg_626_pp0_it20 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_48_reg_626_pp0_it21 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_reg_631 : STD_LOGIC_VECTOR (63 downto 0);
    signal t1_reg_636 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t1_reg_636_pp0_it4 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t1_reg_636_pp0_it5 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t1_reg_636_pp0_it6 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t1_reg_636_pp0_it7 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t1_reg_636_pp0_it8 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t1_reg_636_pp0_it9 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t1_reg_636_pp0_it10 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t1_reg_636_pp0_it11 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t1_reg_636_pp0_it12 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t1_reg_636_pp0_it13 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t1_reg_636_pp0_it14 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t1_reg_636_pp0_it15 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t1_reg_636_pp0_it16 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t1_reg_636_pp0_it17 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t1_reg_636_pp0_it18 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t1_reg_636_pp0_it19 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t1_reg_636_pp0_it20 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t1_reg_636_pp0_it21 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t1_reg_636_pp0_it22 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t1_reg_636_pp0_it23 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t1_reg_636_pp0_it24 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t1_reg_636_pp0_it25 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t1_reg_636_pp0_it26 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t1_reg_636_pp0_it27 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t1_reg_636_pp0_it28 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t1_reg_636_pp0_it29 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t1_reg_636_pp0_it30 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t1_reg_636_pp0_it31 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t1_reg_636_pp0_it32 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t1_reg_636_pp0_it33 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t1_reg_636_pp0_it34 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t1_reg_636_pp0_it35 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t1_reg_636_pp0_it36 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t1_reg_636_pp0_it37 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t1_reg_636_pp0_it38 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_t1_reg_636_pp0_it39 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_169_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal v_4_reg_641 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_v_4_reg_641_pp0_it5 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_v_4_reg_641_pp0_it6 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_v_4_reg_641_pp0_it7 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_v_4_reg_641_pp0_it8 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_v_4_reg_641_pp0_it9 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_v_4_reg_641_pp0_it10 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_v_4_reg_641_pp0_it11 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_v_4_reg_641_pp0_it12 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_v_4_reg_641_pp0_it13 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_v_4_reg_641_pp0_it14 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_v_4_reg_641_pp0_it15 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_262_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_reg_648 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_30_reg_648_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_30_reg_648_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_30_reg_648_pp0_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_30_reg_648_pp0_it8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_30_reg_648_pp0_it9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_30_reg_648_pp0_it10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_30_reg_648_pp0_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_30_reg_648_pp0_it12 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_30_reg_648_pp0_it13 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_30_reg_648_pp0_it14 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_30_reg_648_pp0_it15 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_30_reg_648_pp0_it16 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_30_reg_648_pp0_it17 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_30_reg_648_pp0_it18 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_30_reg_648_pp0_it19 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_30_reg_648_pp0_it20 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_282_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_43_reg_652 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_43_reg_652_pp0_it7 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_43_reg_652_pp0_it8 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_43_reg_652_pp0_it9 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_43_reg_652_pp0_it10 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_43_reg_652_pp0_it11 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_43_reg_652_pp0_it12 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_43_reg_652_pp0_it13 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_43_reg_652_pp0_it14 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_43_reg_652_pp0_it15 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_43_reg_652_pp0_it16 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_43_reg_652_pp0_it17 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_43_reg_652_pp0_it18 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_43_reg_652_pp0_it19 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_43_reg_652_pp0_it20 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_43_reg_652_pp0_it21 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_43_reg_652_pp0_it22 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_43_reg_652_pp0_it23 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_31_reg_657 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_32_reg_662 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_33_reg_667 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_34_reg_672 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_35_reg_677 : STD_LOGIC_VECTOR (63 downto 0);
    signal v_reg_682 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_59_reg_689 : STD_LOGIC_VECTOR (0 downto 0);
    signal v_2_reg_693 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_44_reg_698 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_220_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal v2_reg_703 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_v2_reg_703_pp0_it23 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_v2_reg_703_pp0_it24 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_v2_reg_703_pp0_it25 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_v2_reg_703_pp0_it26 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_v2_reg_703_pp0_it27 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_v2_reg_703_pp0_it28 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_45_reg_709 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_46_reg_714 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_47_reg_719 : STD_LOGIC_VECTOR (63 downto 0);
    signal v1_reg_724 : STD_LOGIC_VECTOR (63 downto 0);
    signal d1_reg_729 : STD_LOGIC_VECTOR (63 downto 0);
    signal ret_i_i_i_i_i_i_fu_388_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_2_fu_393_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_2_reg_743 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_64_fu_399_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_64_reg_748 : STD_LOGIC_VECTOR (62 downto 0);
    signal X_assign_fu_403_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ret_i_i_i_i_i_i1_fu_416_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_57_i_reg_765_pp0_it30 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_i_reg_765_pp0_it31 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_i_reg_765_pp0_it32 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_i_reg_765_pp0_it33 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_i_reg_765_pp0_it34 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_i_reg_765_pp0_it35 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_i_reg_765_pp0_it36 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_i_reg_765_pp0_it37 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_i_reg_765_pp0_it39 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_i2_reg_770 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_i2_reg_770_pp0_it30 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_i2_reg_770_pp0_it31 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_i2_reg_770_pp0_it32 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_i2_reg_770_pp0_it33 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_i2_reg_770_pp0_it34 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_i2_reg_770_pp0_it35 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_i2_reg_770_pp0_it36 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_i2_reg_770_pp0_it37 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_i2_reg_770_pp0_it38 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_i2_reg_770_pp0_it39 : STD_LOGIC_VECTOR (0 downto 0);
    signal d2_reg_775 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i_reg_783 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_44_i_reg_788 : STD_LOGIC_VECTOR (63 downto 0);
    signal ret_i_i_i_i_i_i3_fu_436_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_3_fu_441_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_3_reg_798 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_65_fu_447_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_65_reg_803 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_i1_reg_808 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_44_i1_reg_813 : STD_LOGIC_VECTOR (63 downto 0);
    signal X_assign_1_fu_451_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal X_assign_1_reg_818 : STD_LOGIC_VECTOR (63 downto 0);
    signal ret_i_i_i_i_i_i2_fu_463_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_57_i1_reg_830_pp0_it31 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_i1_reg_830_pp0_it32 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_i1_reg_830_pp0_it33 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_i1_reg_830_pp0_it34 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_i1_reg_830_pp0_it35 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_i1_reg_830_pp0_it36 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_i1_reg_830_pp0_it37 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_i1_reg_830_pp0_it38 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_i3_reg_835_pp0_it31 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_i3_reg_835_pp0_it32 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_i3_reg_835_pp0_it33 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_i3_reg_835_pp0_it34 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_i3_reg_835_pp0_it35 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_i3_reg_835_pp0_it36 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_i3_reg_835_pp0_it37 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_i3_reg_835_pp0_it38 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_i3_reg_835_pp0_it39 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_i_reg_840 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i4_reg_845 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_232_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_44_i7_reg_850 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_43_i1_reg_855 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_44_i2_reg_860 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_45_i1_reg_865 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_43_i5_reg_870 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_45_i8_reg_875 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_43_i2_reg_880 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_45_i2_reg_885 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_277_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal K_reg_890 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_K_reg_890_pp0_it33 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_K_reg_890_pp0_it34 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_K_reg_890_pp0_it35 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_K_reg_890_pp0_it36 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_K_reg_890_pp0_it37 : STD_LOGIC_VECTOR (63 downto 0);
    signal K_2_reg_897 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_K_2_reg_897_pp0_it33 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_K_2_reg_897_pp0_it34 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_K_2_reg_897_pp0_it35 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_K_2_reg_897_pp0_it36 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_K_2_reg_897_pp0_it37 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_46_i_reg_905 : STD_LOGIC_VECTOR (63 downto 0);
    signal K_1_reg_910 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_K_1_reg_910_pp0_it33 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_K_1_reg_910_pp0_it34 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_K_1_reg_910_pp0_it35 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_K_1_reg_910_pp0_it36 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_K_1_reg_910_pp0_it37 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_48_i_reg_918 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_46_i1_reg_923 : STD_LOGIC_VECTOR (63 downto 0);
    signal K_3_reg_928 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_K_3_reg_928_pp0_it33 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_K_3_reg_928_pp0_it34 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_K_3_reg_928_pp0_it35 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_K_3_reg_928_pp0_it36 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_K_3_reg_928_pp0_it37 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_48_i2_reg_937 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_46_i9_reg_942 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_47_i_reg_947 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_47_i_reg_947_pp0_it34 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_47_i_reg_947_pp0_it35 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_47_i_reg_947_pp0_it36 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_47_i_reg_947_pp0_it37 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_48_i1_reg_952 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_46_i2_reg_957 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_47_i2_reg_962 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_47_i2_reg_962_pp0_it34 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_47_i2_reg_962_pp0_it35 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_47_i2_reg_962_pp0_it36 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_47_i2_reg_962_pp0_it37 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_49_i2_reg_967 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_48_i3_reg_972 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_47_i1_reg_977 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_47_i1_reg_977_pp0_it35 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_47_i1_reg_977_pp0_it36 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_47_i1_reg_977_pp0_it37 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_47_i1_reg_977_pp0_it38 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_49_i1_reg_982 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_49_i3_reg_987 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_50_i2_reg_992 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_247_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_50_i1_reg_997 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_51_i2_reg_1002 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_50_i3_reg_1007 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_192_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_51_i1_reg_1012 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_52_i_reg_1017 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_51_i3_reg_1022 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_52_i2_reg_1027 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_53_i_reg_1032 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_52_i1_reg_1037 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_53_i2_reg_1042 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_52_i3_reg_1047 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_54_i_reg_1052 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_53_i3_reg_1057 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_54_i2_reg_1062 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_55_i_reg_1067 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_54_i1_reg_1072 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_55_i2_reg_1077 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_54_i3_reg_1082 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_55_i1_reg_1087 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_56_i_reg_1092 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_55_i3_reg_1097 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_56_i2_reg_1102 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_56_i1_reg_1107 : STD_LOGIC_VECTOR (63 downto 0);
    signal w_2_reg_1112 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_251_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal w_1_reg_1118 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_59_i_fu_468_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_59_i_reg_1124 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_58_i2_reg_1129 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_59_i2_fu_475_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_59_i2_reg_1134 : STD_LOGIC_VECTOR (63 downto 0);
    signal w_3_reg_1139 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_59_i1_fu_480_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_59_i1_reg_1145 : STD_LOGIC_VECTOR (63 downto 0);
    signal vc1_reg_1150 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_59_i3_fu_486_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_59_i3_reg_1155 : STD_LOGIC_VECTOR (63 downto 0);
    signal vp1_reg_1160 : STD_LOGIC_VECTOR (63 downto 0);
    signal vc2_reg_1165 : STD_LOGIC_VECTOR (63 downto 0);
    signal vp2_reg_1170 : STD_LOGIC_VECTOR (63 downto 0);
    signal vc_reg_1175 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppiten_pp0_it0_preg : STD_LOGIC := '0';
    signal ap_reg_ptbuf_CallPutFlag : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_rand_uint32_fu_147_ap_start : STD_LOGIC;
    signal grp_rand_uint32_fu_147_ap_done : STD_LOGIC;
    signal grp_rand_uint32_fu_147_ap_idle : STD_LOGIC;
    signal grp_rand_uint32_fu_147_ap_ready : STD_LOGIC;
    signal grp_rand_uint32_fu_147_ap_ce : STD_LOGIC;
    signal grp_rand_uint32_fu_147_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_phiprechg_v_1_reg_134pp0_it21 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_phiprechg_v_1_reg_134pp0_it22 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_phiprechg_v_1_reg_134pp0_it4 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_phiprechg_v_1_reg_134pp0_it5 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_phiprechg_v_1_reg_134pp0_it6 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_phiprechg_v_1_reg_134pp0_it7 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_phiprechg_v_1_reg_134pp0_it8 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_phiprechg_v_1_reg_134pp0_it9 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_phiprechg_v_1_reg_134pp0_it10 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_phiprechg_v_1_reg_134pp0_it11 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_phiprechg_v_1_reg_134pp0_it12 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_phiprechg_v_1_reg_134pp0_it13 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_phiprechg_v_1_reg_134pp0_it14 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_phiprechg_v_1_reg_134pp0_it15 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_phiprechg_v_1_reg_134pp0_it16 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_phiprechg_v_1_reg_134pp0_it17 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_phiprechg_v_1_reg_134pp0_it18 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_phiprechg_v_1_reg_134pp0_it19 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_phiprechg_v_1_reg_134pp0_it20 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_start_in_grp_rand_uint32_fu_147_ap_start : STD_LOGIC;
    signal grp_fu_163_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_163_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_169_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_169_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_177_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_177_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_182_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_182_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_192_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_192_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_207_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_207_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_211_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_211_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_220_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_220_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_227_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_227_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_232_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_232_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_239_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_239_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_247_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_247_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_251_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_251_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_255_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_255_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_262_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_262_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_268_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_271_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_277_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_282_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_287_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_77_to_int_fu_325_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_s_fu_373_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_60_fu_376_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Result_s_fu_380_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_2_fu_409_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_1_fu_421_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_61_fu_424_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Result_1_fu_428_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_3_fu_456_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_163_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_163_ce : STD_LOGIC;
    signal grp_fu_169_ce : STD_LOGIC;
    signal grp_fu_177_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_177_ce : STD_LOGIC;
    signal grp_fu_182_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_182_ce : STD_LOGIC;
    signal grp_fu_192_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_192_ce : STD_LOGIC;
    signal grp_fu_207_ce : STD_LOGIC;
    signal grp_fu_211_ce : STD_LOGIC;
    signal grp_fu_220_ce : STD_LOGIC;
    signal grp_fu_227_ce : STD_LOGIC;
    signal grp_fu_232_ce : STD_LOGIC;
    signal grp_fu_239_ce : STD_LOGIC;
    signal grp_fu_247_ce : STD_LOGIC;
    signal grp_fu_251_ce : STD_LOGIC;
    signal grp_fu_255_ce : STD_LOGIC;
    signal grp_fu_262_ce : STD_LOGIC;
    signal grp_fu_262_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_268_ce : STD_LOGIC;
    signal grp_fu_271_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_271_ce : STD_LOGIC;
    signal grp_fu_277_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_277_ce : STD_LOGIC;
    signal grp_fu_282_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_282_ce : STD_LOGIC;
    signal grp_fu_287_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_287_ce : STD_LOGIC;
    signal ap_sig_pprstidle_pp0 : STD_LOGIC;
    signal ap_sig_bdd_710 : BOOLEAN;
    signal ap_sig_bdd_2030 : BOOLEAN;
    signal ap_sig_bdd_724 : BOOLEAN;
    signal ap_sig_bdd_1157 : BOOLEAN;
    signal ap_sig_bdd_629 : BOOLEAN;
    signal ap_sig_bdd_2037 : BOOLEAN;

    component rand_uint32 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component dut_dadddsub_64ns_64ns_64_5_no_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component dut_dadd_64ns_64ns_64_5_no_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component dut_dmul_64ns_64ns_64_6_med_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component dut_ddiv_64ns_64ns_64_31 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component dut_dcmp_64ns_64ns_1_3 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component dut_uitodp_64ns_64_6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component dut_dsqrt_64ns_64ns_64_31 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component dut_drecip_64ns_64ns_64_11 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component dut_dlog_64ns_64ns_64_24_med_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component dut_dexp_64ns_64ns_64_15_med_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    grp_rand_uint32_fu_147 : component rand_uint32
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_rand_uint32_fu_147_ap_start,
        ap_done => grp_rand_uint32_fu_147_ap_done,
        ap_idle => grp_rand_uint32_fu_147_ap_idle,
        ap_ready => grp_rand_uint32_fu_147_ap_ready,
        ap_ce => grp_rand_uint32_fu_147_ap_ce,
        ap_return => grp_rand_uint32_fu_147_ap_return);

    dut_dadddsub_64ns_64ns_64_5_no_dsp_U2 : component dut_dadddsub_64ns_64ns_64_5_no_dsp
    generic map (
        ID => 2,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_163_p0,
        din1 => grp_fu_163_p1,
        opcode => grp_fu_163_opcode,
        ce => grp_fu_163_ce,
        dout => grp_fu_163_p2);

    dut_dadd_64ns_64ns_64_5_no_dsp_U3 : component dut_dadd_64ns_64ns_64_5_no_dsp
    generic map (
        ID => 3,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_169_p0,
        din1 => grp_fu_169_p1,
        ce => grp_fu_169_ce,
        dout => grp_fu_169_p2);

    dut_dadddsub_64ns_64ns_64_5_no_dsp_U4 : component dut_dadddsub_64ns_64ns_64_5_no_dsp
    generic map (
        ID => 4,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_177_p0,
        din1 => grp_fu_177_p1,
        opcode => grp_fu_177_opcode,
        ce => grp_fu_177_ce,
        dout => grp_fu_177_p2);

    dut_dadddsub_64ns_64ns_64_5_no_dsp_U5 : component dut_dadddsub_64ns_64ns_64_5_no_dsp
    generic map (
        ID => 5,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_182_p0,
        din1 => grp_fu_182_p1,
        opcode => grp_fu_182_opcode,
        ce => grp_fu_182_ce,
        dout => grp_fu_182_p2);

    dut_dadddsub_64ns_64ns_64_5_no_dsp_U6 : component dut_dadddsub_64ns_64ns_64_5_no_dsp
    generic map (
        ID => 6,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_192_p0,
        din1 => grp_fu_192_p1,
        opcode => grp_fu_192_opcode,
        ce => grp_fu_192_ce,
        dout => grp_fu_192_p2);

    dut_dmul_64ns_64ns_64_6_med_dsp_U7 : component dut_dmul_64ns_64ns_64_6_med_dsp
    generic map (
        ID => 7,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_207_p0,
        din1 => grp_fu_207_p1,
        ce => grp_fu_207_ce,
        dout => grp_fu_207_p2);

    dut_dmul_64ns_64ns_64_6_med_dsp_U8 : component dut_dmul_64ns_64ns_64_6_med_dsp
    generic map (
        ID => 8,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_211_p0,
        din1 => grp_fu_211_p1,
        ce => grp_fu_211_ce,
        dout => grp_fu_211_p2);

    dut_dmul_64ns_64ns_64_6_med_dsp_U9 : component dut_dmul_64ns_64ns_64_6_med_dsp
    generic map (
        ID => 9,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_220_p0,
        din1 => grp_fu_220_p1,
        ce => grp_fu_220_ce,
        dout => grp_fu_220_p2);

    dut_dmul_64ns_64ns_64_6_med_dsp_U10 : component dut_dmul_64ns_64ns_64_6_med_dsp
    generic map (
        ID => 10,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_227_p0,
        din1 => grp_fu_227_p1,
        ce => grp_fu_227_ce,
        dout => grp_fu_227_p2);

    dut_dmul_64ns_64ns_64_6_med_dsp_U11 : component dut_dmul_64ns_64ns_64_6_med_dsp
    generic map (
        ID => 11,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_232_p0,
        din1 => grp_fu_232_p1,
        ce => grp_fu_232_ce,
        dout => grp_fu_232_p2);

    dut_dmul_64ns_64ns_64_6_med_dsp_U12 : component dut_dmul_64ns_64ns_64_6_med_dsp
    generic map (
        ID => 12,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_239_p0,
        din1 => grp_fu_239_p1,
        ce => grp_fu_239_ce,
        dout => grp_fu_239_p2);

    dut_dmul_64ns_64ns_64_6_med_dsp_U13 : component dut_dmul_64ns_64ns_64_6_med_dsp
    generic map (
        ID => 13,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_247_p0,
        din1 => grp_fu_247_p1,
        ce => grp_fu_247_ce,
        dout => grp_fu_247_p2);

    dut_dmul_64ns_64ns_64_6_med_dsp_U14 : component dut_dmul_64ns_64ns_64_6_med_dsp
    generic map (
        ID => 14,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_251_p0,
        din1 => grp_fu_251_p1,
        ce => grp_fu_251_ce,
        dout => grp_fu_251_p2);

    dut_ddiv_64ns_64ns_64_31_U15 : component dut_ddiv_64ns_64ns_64_31
    generic map (
        ID => 15,
        NUM_STAGE => 31,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_255_p0,
        din1 => grp_fu_255_p1,
        ce => grp_fu_255_ce,
        dout => grp_fu_255_p2);

    dut_dcmp_64ns_64ns_1_3_U16 : component dut_dcmp_64ns_64ns_1_3
    generic map (
        ID => 16,
        NUM_STAGE => 3,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_262_p0,
        din1 => grp_fu_262_p1,
        ce => grp_fu_262_ce,
        opcode => grp_fu_262_opcode,
        dout => grp_fu_262_p2);

    dut_uitodp_64ns_64_6_U17 : component dut_uitodp_64ns_64_6
    generic map (
        ID => 17,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_268_p0,
        ce => grp_fu_268_ce,
        dout => grp_fu_268_p1);

    dut_dsqrt_64ns_64ns_64_31_U18 : component dut_dsqrt_64ns_64ns_64_31
    generic map (
        ID => 18,
        NUM_STAGE => 31,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_271_p0,
        din1 => grp_fu_271_p1,
        ce => grp_fu_271_ce,
        dout => grp_fu_271_p2);

    dut_drecip_64ns_64ns_64_11_U19 : component dut_drecip_64ns_64ns_64_11
    generic map (
        ID => 19,
        NUM_STAGE => 11,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_277_p0,
        din1 => grp_fu_277_p1,
        ce => grp_fu_277_ce,
        dout => grp_fu_277_p2);

    dut_dlog_64ns_64ns_64_24_med_dsp_U20 : component dut_dlog_64ns_64ns_64_24_med_dsp
    generic map (
        ID => 20,
        NUM_STAGE => 24,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_282_p0,
        din1 => grp_fu_282_p1,
        ce => grp_fu_282_ce,
        dout => grp_fu_282_p2);

    dut_dexp_64ns_64ns_64_15_med_dsp_U21 : component dut_dexp_64ns_64ns_64_15_med_dsp
    generic map (
        ID => 21,
        NUM_STAGE => 15,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_287_p0,
        din1 => grp_fu_287_p1,
        ce => grp_fu_287_ce,
        dout => grp_fu_287_p2);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_pp0_stg0_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0_preg assign process. --
    ap_reg_ppiten_pp0_it0_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0_preg <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and not((not((ap_const_logic_1 = ap_ce)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)))))) then 
                    ap_reg_ppiten_pp0_it0_preg <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_reg_ppiten_pp0_it0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it10 assign process. --
    ap_reg_ppiten_pp0_it10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it10 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
                    ap_reg_ppiten_pp0_it10 <= ap_reg_ppiten_pp0_it9;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it11 assign process. --
    ap_reg_ppiten_pp0_it11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
                    ap_reg_ppiten_pp0_it11 <= ap_reg_ppiten_pp0_it10;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it12 assign process. --
    ap_reg_ppiten_pp0_it12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it12 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
                    ap_reg_ppiten_pp0_it12 <= ap_reg_ppiten_pp0_it11;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it13 assign process. --
    ap_reg_ppiten_pp0_it13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it13 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
                    ap_reg_ppiten_pp0_it13 <= ap_reg_ppiten_pp0_it12;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it14 assign process. --
    ap_reg_ppiten_pp0_it14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it14 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
                    ap_reg_ppiten_pp0_it14 <= ap_reg_ppiten_pp0_it13;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it15 assign process. --
    ap_reg_ppiten_pp0_it15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it15 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
                    ap_reg_ppiten_pp0_it15 <= ap_reg_ppiten_pp0_it14;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it16 assign process. --
    ap_reg_ppiten_pp0_it16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it16 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
                    ap_reg_ppiten_pp0_it16 <= ap_reg_ppiten_pp0_it15;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it17 assign process. --
    ap_reg_ppiten_pp0_it17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it17 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
                    ap_reg_ppiten_pp0_it17 <= ap_reg_ppiten_pp0_it16;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it18 assign process. --
    ap_reg_ppiten_pp0_it18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it18 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
                    ap_reg_ppiten_pp0_it18 <= ap_reg_ppiten_pp0_it17;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it19 assign process. --
    ap_reg_ppiten_pp0_it19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it19 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
                    ap_reg_ppiten_pp0_it19 <= ap_reg_ppiten_pp0_it18;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it2 assign process. --
    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it20 assign process. --
    ap_reg_ppiten_pp0_it20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it20 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
                    ap_reg_ppiten_pp0_it20 <= ap_reg_ppiten_pp0_it19;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it21 assign process. --
    ap_reg_ppiten_pp0_it21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it21 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
                    ap_reg_ppiten_pp0_it21 <= ap_reg_ppiten_pp0_it20;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it22 assign process. --
    ap_reg_ppiten_pp0_it22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it22 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
                    ap_reg_ppiten_pp0_it22 <= ap_reg_ppiten_pp0_it21;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it23 assign process. --
    ap_reg_ppiten_pp0_it23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it23 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
                    ap_reg_ppiten_pp0_it23 <= ap_reg_ppiten_pp0_it22;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it24 assign process. --
    ap_reg_ppiten_pp0_it24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it24 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
                    ap_reg_ppiten_pp0_it24 <= ap_reg_ppiten_pp0_it23;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it25 assign process. --
    ap_reg_ppiten_pp0_it25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it25 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
                    ap_reg_ppiten_pp0_it25 <= ap_reg_ppiten_pp0_it24;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it26 assign process. --
    ap_reg_ppiten_pp0_it26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it26 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
                    ap_reg_ppiten_pp0_it26 <= ap_reg_ppiten_pp0_it25;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it27 assign process. --
    ap_reg_ppiten_pp0_it27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it27 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
                    ap_reg_ppiten_pp0_it27 <= ap_reg_ppiten_pp0_it26;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it28 assign process. --
    ap_reg_ppiten_pp0_it28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it28 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
                    ap_reg_ppiten_pp0_it28 <= ap_reg_ppiten_pp0_it27;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it29 assign process. --
    ap_reg_ppiten_pp0_it29_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it29 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
                    ap_reg_ppiten_pp0_it29 <= ap_reg_ppiten_pp0_it28;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it3 assign process. --
    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it30 assign process. --
    ap_reg_ppiten_pp0_it30_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it30 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
                    ap_reg_ppiten_pp0_it30 <= ap_reg_ppiten_pp0_it29;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it31 assign process. --
    ap_reg_ppiten_pp0_it31_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it31 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
                    ap_reg_ppiten_pp0_it31 <= ap_reg_ppiten_pp0_it30;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it32 assign process. --
    ap_reg_ppiten_pp0_it32_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it32 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
                    ap_reg_ppiten_pp0_it32 <= ap_reg_ppiten_pp0_it31;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it33 assign process. --
    ap_reg_ppiten_pp0_it33_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it33 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
                    ap_reg_ppiten_pp0_it33 <= ap_reg_ppiten_pp0_it32;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it34 assign process. --
    ap_reg_ppiten_pp0_it34_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it34 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
                    ap_reg_ppiten_pp0_it34 <= ap_reg_ppiten_pp0_it33;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it35 assign process. --
    ap_reg_ppiten_pp0_it35_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it35 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
                    ap_reg_ppiten_pp0_it35 <= ap_reg_ppiten_pp0_it34;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it36 assign process. --
    ap_reg_ppiten_pp0_it36_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it36 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
                    ap_reg_ppiten_pp0_it36 <= ap_reg_ppiten_pp0_it35;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it37 assign process. --
    ap_reg_ppiten_pp0_it37_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it37 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
                    ap_reg_ppiten_pp0_it37 <= ap_reg_ppiten_pp0_it36;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it38 assign process. --
    ap_reg_ppiten_pp0_it38_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it38 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
                    ap_reg_ppiten_pp0_it38 <= ap_reg_ppiten_pp0_it37;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it39 assign process. --
    ap_reg_ppiten_pp0_it39_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it39 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
                    ap_reg_ppiten_pp0_it39 <= ap_reg_ppiten_pp0_it38;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it4 assign process. --
    ap_reg_ppiten_pp0_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
                    ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it40 assign process. --
    ap_reg_ppiten_pp0_it40_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it40 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
                    ap_reg_ppiten_pp0_it40 <= ap_reg_ppiten_pp0_it39;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it41 assign process. --
    ap_reg_ppiten_pp0_it41_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it41 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
                    ap_reg_ppiten_pp0_it41 <= ap_reg_ppiten_pp0_it40;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it42 assign process. --
    ap_reg_ppiten_pp0_it42_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it42 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_ce)) then
                    if (ap_sig_bdd_2037) then 
                        ap_reg_ppiten_pp0_it42 <= ap_const_logic_0;
                    elsif ((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm)) then 
                        ap_reg_ppiten_pp0_it42 <= ap_reg_ppiten_pp0_it41;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it5 assign process. --
    ap_reg_ppiten_pp0_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
                    ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it6 assign process. --
    ap_reg_ppiten_pp0_it6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
                    ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it7 assign process. --
    ap_reg_ppiten_pp0_it7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
                    ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it8 assign process. --
    ap_reg_ppiten_pp0_it8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
                    ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it9 assign process. --
    ap_reg_ppiten_pp0_it9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
                    ap_reg_ppiten_pp0_it9 <= ap_reg_ppiten_pp0_it8;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_phiprechg_v_1_reg_134pp0_it21 assign process. --
    ap_reg_phiprechg_v_1_reg_134pp0_it21_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if (ap_sig_bdd_2030) then 
                    ap_reg_phiprechg_v_1_reg_134pp0_it21 <= v_reg_682;
                elsif (ap_sig_bdd_710) then 
                    ap_reg_phiprechg_v_1_reg_134pp0_it21 <= ap_reg_phiprechg_v_1_reg_134pp0_it20;
                end if;
            end if; 
        end if;
    end process;

    -- ap_reg_phiprechg_v_1_reg_134pp0_it22 assign process. --
    ap_reg_phiprechg_v_1_reg_134pp0_it22_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_1157) then
                if (ap_sig_bdd_724) then 
                    ap_reg_phiprechg_v_1_reg_134pp0_it22 <= v_2_reg_693;
                elsif ((ap_true = ap_true)) then 
                    ap_reg_phiprechg_v_1_reg_134pp0_it22 <= ap_reg_phiprechg_v_1_reg_134pp0_it21;
                end if;
            end if; 
        end if;
    end process;

    -- ap_reg_phiprechg_v_1_reg_134pp0_it5 assign process. --
    ap_reg_phiprechg_v_1_reg_134pp0_it5_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_629) then
                if (not((ap_const_lv1_0 = grp_fu_262_p2))) then 
                    ap_reg_phiprechg_v_1_reg_134pp0_it5 <= v_4_reg_641;
                elsif ((ap_true = ap_true)) then 
                    ap_reg_phiprechg_v_1_reg_134pp0_it5 <= ap_reg_phiprechg_v_1_reg_134pp0_it4;
                end if;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it32) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it31)))) then
                K_1_reg_910 <= grp_fu_277_p2;
                tmp_46_i_reg_905 <= grp_fu_287_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it32) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it31))) then
                K_2_reg_897 <= grp_fu_277_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it32) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it31))) then
                K_3_reg_928 <= grp_fu_277_p2;
                tmp_46_i1_reg_923 <= grp_fu_287_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it32) and (ap_const_logic_1 = ap_ce) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it31)))) then
                K_reg_890 <= grp_fu_277_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_ce) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))))) then
                S_read_reg_522 <= S;
                T_read_reg_509 <= T;
                X_read_reg_516 <= X;
                ap_reg_ptbuf_CallPutFlag <= CallPutFlag;
                b_read_reg_498 <= b;
                tmp_77_neg_reg_530 <= tmp_77_neg_fu_329_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm))) then
                U_reg_605 <= grp_fu_207_p2;
                tmp_38_reg_610 <= grp_fu_287_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and (ap_const_logic_1 = ap_ce) and (ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm))) then
                X_assign_1_reg_818 <= X_assign_1_fu_451_p1;
                tmp_44_i1_reg_813 <= grp_fu_220_p2;
                tmp_i1_reg_808 <= grp_fu_211_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it9) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then
                ap_reg_phiprechg_v_1_reg_134pp0_it10 <= ap_reg_phiprechg_v_1_reg_134pp0_it9;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it10) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then
                ap_reg_phiprechg_v_1_reg_134pp0_it11 <= ap_reg_phiprechg_v_1_reg_134pp0_it10;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it11) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then
                ap_reg_phiprechg_v_1_reg_134pp0_it12 <= ap_reg_phiprechg_v_1_reg_134pp0_it11;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it12) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then
                ap_reg_phiprechg_v_1_reg_134pp0_it13 <= ap_reg_phiprechg_v_1_reg_134pp0_it12;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it13) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then
                ap_reg_phiprechg_v_1_reg_134pp0_it14 <= ap_reg_phiprechg_v_1_reg_134pp0_it13;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it14) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then
                ap_reg_phiprechg_v_1_reg_134pp0_it15 <= ap_reg_phiprechg_v_1_reg_134pp0_it14;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it15) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then
                ap_reg_phiprechg_v_1_reg_134pp0_it16 <= ap_reg_phiprechg_v_1_reg_134pp0_it15;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it16) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then
                ap_reg_phiprechg_v_1_reg_134pp0_it17 <= ap_reg_phiprechg_v_1_reg_134pp0_it16;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then
                ap_reg_phiprechg_v_1_reg_134pp0_it18 <= ap_reg_phiprechg_v_1_reg_134pp0_it17;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it18) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then
                ap_reg_phiprechg_v_1_reg_134pp0_it19 <= ap_reg_phiprechg_v_1_reg_134pp0_it18;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it19) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then
                ap_reg_phiprechg_v_1_reg_134pp0_it20 <= ap_reg_phiprechg_v_1_reg_134pp0_it19;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then
                ap_reg_phiprechg_v_1_reg_134pp0_it6 <= ap_reg_phiprechg_v_1_reg_134pp0_it5;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it6) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then
                ap_reg_phiprechg_v_1_reg_134pp0_it7 <= ap_reg_phiprechg_v_1_reg_134pp0_it6;
                tmp_43_reg_652 <= grp_fu_282_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then
                ap_reg_phiprechg_v_1_reg_134pp0_it8 <= ap_reg_phiprechg_v_1_reg_134pp0_it7;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then
                ap_reg_phiprechg_v_1_reg_134pp0_it9 <= ap_reg_phiprechg_v_1_reg_134pp0_it8;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm))) then
                ap_reg_ppstg_K_1_reg_910_pp0_it33 <= K_1_reg_910;
                ap_reg_ppstg_K_1_reg_910_pp0_it34 <= ap_reg_ppstg_K_1_reg_910_pp0_it33;
                ap_reg_ppstg_K_1_reg_910_pp0_it35 <= ap_reg_ppstg_K_1_reg_910_pp0_it34;
                ap_reg_ppstg_K_1_reg_910_pp0_it36 <= ap_reg_ppstg_K_1_reg_910_pp0_it35;
                ap_reg_ppstg_K_1_reg_910_pp0_it37 <= ap_reg_ppstg_K_1_reg_910_pp0_it36;
                ap_reg_ppstg_t2_reg_615_pp0_it10 <= ap_reg_ppstg_t2_reg_615_pp0_it9;
                ap_reg_ppstg_t2_reg_615_pp0_it11 <= ap_reg_ppstg_t2_reg_615_pp0_it10;
                ap_reg_ppstg_t2_reg_615_pp0_it12 <= ap_reg_ppstg_t2_reg_615_pp0_it11;
                ap_reg_ppstg_t2_reg_615_pp0_it13 <= ap_reg_ppstg_t2_reg_615_pp0_it12;
                ap_reg_ppstg_t2_reg_615_pp0_it14 <= ap_reg_ppstg_t2_reg_615_pp0_it13;
                ap_reg_ppstg_t2_reg_615_pp0_it15 <= ap_reg_ppstg_t2_reg_615_pp0_it14;
                ap_reg_ppstg_t2_reg_615_pp0_it16 <= ap_reg_ppstg_t2_reg_615_pp0_it15;
                ap_reg_ppstg_t2_reg_615_pp0_it17 <= ap_reg_ppstg_t2_reg_615_pp0_it16;
                ap_reg_ppstg_t2_reg_615_pp0_it18 <= ap_reg_ppstg_t2_reg_615_pp0_it17;
                ap_reg_ppstg_t2_reg_615_pp0_it19 <= ap_reg_ppstg_t2_reg_615_pp0_it18;
                ap_reg_ppstg_t2_reg_615_pp0_it20 <= ap_reg_ppstg_t2_reg_615_pp0_it19;
                ap_reg_ppstg_t2_reg_615_pp0_it21 <= ap_reg_ppstg_t2_reg_615_pp0_it20;
                ap_reg_ppstg_t2_reg_615_pp0_it22 <= ap_reg_ppstg_t2_reg_615_pp0_it21;
                ap_reg_ppstg_t2_reg_615_pp0_it23 <= ap_reg_ppstg_t2_reg_615_pp0_it22;
                ap_reg_ppstg_t2_reg_615_pp0_it24 <= ap_reg_ppstg_t2_reg_615_pp0_it23;
                ap_reg_ppstg_t2_reg_615_pp0_it25 <= ap_reg_ppstg_t2_reg_615_pp0_it24;
                ap_reg_ppstg_t2_reg_615_pp0_it26 <= ap_reg_ppstg_t2_reg_615_pp0_it25;
                ap_reg_ppstg_t2_reg_615_pp0_it27 <= ap_reg_ppstg_t2_reg_615_pp0_it26;
                ap_reg_ppstg_t2_reg_615_pp0_it28 <= ap_reg_ppstg_t2_reg_615_pp0_it27;
                ap_reg_ppstg_t2_reg_615_pp0_it29 <= ap_reg_ppstg_t2_reg_615_pp0_it28;
                ap_reg_ppstg_t2_reg_615_pp0_it30 <= ap_reg_ppstg_t2_reg_615_pp0_it29;
                ap_reg_ppstg_t2_reg_615_pp0_it31 <= ap_reg_ppstg_t2_reg_615_pp0_it30;
                ap_reg_ppstg_t2_reg_615_pp0_it32 <= ap_reg_ppstg_t2_reg_615_pp0_it31;
                ap_reg_ppstg_t2_reg_615_pp0_it33 <= ap_reg_ppstg_t2_reg_615_pp0_it32;
                ap_reg_ppstg_t2_reg_615_pp0_it34 <= ap_reg_ppstg_t2_reg_615_pp0_it33;
                ap_reg_ppstg_t2_reg_615_pp0_it35 <= ap_reg_ppstg_t2_reg_615_pp0_it34;
                ap_reg_ppstg_t2_reg_615_pp0_it36 <= ap_reg_ppstg_t2_reg_615_pp0_it35;
                ap_reg_ppstg_t2_reg_615_pp0_it37 <= ap_reg_ppstg_t2_reg_615_pp0_it36;
                ap_reg_ppstg_t2_reg_615_pp0_it38 <= ap_reg_ppstg_t2_reg_615_pp0_it37;
                ap_reg_ppstg_t2_reg_615_pp0_it39 <= ap_reg_ppstg_t2_reg_615_pp0_it38;
                ap_reg_ppstg_t2_reg_615_pp0_it4 <= t2_reg_615;
                ap_reg_ppstg_t2_reg_615_pp0_it40 <= ap_reg_ppstg_t2_reg_615_pp0_it39;
                ap_reg_ppstg_t2_reg_615_pp0_it5 <= ap_reg_ppstg_t2_reg_615_pp0_it4;
                ap_reg_ppstg_t2_reg_615_pp0_it6 <= ap_reg_ppstg_t2_reg_615_pp0_it5;
                ap_reg_ppstg_t2_reg_615_pp0_it7 <= ap_reg_ppstg_t2_reg_615_pp0_it6;
                ap_reg_ppstg_t2_reg_615_pp0_it8 <= ap_reg_ppstg_t2_reg_615_pp0_it7;
                ap_reg_ppstg_t2_reg_615_pp0_it9 <= ap_reg_ppstg_t2_reg_615_pp0_it8;
                ap_reg_ppstg_tmp_57_i_reg_765_pp0_it30 <= tmp_57_i_reg_765;
                ap_reg_ppstg_tmp_57_i_reg_765_pp0_it31 <= ap_reg_ppstg_tmp_57_i_reg_765_pp0_it30;
                ap_reg_ppstg_tmp_57_i_reg_765_pp0_it32 <= ap_reg_ppstg_tmp_57_i_reg_765_pp0_it31;
                ap_reg_ppstg_tmp_57_i_reg_765_pp0_it33 <= ap_reg_ppstg_tmp_57_i_reg_765_pp0_it32;
                ap_reg_ppstg_tmp_57_i_reg_765_pp0_it34 <= ap_reg_ppstg_tmp_57_i_reg_765_pp0_it33;
                ap_reg_ppstg_tmp_57_i_reg_765_pp0_it35 <= ap_reg_ppstg_tmp_57_i_reg_765_pp0_it34;
                ap_reg_ppstg_tmp_57_i_reg_765_pp0_it36 <= ap_reg_ppstg_tmp_57_i_reg_765_pp0_it35;
                ap_reg_ppstg_tmp_57_i_reg_765_pp0_it37 <= ap_reg_ppstg_tmp_57_i_reg_765_pp0_it36;
                ap_reg_ppstg_tmp_57_i_reg_765_pp0_it38 <= ap_reg_ppstg_tmp_57_i_reg_765_pp0_it37;
                ap_reg_ppstg_tmp_57_i_reg_765_pp0_it39 <= ap_reg_ppstg_tmp_57_i_reg_765_pp0_it38;
                ap_reg_ppstg_v2_reg_703_pp0_it23 <= v2_reg_703;
                ap_reg_ppstg_v2_reg_703_pp0_it24 <= ap_reg_ppstg_v2_reg_703_pp0_it23;
                ap_reg_ppstg_v2_reg_703_pp0_it25 <= ap_reg_ppstg_v2_reg_703_pp0_it24;
                ap_reg_ppstg_v2_reg_703_pp0_it26 <= ap_reg_ppstg_v2_reg_703_pp0_it25;
                ap_reg_ppstg_v2_reg_703_pp0_it27 <= ap_reg_ppstg_v2_reg_703_pp0_it26;
                ap_reg_ppstg_v2_reg_703_pp0_it28 <= ap_reg_ppstg_v2_reg_703_pp0_it27;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm))) then
                ap_reg_ppstg_K_2_reg_897_pp0_it33 <= K_2_reg_897;
                ap_reg_ppstg_K_2_reg_897_pp0_it34 <= ap_reg_ppstg_K_2_reg_897_pp0_it33;
                ap_reg_ppstg_K_2_reg_897_pp0_it35 <= ap_reg_ppstg_K_2_reg_897_pp0_it34;
                ap_reg_ppstg_K_2_reg_897_pp0_it36 <= ap_reg_ppstg_K_2_reg_897_pp0_it35;
                ap_reg_ppstg_K_2_reg_897_pp0_it37 <= ap_reg_ppstg_K_2_reg_897_pp0_it36;
                ap_reg_ppstg_reg_303_pp0_it35 <= reg_303;
                ap_reg_ppstg_reg_303_pp0_it36 <= ap_reg_ppstg_reg_303_pp0_it35;
                ap_reg_ppstg_reg_303_pp0_it37 <= ap_reg_ppstg_reg_303_pp0_it36;
                ap_reg_ppstg_reg_303_pp0_it38 <= ap_reg_ppstg_reg_303_pp0_it37;
                ap_reg_ppstg_reg_303_pp0_it39 <= ap_reg_ppstg_reg_303_pp0_it38;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm))) then
                ap_reg_ppstg_K_3_reg_928_pp0_it33 <= K_3_reg_928;
                ap_reg_ppstg_K_3_reg_928_pp0_it34 <= ap_reg_ppstg_K_3_reg_928_pp0_it33;
                ap_reg_ppstg_K_3_reg_928_pp0_it35 <= ap_reg_ppstg_K_3_reg_928_pp0_it34;
                ap_reg_ppstg_K_3_reg_928_pp0_it36 <= ap_reg_ppstg_K_3_reg_928_pp0_it35;
                ap_reg_ppstg_K_3_reg_928_pp0_it37 <= ap_reg_ppstg_K_3_reg_928_pp0_it36;
                ap_reg_ppstg_tmp_48_reg_626_pp0_it10 <= ap_reg_ppstg_tmp_48_reg_626_pp0_it9;
                ap_reg_ppstg_tmp_48_reg_626_pp0_it11 <= ap_reg_ppstg_tmp_48_reg_626_pp0_it10;
                ap_reg_ppstg_tmp_48_reg_626_pp0_it12 <= ap_reg_ppstg_tmp_48_reg_626_pp0_it11;
                ap_reg_ppstg_tmp_48_reg_626_pp0_it13 <= ap_reg_ppstg_tmp_48_reg_626_pp0_it12;
                ap_reg_ppstg_tmp_48_reg_626_pp0_it14 <= ap_reg_ppstg_tmp_48_reg_626_pp0_it13;
                ap_reg_ppstg_tmp_48_reg_626_pp0_it15 <= ap_reg_ppstg_tmp_48_reg_626_pp0_it14;
                ap_reg_ppstg_tmp_48_reg_626_pp0_it16 <= ap_reg_ppstg_tmp_48_reg_626_pp0_it15;
                ap_reg_ppstg_tmp_48_reg_626_pp0_it17 <= ap_reg_ppstg_tmp_48_reg_626_pp0_it16;
                ap_reg_ppstg_tmp_48_reg_626_pp0_it18 <= ap_reg_ppstg_tmp_48_reg_626_pp0_it17;
                ap_reg_ppstg_tmp_48_reg_626_pp0_it19 <= ap_reg_ppstg_tmp_48_reg_626_pp0_it18;
                ap_reg_ppstg_tmp_48_reg_626_pp0_it20 <= ap_reg_ppstg_tmp_48_reg_626_pp0_it19;
                ap_reg_ppstg_tmp_48_reg_626_pp0_it21 <= ap_reg_ppstg_tmp_48_reg_626_pp0_it20;
                ap_reg_ppstg_tmp_48_reg_626_pp0_it4 <= tmp_48_reg_626;
                ap_reg_ppstg_tmp_48_reg_626_pp0_it5 <= ap_reg_ppstg_tmp_48_reg_626_pp0_it4;
                ap_reg_ppstg_tmp_48_reg_626_pp0_it6 <= ap_reg_ppstg_tmp_48_reg_626_pp0_it5;
                ap_reg_ppstg_tmp_48_reg_626_pp0_it7 <= ap_reg_ppstg_tmp_48_reg_626_pp0_it6;
                ap_reg_ppstg_tmp_48_reg_626_pp0_it8 <= ap_reg_ppstg_tmp_48_reg_626_pp0_it7;
                ap_reg_ppstg_tmp_48_reg_626_pp0_it9 <= ap_reg_ppstg_tmp_48_reg_626_pp0_it8;
                ap_reg_ppstg_tmp_57_i2_reg_770_pp0_it30 <= tmp_57_i2_reg_770;
                ap_reg_ppstg_tmp_57_i2_reg_770_pp0_it31 <= ap_reg_ppstg_tmp_57_i2_reg_770_pp0_it30;
                ap_reg_ppstg_tmp_57_i2_reg_770_pp0_it32 <= ap_reg_ppstg_tmp_57_i2_reg_770_pp0_it31;
                ap_reg_ppstg_tmp_57_i2_reg_770_pp0_it33 <= ap_reg_ppstg_tmp_57_i2_reg_770_pp0_it32;
                ap_reg_ppstg_tmp_57_i2_reg_770_pp0_it34 <= ap_reg_ppstg_tmp_57_i2_reg_770_pp0_it33;
                ap_reg_ppstg_tmp_57_i2_reg_770_pp0_it35 <= ap_reg_ppstg_tmp_57_i2_reg_770_pp0_it34;
                ap_reg_ppstg_tmp_57_i2_reg_770_pp0_it36 <= ap_reg_ppstg_tmp_57_i2_reg_770_pp0_it35;
                ap_reg_ppstg_tmp_57_i2_reg_770_pp0_it37 <= ap_reg_ppstg_tmp_57_i2_reg_770_pp0_it36;
                ap_reg_ppstg_tmp_57_i2_reg_770_pp0_it38 <= ap_reg_ppstg_tmp_57_i2_reg_770_pp0_it37;
                ap_reg_ppstg_tmp_57_i2_reg_770_pp0_it39 <= ap_reg_ppstg_tmp_57_i2_reg_770_pp0_it38;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))))) then
                ap_reg_ppstg_K_reg_890_pp0_it33 <= K_reg_890;
                ap_reg_ppstg_K_reg_890_pp0_it34 <= ap_reg_ppstg_K_reg_890_pp0_it33;
                ap_reg_ppstg_K_reg_890_pp0_it35 <= ap_reg_ppstg_K_reg_890_pp0_it34;
                ap_reg_ppstg_K_reg_890_pp0_it36 <= ap_reg_ppstg_K_reg_890_pp0_it35;
                ap_reg_ppstg_K_reg_890_pp0_it37 <= ap_reg_ppstg_K_reg_890_pp0_it36;
                ap_reg_ppstg_S_read_reg_522_pp0_it1 <= S_read_reg_522;
                ap_reg_ppstg_S_read_reg_522_pp0_it2 <= ap_reg_ppstg_S_read_reg_522_pp0_it1;
                ap_reg_ppstg_S_read_reg_522_pp0_it3 <= ap_reg_ppstg_S_read_reg_522_pp0_it2;
                ap_reg_ppstg_S_read_reg_522_pp0_it4 <= ap_reg_ppstg_S_read_reg_522_pp0_it3;
                ap_reg_ppstg_S_read_reg_522_pp0_it5 <= ap_reg_ppstg_S_read_reg_522_pp0_it4;
                ap_reg_ppstg_S_read_reg_522_pp0_it6 <= ap_reg_ppstg_S_read_reg_522_pp0_it5;
                ap_reg_ppstg_S_read_reg_522_pp0_it7 <= ap_reg_ppstg_S_read_reg_522_pp0_it6;
                ap_reg_ppstg_S_read_reg_522_pp0_it8 <= ap_reg_ppstg_S_read_reg_522_pp0_it7;
                ap_reg_ppstg_T_read_reg_509_pp0_it1 <= T_read_reg_509;
                ap_reg_ppstg_T_read_reg_509_pp0_it10 <= ap_reg_ppstg_T_read_reg_509_pp0_it9;
                ap_reg_ppstg_T_read_reg_509_pp0_it11 <= ap_reg_ppstg_T_read_reg_509_pp0_it10;
                ap_reg_ppstg_T_read_reg_509_pp0_it12 <= ap_reg_ppstg_T_read_reg_509_pp0_it11;
                ap_reg_ppstg_T_read_reg_509_pp0_it13 <= ap_reg_ppstg_T_read_reg_509_pp0_it12;
                ap_reg_ppstg_T_read_reg_509_pp0_it14 <= ap_reg_ppstg_T_read_reg_509_pp0_it13;
                ap_reg_ppstg_T_read_reg_509_pp0_it15 <= ap_reg_ppstg_T_read_reg_509_pp0_it14;
                ap_reg_ppstg_T_read_reg_509_pp0_it16 <= ap_reg_ppstg_T_read_reg_509_pp0_it15;
                ap_reg_ppstg_T_read_reg_509_pp0_it17 <= ap_reg_ppstg_T_read_reg_509_pp0_it16;
                ap_reg_ppstg_T_read_reg_509_pp0_it18 <= ap_reg_ppstg_T_read_reg_509_pp0_it17;
                ap_reg_ppstg_T_read_reg_509_pp0_it19 <= ap_reg_ppstg_T_read_reg_509_pp0_it18;
                ap_reg_ppstg_T_read_reg_509_pp0_it2 <= ap_reg_ppstg_T_read_reg_509_pp0_it1;
                ap_reg_ppstg_T_read_reg_509_pp0_it20 <= ap_reg_ppstg_T_read_reg_509_pp0_it19;
                ap_reg_ppstg_T_read_reg_509_pp0_it21 <= ap_reg_ppstg_T_read_reg_509_pp0_it20;
                ap_reg_ppstg_T_read_reg_509_pp0_it22 <= ap_reg_ppstg_T_read_reg_509_pp0_it21;
                ap_reg_ppstg_T_read_reg_509_pp0_it23 <= ap_reg_ppstg_T_read_reg_509_pp0_it22;
                ap_reg_ppstg_T_read_reg_509_pp0_it24 <= ap_reg_ppstg_T_read_reg_509_pp0_it23;
                ap_reg_ppstg_T_read_reg_509_pp0_it3 <= ap_reg_ppstg_T_read_reg_509_pp0_it2;
                ap_reg_ppstg_T_read_reg_509_pp0_it4 <= ap_reg_ppstg_T_read_reg_509_pp0_it3;
                ap_reg_ppstg_T_read_reg_509_pp0_it5 <= ap_reg_ppstg_T_read_reg_509_pp0_it4;
                ap_reg_ppstg_T_read_reg_509_pp0_it6 <= ap_reg_ppstg_T_read_reg_509_pp0_it5;
                ap_reg_ppstg_T_read_reg_509_pp0_it7 <= ap_reg_ppstg_T_read_reg_509_pp0_it6;
                ap_reg_ppstg_T_read_reg_509_pp0_it8 <= ap_reg_ppstg_T_read_reg_509_pp0_it7;
                ap_reg_ppstg_T_read_reg_509_pp0_it9 <= ap_reg_ppstg_T_read_reg_509_pp0_it8;
                ap_reg_ppstg_X_read_reg_516_pp0_it1 <= X_read_reg_516;
                ap_reg_ppstg_X_read_reg_516_pp0_it2 <= ap_reg_ppstg_X_read_reg_516_pp0_it1;
                ap_reg_ppstg_b_read_reg_498_pp0_it1 <= b_read_reg_498;
                ap_reg_ppstg_b_read_reg_498_pp0_it10 <= ap_reg_ppstg_b_read_reg_498_pp0_it9;
                ap_reg_ppstg_b_read_reg_498_pp0_it11 <= ap_reg_ppstg_b_read_reg_498_pp0_it10;
                ap_reg_ppstg_b_read_reg_498_pp0_it12 <= ap_reg_ppstg_b_read_reg_498_pp0_it11;
                ap_reg_ppstg_b_read_reg_498_pp0_it13 <= ap_reg_ppstg_b_read_reg_498_pp0_it12;
                ap_reg_ppstg_b_read_reg_498_pp0_it14 <= ap_reg_ppstg_b_read_reg_498_pp0_it13;
                ap_reg_ppstg_b_read_reg_498_pp0_it15 <= ap_reg_ppstg_b_read_reg_498_pp0_it14;
                ap_reg_ppstg_b_read_reg_498_pp0_it16 <= ap_reg_ppstg_b_read_reg_498_pp0_it15;
                ap_reg_ppstg_b_read_reg_498_pp0_it17 <= ap_reg_ppstg_b_read_reg_498_pp0_it16;
                ap_reg_ppstg_b_read_reg_498_pp0_it18 <= ap_reg_ppstg_b_read_reg_498_pp0_it17;
                ap_reg_ppstg_b_read_reg_498_pp0_it19 <= ap_reg_ppstg_b_read_reg_498_pp0_it18;
                ap_reg_ppstg_b_read_reg_498_pp0_it2 <= ap_reg_ppstg_b_read_reg_498_pp0_it1;
                ap_reg_ppstg_b_read_reg_498_pp0_it20 <= ap_reg_ppstg_b_read_reg_498_pp0_it19;
                ap_reg_ppstg_b_read_reg_498_pp0_it21 <= ap_reg_ppstg_b_read_reg_498_pp0_it20;
                ap_reg_ppstg_b_read_reg_498_pp0_it22 <= ap_reg_ppstg_b_read_reg_498_pp0_it21;
                ap_reg_ppstg_b_read_reg_498_pp0_it23 <= ap_reg_ppstg_b_read_reg_498_pp0_it22;
                ap_reg_ppstg_b_read_reg_498_pp0_it3 <= ap_reg_ppstg_b_read_reg_498_pp0_it2;
                ap_reg_ppstg_b_read_reg_498_pp0_it4 <= ap_reg_ppstg_b_read_reg_498_pp0_it3;
                ap_reg_ppstg_b_read_reg_498_pp0_it5 <= ap_reg_ppstg_b_read_reg_498_pp0_it4;
                ap_reg_ppstg_b_read_reg_498_pp0_it6 <= ap_reg_ppstg_b_read_reg_498_pp0_it5;
                ap_reg_ppstg_b_read_reg_498_pp0_it7 <= ap_reg_ppstg_b_read_reg_498_pp0_it6;
                ap_reg_ppstg_b_read_reg_498_pp0_it8 <= ap_reg_ppstg_b_read_reg_498_pp0_it7;
                ap_reg_ppstg_b_read_reg_498_pp0_it9 <= ap_reg_ppstg_b_read_reg_498_pp0_it8;
                ap_reg_ppstg_tmp_47_i1_reg_977_pp0_it35 <= tmp_47_i1_reg_977;
                ap_reg_ppstg_tmp_47_i1_reg_977_pp0_it36 <= ap_reg_ppstg_tmp_47_i1_reg_977_pp0_it35;
                ap_reg_ppstg_tmp_47_i1_reg_977_pp0_it37 <= ap_reg_ppstg_tmp_47_i1_reg_977_pp0_it36;
                ap_reg_ppstg_tmp_47_i1_reg_977_pp0_it38 <= ap_reg_ppstg_tmp_47_i1_reg_977_pp0_it37;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then
                ap_reg_ppstg_t1_reg_636_pp0_it10 <= ap_reg_ppstg_t1_reg_636_pp0_it9;
                ap_reg_ppstg_t1_reg_636_pp0_it11 <= ap_reg_ppstg_t1_reg_636_pp0_it10;
                ap_reg_ppstg_t1_reg_636_pp0_it12 <= ap_reg_ppstg_t1_reg_636_pp0_it11;
                ap_reg_ppstg_t1_reg_636_pp0_it13 <= ap_reg_ppstg_t1_reg_636_pp0_it12;
                ap_reg_ppstg_t1_reg_636_pp0_it14 <= ap_reg_ppstg_t1_reg_636_pp0_it13;
                ap_reg_ppstg_t1_reg_636_pp0_it15 <= ap_reg_ppstg_t1_reg_636_pp0_it14;
                ap_reg_ppstg_t1_reg_636_pp0_it16 <= ap_reg_ppstg_t1_reg_636_pp0_it15;
                ap_reg_ppstg_t1_reg_636_pp0_it17 <= ap_reg_ppstg_t1_reg_636_pp0_it16;
                ap_reg_ppstg_t1_reg_636_pp0_it18 <= ap_reg_ppstg_t1_reg_636_pp0_it17;
                ap_reg_ppstg_t1_reg_636_pp0_it19 <= ap_reg_ppstg_t1_reg_636_pp0_it18;
                ap_reg_ppstg_t1_reg_636_pp0_it20 <= ap_reg_ppstg_t1_reg_636_pp0_it19;
                ap_reg_ppstg_t1_reg_636_pp0_it21 <= ap_reg_ppstg_t1_reg_636_pp0_it20;
                ap_reg_ppstg_t1_reg_636_pp0_it22 <= ap_reg_ppstg_t1_reg_636_pp0_it21;
                ap_reg_ppstg_t1_reg_636_pp0_it23 <= ap_reg_ppstg_t1_reg_636_pp0_it22;
                ap_reg_ppstg_t1_reg_636_pp0_it24 <= ap_reg_ppstg_t1_reg_636_pp0_it23;
                ap_reg_ppstg_t1_reg_636_pp0_it25 <= ap_reg_ppstg_t1_reg_636_pp0_it24;
                ap_reg_ppstg_t1_reg_636_pp0_it26 <= ap_reg_ppstg_t1_reg_636_pp0_it25;
                ap_reg_ppstg_t1_reg_636_pp0_it27 <= ap_reg_ppstg_t1_reg_636_pp0_it26;
                ap_reg_ppstg_t1_reg_636_pp0_it28 <= ap_reg_ppstg_t1_reg_636_pp0_it27;
                ap_reg_ppstg_t1_reg_636_pp0_it29 <= ap_reg_ppstg_t1_reg_636_pp0_it28;
                ap_reg_ppstg_t1_reg_636_pp0_it30 <= ap_reg_ppstg_t1_reg_636_pp0_it29;
                ap_reg_ppstg_t1_reg_636_pp0_it31 <= ap_reg_ppstg_t1_reg_636_pp0_it30;
                ap_reg_ppstg_t1_reg_636_pp0_it32 <= ap_reg_ppstg_t1_reg_636_pp0_it31;
                ap_reg_ppstg_t1_reg_636_pp0_it33 <= ap_reg_ppstg_t1_reg_636_pp0_it32;
                ap_reg_ppstg_t1_reg_636_pp0_it34 <= ap_reg_ppstg_t1_reg_636_pp0_it33;
                ap_reg_ppstg_t1_reg_636_pp0_it35 <= ap_reg_ppstg_t1_reg_636_pp0_it34;
                ap_reg_ppstg_t1_reg_636_pp0_it36 <= ap_reg_ppstg_t1_reg_636_pp0_it35;
                ap_reg_ppstg_t1_reg_636_pp0_it37 <= ap_reg_ppstg_t1_reg_636_pp0_it36;
                ap_reg_ppstg_t1_reg_636_pp0_it38 <= ap_reg_ppstg_t1_reg_636_pp0_it37;
                ap_reg_ppstg_t1_reg_636_pp0_it39 <= ap_reg_ppstg_t1_reg_636_pp0_it38;
                ap_reg_ppstg_t1_reg_636_pp0_it4 <= t1_reg_636;
                ap_reg_ppstg_t1_reg_636_pp0_it5 <= ap_reg_ppstg_t1_reg_636_pp0_it4;
                ap_reg_ppstg_t1_reg_636_pp0_it6 <= ap_reg_ppstg_t1_reg_636_pp0_it5;
                ap_reg_ppstg_t1_reg_636_pp0_it7 <= ap_reg_ppstg_t1_reg_636_pp0_it6;
                ap_reg_ppstg_t1_reg_636_pp0_it8 <= ap_reg_ppstg_t1_reg_636_pp0_it7;
                ap_reg_ppstg_t1_reg_636_pp0_it9 <= ap_reg_ppstg_t1_reg_636_pp0_it8;
                ap_reg_ppstg_tmp_30_reg_648_pp0_it10 <= ap_reg_ppstg_tmp_30_reg_648_pp0_it9;
                ap_reg_ppstg_tmp_30_reg_648_pp0_it11 <= ap_reg_ppstg_tmp_30_reg_648_pp0_it10;
                ap_reg_ppstg_tmp_30_reg_648_pp0_it12 <= ap_reg_ppstg_tmp_30_reg_648_pp0_it11;
                ap_reg_ppstg_tmp_30_reg_648_pp0_it13 <= ap_reg_ppstg_tmp_30_reg_648_pp0_it12;
                ap_reg_ppstg_tmp_30_reg_648_pp0_it14 <= ap_reg_ppstg_tmp_30_reg_648_pp0_it13;
                ap_reg_ppstg_tmp_30_reg_648_pp0_it15 <= ap_reg_ppstg_tmp_30_reg_648_pp0_it14;
                ap_reg_ppstg_tmp_30_reg_648_pp0_it16 <= ap_reg_ppstg_tmp_30_reg_648_pp0_it15;
                ap_reg_ppstg_tmp_30_reg_648_pp0_it17 <= ap_reg_ppstg_tmp_30_reg_648_pp0_it16;
                ap_reg_ppstg_tmp_30_reg_648_pp0_it18 <= ap_reg_ppstg_tmp_30_reg_648_pp0_it17;
                ap_reg_ppstg_tmp_30_reg_648_pp0_it19 <= ap_reg_ppstg_tmp_30_reg_648_pp0_it18;
                ap_reg_ppstg_tmp_30_reg_648_pp0_it20 <= ap_reg_ppstg_tmp_30_reg_648_pp0_it19;
                ap_reg_ppstg_tmp_30_reg_648_pp0_it5 <= tmp_30_reg_648;
                ap_reg_ppstg_tmp_30_reg_648_pp0_it6 <= ap_reg_ppstg_tmp_30_reg_648_pp0_it5;
                ap_reg_ppstg_tmp_30_reg_648_pp0_it7 <= ap_reg_ppstg_tmp_30_reg_648_pp0_it6;
                ap_reg_ppstg_tmp_30_reg_648_pp0_it8 <= ap_reg_ppstg_tmp_30_reg_648_pp0_it7;
                ap_reg_ppstg_tmp_30_reg_648_pp0_it9 <= ap_reg_ppstg_tmp_30_reg_648_pp0_it8;
                ap_reg_ppstg_tmp_43_reg_652_pp0_it10 <= ap_reg_ppstg_tmp_43_reg_652_pp0_it9;
                ap_reg_ppstg_tmp_43_reg_652_pp0_it11 <= ap_reg_ppstg_tmp_43_reg_652_pp0_it10;
                ap_reg_ppstg_tmp_43_reg_652_pp0_it12 <= ap_reg_ppstg_tmp_43_reg_652_pp0_it11;
                ap_reg_ppstg_tmp_43_reg_652_pp0_it13 <= ap_reg_ppstg_tmp_43_reg_652_pp0_it12;
                ap_reg_ppstg_tmp_43_reg_652_pp0_it14 <= ap_reg_ppstg_tmp_43_reg_652_pp0_it13;
                ap_reg_ppstg_tmp_43_reg_652_pp0_it15 <= ap_reg_ppstg_tmp_43_reg_652_pp0_it14;
                ap_reg_ppstg_tmp_43_reg_652_pp0_it16 <= ap_reg_ppstg_tmp_43_reg_652_pp0_it15;
                ap_reg_ppstg_tmp_43_reg_652_pp0_it17 <= ap_reg_ppstg_tmp_43_reg_652_pp0_it16;
                ap_reg_ppstg_tmp_43_reg_652_pp0_it18 <= ap_reg_ppstg_tmp_43_reg_652_pp0_it17;
                ap_reg_ppstg_tmp_43_reg_652_pp0_it19 <= ap_reg_ppstg_tmp_43_reg_652_pp0_it18;
                ap_reg_ppstg_tmp_43_reg_652_pp0_it20 <= ap_reg_ppstg_tmp_43_reg_652_pp0_it19;
                ap_reg_ppstg_tmp_43_reg_652_pp0_it21 <= ap_reg_ppstg_tmp_43_reg_652_pp0_it20;
                ap_reg_ppstg_tmp_43_reg_652_pp0_it22 <= ap_reg_ppstg_tmp_43_reg_652_pp0_it21;
                ap_reg_ppstg_tmp_43_reg_652_pp0_it23 <= ap_reg_ppstg_tmp_43_reg_652_pp0_it22;
                ap_reg_ppstg_tmp_43_reg_652_pp0_it7 <= tmp_43_reg_652;
                ap_reg_ppstg_tmp_43_reg_652_pp0_it8 <= ap_reg_ppstg_tmp_43_reg_652_pp0_it7;
                ap_reg_ppstg_tmp_43_reg_652_pp0_it9 <= ap_reg_ppstg_tmp_43_reg_652_pp0_it8;
                ap_reg_ppstg_tmp_49_reg_570_pp0_it1 <= tmp_49_reg_570;
                ap_reg_ppstg_tmp_49_reg_570_pp0_it10 <= ap_reg_ppstg_tmp_49_reg_570_pp0_it9;
                ap_reg_ppstg_tmp_49_reg_570_pp0_it11 <= ap_reg_ppstg_tmp_49_reg_570_pp0_it10;
                ap_reg_ppstg_tmp_49_reg_570_pp0_it12 <= ap_reg_ppstg_tmp_49_reg_570_pp0_it11;
                ap_reg_ppstg_tmp_49_reg_570_pp0_it13 <= ap_reg_ppstg_tmp_49_reg_570_pp0_it12;
                ap_reg_ppstg_tmp_49_reg_570_pp0_it14 <= ap_reg_ppstg_tmp_49_reg_570_pp0_it13;
                ap_reg_ppstg_tmp_49_reg_570_pp0_it15 <= ap_reg_ppstg_tmp_49_reg_570_pp0_it14;
                ap_reg_ppstg_tmp_49_reg_570_pp0_it16 <= ap_reg_ppstg_tmp_49_reg_570_pp0_it15;
                ap_reg_ppstg_tmp_49_reg_570_pp0_it17 <= ap_reg_ppstg_tmp_49_reg_570_pp0_it16;
                ap_reg_ppstg_tmp_49_reg_570_pp0_it18 <= ap_reg_ppstg_tmp_49_reg_570_pp0_it17;
                ap_reg_ppstg_tmp_49_reg_570_pp0_it19 <= ap_reg_ppstg_tmp_49_reg_570_pp0_it18;
                ap_reg_ppstg_tmp_49_reg_570_pp0_it2 <= ap_reg_ppstg_tmp_49_reg_570_pp0_it1;
                ap_reg_ppstg_tmp_49_reg_570_pp0_it20 <= ap_reg_ppstg_tmp_49_reg_570_pp0_it19;
                ap_reg_ppstg_tmp_49_reg_570_pp0_it21 <= ap_reg_ppstg_tmp_49_reg_570_pp0_it20;
                ap_reg_ppstg_tmp_49_reg_570_pp0_it22 <= ap_reg_ppstg_tmp_49_reg_570_pp0_it21;
                ap_reg_ppstg_tmp_49_reg_570_pp0_it23 <= ap_reg_ppstg_tmp_49_reg_570_pp0_it22;
                ap_reg_ppstg_tmp_49_reg_570_pp0_it24 <= ap_reg_ppstg_tmp_49_reg_570_pp0_it23;
                ap_reg_ppstg_tmp_49_reg_570_pp0_it25 <= ap_reg_ppstg_tmp_49_reg_570_pp0_it24;
                ap_reg_ppstg_tmp_49_reg_570_pp0_it26 <= ap_reg_ppstg_tmp_49_reg_570_pp0_it25;
                ap_reg_ppstg_tmp_49_reg_570_pp0_it27 <= ap_reg_ppstg_tmp_49_reg_570_pp0_it26;
                ap_reg_ppstg_tmp_49_reg_570_pp0_it28 <= ap_reg_ppstg_tmp_49_reg_570_pp0_it27;
                ap_reg_ppstg_tmp_49_reg_570_pp0_it29 <= ap_reg_ppstg_tmp_49_reg_570_pp0_it28;
                ap_reg_ppstg_tmp_49_reg_570_pp0_it3 <= ap_reg_ppstg_tmp_49_reg_570_pp0_it2;
                ap_reg_ppstg_tmp_49_reg_570_pp0_it30 <= ap_reg_ppstg_tmp_49_reg_570_pp0_it29;
                ap_reg_ppstg_tmp_49_reg_570_pp0_it31 <= ap_reg_ppstg_tmp_49_reg_570_pp0_it30;
                ap_reg_ppstg_tmp_49_reg_570_pp0_it32 <= ap_reg_ppstg_tmp_49_reg_570_pp0_it31;
                ap_reg_ppstg_tmp_49_reg_570_pp0_it33 <= ap_reg_ppstg_tmp_49_reg_570_pp0_it32;
                ap_reg_ppstg_tmp_49_reg_570_pp0_it34 <= ap_reg_ppstg_tmp_49_reg_570_pp0_it33;
                ap_reg_ppstg_tmp_49_reg_570_pp0_it35 <= ap_reg_ppstg_tmp_49_reg_570_pp0_it34;
                ap_reg_ppstg_tmp_49_reg_570_pp0_it36 <= ap_reg_ppstg_tmp_49_reg_570_pp0_it35;
                ap_reg_ppstg_tmp_49_reg_570_pp0_it37 <= ap_reg_ppstg_tmp_49_reg_570_pp0_it36;
                ap_reg_ppstg_tmp_49_reg_570_pp0_it38 <= ap_reg_ppstg_tmp_49_reg_570_pp0_it37;
                ap_reg_ppstg_tmp_49_reg_570_pp0_it39 <= ap_reg_ppstg_tmp_49_reg_570_pp0_it38;
                ap_reg_ppstg_tmp_49_reg_570_pp0_it4 <= ap_reg_ppstg_tmp_49_reg_570_pp0_it3;
                ap_reg_ppstg_tmp_49_reg_570_pp0_it40 <= ap_reg_ppstg_tmp_49_reg_570_pp0_it39;
                ap_reg_ppstg_tmp_49_reg_570_pp0_it41 <= ap_reg_ppstg_tmp_49_reg_570_pp0_it40;
                ap_reg_ppstg_tmp_49_reg_570_pp0_it5 <= ap_reg_ppstg_tmp_49_reg_570_pp0_it4;
                ap_reg_ppstg_tmp_49_reg_570_pp0_it6 <= ap_reg_ppstg_tmp_49_reg_570_pp0_it5;
                ap_reg_ppstg_tmp_49_reg_570_pp0_it7 <= ap_reg_ppstg_tmp_49_reg_570_pp0_it6;
                ap_reg_ppstg_tmp_49_reg_570_pp0_it8 <= ap_reg_ppstg_tmp_49_reg_570_pp0_it7;
                ap_reg_ppstg_tmp_49_reg_570_pp0_it9 <= ap_reg_ppstg_tmp_49_reg_570_pp0_it8;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm))) then
                ap_reg_ppstg_tmp_47_i2_reg_962_pp0_it34 <= tmp_47_i2_reg_962;
                ap_reg_ppstg_tmp_47_i2_reg_962_pp0_it35 <= ap_reg_ppstg_tmp_47_i2_reg_962_pp0_it34;
                ap_reg_ppstg_tmp_47_i2_reg_962_pp0_it36 <= ap_reg_ppstg_tmp_47_i2_reg_962_pp0_it35;
                ap_reg_ppstg_tmp_47_i2_reg_962_pp0_it37 <= ap_reg_ppstg_tmp_47_i2_reg_962_pp0_it36;
                ap_reg_ppstg_tmp_57_i3_reg_835_pp0_it31 <= tmp_57_i3_reg_835;
                ap_reg_ppstg_tmp_57_i3_reg_835_pp0_it32 <= ap_reg_ppstg_tmp_57_i3_reg_835_pp0_it31;
                ap_reg_ppstg_tmp_57_i3_reg_835_pp0_it33 <= ap_reg_ppstg_tmp_57_i3_reg_835_pp0_it32;
                ap_reg_ppstg_tmp_57_i3_reg_835_pp0_it34 <= ap_reg_ppstg_tmp_57_i3_reg_835_pp0_it33;
                ap_reg_ppstg_tmp_57_i3_reg_835_pp0_it35 <= ap_reg_ppstg_tmp_57_i3_reg_835_pp0_it34;
                ap_reg_ppstg_tmp_57_i3_reg_835_pp0_it36 <= ap_reg_ppstg_tmp_57_i3_reg_835_pp0_it35;
                ap_reg_ppstg_tmp_57_i3_reg_835_pp0_it37 <= ap_reg_ppstg_tmp_57_i3_reg_835_pp0_it36;
                ap_reg_ppstg_tmp_57_i3_reg_835_pp0_it38 <= ap_reg_ppstg_tmp_57_i3_reg_835_pp0_it37;
                ap_reg_ppstg_tmp_57_i3_reg_835_pp0_it39 <= ap_reg_ppstg_tmp_57_i3_reg_835_pp0_it38;
                ap_reg_ppstg_tmp_57_i3_reg_835_pp0_it40 <= ap_reg_ppstg_tmp_57_i3_reg_835_pp0_it39;
                ap_reg_ppstg_v_4_reg_641_pp0_it10 <= ap_reg_ppstg_v_4_reg_641_pp0_it9;
                ap_reg_ppstg_v_4_reg_641_pp0_it11 <= ap_reg_ppstg_v_4_reg_641_pp0_it10;
                ap_reg_ppstg_v_4_reg_641_pp0_it12 <= ap_reg_ppstg_v_4_reg_641_pp0_it11;
                ap_reg_ppstg_v_4_reg_641_pp0_it13 <= ap_reg_ppstg_v_4_reg_641_pp0_it12;
                ap_reg_ppstg_v_4_reg_641_pp0_it14 <= ap_reg_ppstg_v_4_reg_641_pp0_it13;
                ap_reg_ppstg_v_4_reg_641_pp0_it15 <= ap_reg_ppstg_v_4_reg_641_pp0_it14;
                ap_reg_ppstg_v_4_reg_641_pp0_it5 <= v_4_reg_641;
                ap_reg_ppstg_v_4_reg_641_pp0_it6 <= ap_reg_ppstg_v_4_reg_641_pp0_it5;
                ap_reg_ppstg_v_4_reg_641_pp0_it7 <= ap_reg_ppstg_v_4_reg_641_pp0_it6;
                ap_reg_ppstg_v_4_reg_641_pp0_it8 <= ap_reg_ppstg_v_4_reg_641_pp0_it7;
                ap_reg_ppstg_v_4_reg_641_pp0_it9 <= ap_reg_ppstg_v_4_reg_641_pp0_it8;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm))) then
                ap_reg_ppstg_tmp_47_i_reg_947_pp0_it34 <= tmp_47_i_reg_947;
                ap_reg_ppstg_tmp_47_i_reg_947_pp0_it35 <= ap_reg_ppstg_tmp_47_i_reg_947_pp0_it34;
                ap_reg_ppstg_tmp_47_i_reg_947_pp0_it36 <= ap_reg_ppstg_tmp_47_i_reg_947_pp0_it35;
                ap_reg_ppstg_tmp_47_i_reg_947_pp0_it37 <= ap_reg_ppstg_tmp_47_i_reg_947_pp0_it36;
                ap_reg_ppstg_tmp_57_i1_reg_830_pp0_it31 <= tmp_57_i1_reg_830;
                ap_reg_ppstg_tmp_57_i1_reg_830_pp0_it32 <= ap_reg_ppstg_tmp_57_i1_reg_830_pp0_it31;
                ap_reg_ppstg_tmp_57_i1_reg_830_pp0_it33 <= ap_reg_ppstg_tmp_57_i1_reg_830_pp0_it32;
                ap_reg_ppstg_tmp_57_i1_reg_830_pp0_it34 <= ap_reg_ppstg_tmp_57_i1_reg_830_pp0_it33;
                ap_reg_ppstg_tmp_57_i1_reg_830_pp0_it35 <= ap_reg_ppstg_tmp_57_i1_reg_830_pp0_it34;
                ap_reg_ppstg_tmp_57_i1_reg_830_pp0_it36 <= ap_reg_ppstg_tmp_57_i1_reg_830_pp0_it35;
                ap_reg_ppstg_tmp_57_i1_reg_830_pp0_it37 <= ap_reg_ppstg_tmp_57_i1_reg_830_pp0_it36;
                ap_reg_ppstg_tmp_57_i1_reg_830_pp0_it38 <= ap_reg_ppstg_tmp_57_i1_reg_830_pp0_it37;
                ap_reg_ppstg_tmp_57_i1_reg_830_pp0_it39 <= ap_reg_ppstg_tmp_57_i1_reg_830_pp0_it38;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it29) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm))) then
                d1_reg_729 <= grp_fu_255_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it29) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then
                d2_reg_775 <= grp_fu_163_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm))) then
                k_reg_540 <= grp_rand_uint32_fu_147_ap_return(63 downto 5);
                l_reg_545 <= grp_rand_uint32_fu_147_ap_return(63 downto 6);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it29) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it28))) then
                p_Val2_2_reg_743 <= p_Val2_2_fu_393_p2;
                tmp_64_reg_748 <= tmp_64_fu_399_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and (ap_const_logic_1 = ap_ce) and (ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))))) then
                p_Val2_3_reg_798 <= p_Val2_3_fu_441_p2;
                tmp_65_reg_803 <= tmp_65_fu_447_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm) and not((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm) and (ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0)))) then
                reg_292 <= grp_fu_227_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it33) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it32))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it40) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_57_i1_reg_830_pp0_it39) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it39))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it42) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it41)))) then
                reg_298 <= grp_fu_182_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it34) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it33))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it34) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it33)))) then
                reg_303 <= grp_fu_227_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it34) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it33))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it39) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_57_i_reg_765_pp0_it38) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it38))))) then
                reg_309 <= grp_fu_177_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it36) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it35))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it40) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it39) and (ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_57_i3_reg_835_pp0_it40)))) then
                reg_314 <= grp_fu_182_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it39) and (ap_const_logic_1 = ap_ce) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it38)) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)))) or ((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it39) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it38) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)))))) then
                reg_319 <= grp_fu_239_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then
                t1_reg_636 <= grp_fu_211_p2;
                tmp_29_reg_631 <= grp_fu_207_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm))) then
                t2_reg_615 <= grp_fu_207_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm))) then
                tmp_25_reg_590 <= grp_fu_211_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm))) then
                tmp_27_reg_580 <= grp_fu_268_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm))) then
                tmp_28_reg_595 <= grp_fu_163_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then
                tmp_30_reg_648 <= grp_fu_262_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_30_reg_648_pp0_it6))) then
                tmp_31_reg_657 <= grp_fu_282_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_30_reg_648_pp0_it7))) then
                tmp_32_reg_662 <= grp_fu_207_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it12) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_30_reg_648_pp0_it11))) then
                tmp_33_reg_667 <= grp_fu_255_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it16) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_30_reg_648_pp0_it15))) then
                tmp_34_reg_672 <= grp_fu_271_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and (ap_const_logic_1 = ap_ce) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_30_reg_648_pp0_it16))) then
                tmp_35_reg_677 <= grp_fu_207_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm))) then
                tmp_36_reg_560 <= grp_fu_163_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm))) then
                tmp_37_reg_585 <= grp_fu_207_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm))) then
                tmp_40_reg_565 <= grp_fu_207_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then
                tmp_41_reg_600 <= grp_fu_287_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm))) then
                tmp_42_reg_621 <= grp_fu_255_p2;
                tmp_48_reg_626 <= grp_fu_271_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm) and (ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0))) then
                tmp_43_i1_reg_855 <= grp_fu_169_p2;
                tmp_44_i2_reg_860 <= grp_fu_232_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it31) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it30))) then
                tmp_43_i2_reg_880 <= grp_fu_177_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it31) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it30)))) then
                tmp_43_i5_reg_870 <= grp_fu_163_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and (ap_const_logic_1 = ap_ce) and not((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0)) and (ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm))) then
                tmp_43_i_reg_840 <= grp_fu_163_p2;
                tmp_44_i7_reg_850 <= grp_fu_232_p2;
                tmp_i4_reg_845 <= grp_fu_227_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and (ap_const_logic_1 = ap_ce) and not((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0)) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))))) then
                tmp_44_i_reg_788 <= grp_fu_220_p2;
                tmp_i_reg_783 <= grp_fu_211_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it22) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm))) then
                tmp_44_reg_698 <= grp_fu_211_p2;
                v2_reg_703 <= grp_fu_220_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce) and (ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0))) then
                tmp_45_i1_reg_865 <= grp_fu_220_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it31) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it30))) then
                tmp_45_i2_reg_885 <= grp_fu_211_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it31) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it30)))) then
                tmp_45_i8_reg_875 <= grp_fu_211_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm))) then
                tmp_45_reg_709 <= grp_fu_207_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it33) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it32))) then
                tmp_46_i2_reg_957 <= grp_fu_287_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it33) and (ap_const_logic_1 = ap_ce) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it32)) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm))) then
                tmp_46_i9_reg_942 <= grp_fu_287_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it24) and (ap_const_logic_1 = ap_ce) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))))) then
                tmp_46_reg_714 <= grp_fu_163_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it34) and (ap_const_logic_1 = ap_ce) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it33)) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))))) then
                tmp_47_i1_reg_977 <= grp_fu_227_p2;
                tmp_49_i1_reg_982 <= grp_fu_169_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it33) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it32) and (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm))) then
                tmp_47_i2_reg_962 <= grp_fu_220_p2;
                tmp_48_i3_reg_972 <= grp_fu_227_p2;
                tmp_49_i2_reg_967 <= grp_fu_177_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it33) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it32)))) then
                tmp_47_i_reg_947 <= grp_fu_220_p2;
                tmp_48_i1_reg_952 <= grp_fu_227_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it24) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm))) then
                tmp_47_reg_719 <= grp_fu_220_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it32) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it31))) then
                tmp_48_i2_reg_937 <= grp_fu_227_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it32) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it31)))) then
                tmp_48_i_reg_918 <= grp_fu_239_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it34) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it33))) then
                tmp_49_i3_reg_987 <= grp_fu_163_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then
                tmp_49_reg_570 <= tmp_49_fu_367_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it34) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it33)))) then
                tmp_50_i1_reg_997 <= grp_fu_247_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it34) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it33))) then
                tmp_50_i2_reg_992 <= grp_fu_211_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it34) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it33))) then
                tmp_50_i3_reg_1007 <= grp_fu_232_p2;
                tmp_51_i2_reg_1002 <= grp_fu_169_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it35) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it34)))) then
                tmp_51_i1_reg_1012 <= grp_fu_192_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it35) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it34))) then
                tmp_51_i3_reg_1022 <= grp_fu_182_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it36) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it35)))) then
                tmp_52_i1_reg_1037 <= grp_fu_232_p2;
                tmp_53_i_reg_1032 <= grp_fu_169_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it35) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it34))) then
                tmp_52_i2_reg_1027 <= grp_fu_239_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it36) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it35))) then
                tmp_52_i3_reg_1047 <= grp_fu_220_p2;
                tmp_53_i2_reg_1042 <= grp_fu_169_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it35) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it34)))) then
                tmp_52_i_reg_1017 <= grp_fu_232_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it36) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it35))) then
                tmp_53_i3_reg_1057 <= grp_fu_177_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it37) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it36)))) then
                tmp_54_i1_reg_1072 <= grp_fu_239_p2;
                tmp_55_i_reg_1067 <= grp_fu_192_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it37) and (ap_const_logic_1 = ap_ce) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it36))) then
                tmp_54_i2_reg_1062 <= grp_fu_232_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it37) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it36))) then
                tmp_54_i3_reg_1082 <= grp_fu_247_p2;
                tmp_55_i2_reg_1077 <= grp_fu_169_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it36) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it35)))) then
                tmp_54_i_reg_1052 <= grp_fu_239_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it38) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it37)))) then
                tmp_55_i1_reg_1087 <= grp_fu_177_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it38) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it37))) then
                tmp_55_i3_reg_1097 <= grp_fu_177_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it38) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it37)))) then
                tmp_56_i1_reg_1107 <= grp_fu_247_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it38) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it37))) then
                tmp_56_i2_reg_1102 <= grp_fu_232_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it38) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it37)))) then
                tmp_56_i_reg_1092 <= grp_fu_227_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and (ap_const_logic_1 = ap_ce) and not((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0)) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm))) then
                tmp_57_i1_reg_830 <= grp_fu_262_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it29) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it28))) then
                tmp_57_i2_reg_770 <= grp_fu_262_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and (ap_const_logic_1 = ap_ce) and (ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0) and (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm))) then
                tmp_57_i3_reg_835 <= grp_fu_262_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it29) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it28)))) then
                tmp_57_i_reg_765 <= grp_fu_262_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it39) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it38) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_57_i2_reg_770_pp0_it38))) then
                tmp_58_i2_reg_1129 <= grp_fu_192_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it40) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it39)))) then
                tmp_59_i1_reg_1145 <= tmp_59_i1_fu_480_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it39) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it38))) then
                tmp_59_i2_reg_1134 <= tmp_59_i2_fu_475_p3;
                w_3_reg_1139 <= grp_fu_251_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it40) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it39))) then
                tmp_59_i3_reg_1155 <= tmp_59_i3_fu_486_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it39) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it38)))) then
                tmp_59_i_reg_1124 <= tmp_59_i_fu_468_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_30_reg_648_pp0_it20))) then
                tmp_59_reg_689 <= grp_fu_262_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_ce) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))))) then
                tmp_s_reg_575 <= grp_fu_268_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it25) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm))) then
                v1_reg_724 <= grp_fu_169_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_30_reg_648_pp0_it20) and not((ap_const_lv1_0 = tmp_59_reg_689)))) then
                v_2_reg_693 <= grp_fu_163_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm))) then
                v_4_reg_641 <= grp_fu_169_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it20) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_30_reg_648_pp0_it19))) then
                v_reg_682 <= grp_fu_255_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it40) and (ap_const_logic_1 = ap_ce) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it39)) and (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm))) then
                vc1_reg_1150 <= grp_fu_247_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it41) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it40)))) then
                vc2_reg_1165 <= grp_fu_247_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it41) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it40)))) then
                vc_reg_1175 <= grp_fu_182_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it41) and (ap_const_logic_1 = ap_ce) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it40))) then
                vp1_reg_1160 <= grp_fu_247_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it41) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it40))) then
                vp2_reg_1170 <= grp_fu_251_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it39) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it38)))) then
                w_1_reg_1118 <= grp_fu_251_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it39) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it38))) then
                w_2_reg_1112 <= grp_fu_239_p2;
            end if;
        end if;
    end process;

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_reg_ppiten_pp0_it3, ap_reg_ppiten_pp0_it4, ap_reg_ppiten_pp0_it5, ap_reg_ppiten_pp0_it6, ap_reg_ppiten_pp0_it7, ap_reg_ppiten_pp0_it8, ap_reg_ppiten_pp0_it9, ap_reg_ppiten_pp0_it10, ap_reg_ppiten_pp0_it11, ap_reg_ppiten_pp0_it12, ap_reg_ppiten_pp0_it13, ap_reg_ppiten_pp0_it14, ap_reg_ppiten_pp0_it15, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp0_it18, ap_reg_ppiten_pp0_it19, ap_reg_ppiten_pp0_it20, ap_reg_ppiten_pp0_it21, ap_reg_ppiten_pp0_it22, ap_reg_ppiten_pp0_it23, ap_reg_ppiten_pp0_it24, ap_reg_ppiten_pp0_it25, ap_reg_ppiten_pp0_it26, ap_reg_ppiten_pp0_it27, ap_reg_ppiten_pp0_it28, ap_reg_ppiten_pp0_it29, ap_reg_ppiten_pp0_it30, ap_reg_ppiten_pp0_it31, ap_reg_ppiten_pp0_it32, ap_reg_ppiten_pp0_it33, ap_reg_ppiten_pp0_it34, ap_reg_ppiten_pp0_it35, ap_reg_ppiten_pp0_it36, ap_reg_ppiten_pp0_it37, ap_reg_ppiten_pp0_it38, ap_reg_ppiten_pp0_it39, ap_reg_ppiten_pp0_it40, ap_reg_ppiten_pp0_it41, ap_reg_ppiten_pp0_it42, ap_ce, ap_sig_pprstidle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_pp0_stg0_fsm_0 => 
                if ((not((not((ap_const_logic_1 = ap_ce)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)))) and not(((ap_const_logic_0 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it2) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it3) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it4) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it5) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it6) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it7) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it8) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it9) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it10) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it11) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it12) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it13) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it14) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it15) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it16) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it17) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it18) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it19) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it20) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it21) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it22) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it23) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it24) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it25) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it26) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it27) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it28) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it29) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it30) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it31) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it32) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it33) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it34) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it35) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it36) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it37) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it38) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it39) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it40) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it41) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it42) and (ap_const_logic_0 = ap_start))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg1_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_0;
                end if;
            when ap_ST_pp0_stg1_fsm_1 => 
                if ((ap_const_logic_1 = ap_ce)) then
                    ap_NS_fsm <= ap_ST_pp0_stg2_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg1_fsm_1;
                end if;
            when ap_ST_pp0_stg2_fsm_2 => 
                if (((ap_const_logic_1 = ap_ce) and not((ap_const_logic_1 = ap_sig_pprstidle_pp0)))) then
                    ap_NS_fsm <= ap_ST_pp0_stg3_fsm_3;
                elsif (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_sig_pprstidle_pp0))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg2_fsm_2;
                end if;
            when ap_ST_pp0_stg3_fsm_3 => 
                if ((ap_const_logic_1 = ap_ce)) then
                    ap_NS_fsm <= ap_ST_pp0_stg4_fsm_4;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg3_fsm_3;
                end if;
            when ap_ST_pp0_stg4_fsm_4 => 
                if ((ap_const_logic_1 = ap_ce)) then
                    ap_NS_fsm <= ap_ST_pp0_stg5_fsm_5;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg4_fsm_4;
                end if;
            when ap_ST_pp0_stg5_fsm_5 => 
                if ((ap_const_logic_1 = ap_ce)) then
                    ap_NS_fsm <= ap_ST_pp0_stg6_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg5_fsm_5;
                end if;
            when ap_ST_pp0_stg6_fsm_6 => 
                if ((ap_const_logic_1 = ap_ce)) then
                    ap_NS_fsm <= ap_ST_pp0_stg7_fsm_7;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg6_fsm_6;
                end if;
            when ap_ST_pp0_stg7_fsm_7 => 
                if ((ap_const_logic_1 = ap_ce)) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg7_fsm_7;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    X_assign_1_fu_451_p1 <= p_Val2_3_reg_798;
    X_assign_fu_403_p1 <= p_Val2_2_reg_743;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it42, ap_ce)
    begin
        if (((not((ap_const_logic_1 = ap_start)) and (ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it42) and (ap_const_logic_1 = ap_ce) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_reg_ppiten_pp0_it3, ap_reg_ppiten_pp0_it4, ap_reg_ppiten_pp0_it5, ap_reg_ppiten_pp0_it6, ap_reg_ppiten_pp0_it7, ap_reg_ppiten_pp0_it8, ap_reg_ppiten_pp0_it9, ap_reg_ppiten_pp0_it10, ap_reg_ppiten_pp0_it11, ap_reg_ppiten_pp0_it12, ap_reg_ppiten_pp0_it13, ap_reg_ppiten_pp0_it14, ap_reg_ppiten_pp0_it15, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp0_it18, ap_reg_ppiten_pp0_it19, ap_reg_ppiten_pp0_it20, ap_reg_ppiten_pp0_it21, ap_reg_ppiten_pp0_it22, ap_reg_ppiten_pp0_it23, ap_reg_ppiten_pp0_it24, ap_reg_ppiten_pp0_it25, ap_reg_ppiten_pp0_it26, ap_reg_ppiten_pp0_it27, ap_reg_ppiten_pp0_it28, ap_reg_ppiten_pp0_it29, ap_reg_ppiten_pp0_it30, ap_reg_ppiten_pp0_it31, ap_reg_ppiten_pp0_it32, ap_reg_ppiten_pp0_it33, ap_reg_ppiten_pp0_it34, ap_reg_ppiten_pp0_it35, ap_reg_ppiten_pp0_it36, ap_reg_ppiten_pp0_it37, ap_reg_ppiten_pp0_it38, ap_reg_ppiten_pp0_it39, ap_reg_ppiten_pp0_it40, ap_reg_ppiten_pp0_it41, ap_reg_ppiten_pp0_it42)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it2) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it3) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it4) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it5) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it6) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it7) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it8) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it9) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it10) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it11) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it12) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it13) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it14) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it15) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it16) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it17) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it18) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it19) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it20) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it21) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it22) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it23) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it24) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it25) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it26) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it27) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it28) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it29) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it30) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it31) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it32) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it33) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it34) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it35) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it36) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it37) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it38) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it39) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it40) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it41) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it42))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_reg_phiprechg_v_1_reg_134pp0_it4 <= ap_const_lv64_1;

    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it0_preg)
    begin
        if ((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm)) then 
            ap_reg_ppiten_pp0_it0 <= ap_start;
        else 
            ap_reg_ppiten_pp0_it0 <= ap_reg_ppiten_pp0_it0_preg;
        end if; 
    end process;

    ap_return <= 
        vc_reg_1175 when (ap_reg_ppstg_tmp_49_reg_570_pp0_it41(0) = '1') else 
        reg_298;

    -- ap_sig_bdd_1157 assign process. --
    ap_sig_bdd_1157_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it21, ap_ce)
    begin
                ap_sig_bdd_1157 <= ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce));
    end process;


    -- ap_sig_bdd_2030 assign process. --
    ap_sig_bdd_2030_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it21, grp_fu_262_p2, ap_reg_ppstg_tmp_30_reg_648_pp0_it20)
    begin
                ap_sig_bdd_2030 <= ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_30_reg_648_pp0_it20) and (ap_const_lv1_0 = grp_fu_262_p2));
    end process;


    -- ap_sig_bdd_2037 assign process. --
    ap_sig_bdd_2037_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it41)
    begin
                ap_sig_bdd_2037 <= ((ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it41)));
    end process;


    -- ap_sig_bdd_629 assign process. --
    ap_sig_bdd_629_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it4, ap_ce)
    begin
                ap_sig_bdd_629 <= ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_const_logic_1 = ap_ce));
    end process;


    -- ap_sig_bdd_710 assign process. --
    ap_sig_bdd_710_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it20)
    begin
                ap_sig_bdd_710 <= ((ap_const_logic_1 = ap_reg_ppiten_pp0_it20) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm));
    end process;


    -- ap_sig_bdd_724 assign process. --
    ap_sig_bdd_724_assign_proc : process(ap_reg_ppstg_tmp_30_reg_648_pp0_it20, tmp_59_reg_689)
    begin
                ap_sig_bdd_724 <= ((ap_const_lv1_0 = ap_reg_ppstg_tmp_30_reg_648_pp0_it20) and not((ap_const_lv1_0 = tmp_59_reg_689)));
    end process;


    -- ap_sig_pprstidle_pp0 assign process. --
    ap_sig_pprstidle_pp0_assign_proc : process(ap_start, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_reg_ppiten_pp0_it3, ap_reg_ppiten_pp0_it4, ap_reg_ppiten_pp0_it5, ap_reg_ppiten_pp0_it6, ap_reg_ppiten_pp0_it7, ap_reg_ppiten_pp0_it8, ap_reg_ppiten_pp0_it9, ap_reg_ppiten_pp0_it10, ap_reg_ppiten_pp0_it11, ap_reg_ppiten_pp0_it12, ap_reg_ppiten_pp0_it13, ap_reg_ppiten_pp0_it14, ap_reg_ppiten_pp0_it15, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp0_it18, ap_reg_ppiten_pp0_it19, ap_reg_ppiten_pp0_it20, ap_reg_ppiten_pp0_it21, ap_reg_ppiten_pp0_it22, ap_reg_ppiten_pp0_it23, ap_reg_ppiten_pp0_it24, ap_reg_ppiten_pp0_it25, ap_reg_ppiten_pp0_it26, ap_reg_ppiten_pp0_it27, ap_reg_ppiten_pp0_it28, ap_reg_ppiten_pp0_it29, ap_reg_ppiten_pp0_it30, ap_reg_ppiten_pp0_it31, ap_reg_ppiten_pp0_it32, ap_reg_ppiten_pp0_it33, ap_reg_ppiten_pp0_it34, ap_reg_ppiten_pp0_it35, ap_reg_ppiten_pp0_it36, ap_reg_ppiten_pp0_it37, ap_reg_ppiten_pp0_it38, ap_reg_ppiten_pp0_it39, ap_reg_ppiten_pp0_it40, ap_reg_ppiten_pp0_it41)
    begin
        if (((ap_const_logic_0 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it2) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it3) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it4) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it5) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it6) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it7) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it8) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it9) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it10) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it11) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it12) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it13) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it14) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it15) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it16) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it17) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it18) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it19) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it20) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it21) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it22) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it23) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it24) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it25) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it26) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it27) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it28) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it29) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it30) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it31) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it32) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it33) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it34) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it35) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it36) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it37) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it38) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it39) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it40) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it41) and (ap_const_logic_0 = ap_start))) then 
            ap_sig_pprstidle_pp0 <= ap_const_logic_1;
        else 
            ap_sig_pprstidle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_start_in_grp_rand_uint32_fu_147_ap_start assign process. --
    ap_sig_start_in_grp_rand_uint32_fu_147_ap_start_assign_proc : process(ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it0)
    begin
        if (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_start = ap_const_logic_0)))) then 
            ap_sig_start_in_grp_rand_uint32_fu_147_ap_start <= ap_const_logic_1;
        else 
            ap_sig_start_in_grp_rand_uint32_fu_147_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    -- grp_fu_163_ce assign process. --
    grp_fu_163_ce_assign_proc : process(ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and ((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) or (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm) or (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm) or (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm) or (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm) or (ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm) or ((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)))) or (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm)))) then 
            grp_fu_163_ce <= ap_const_logic_1;
        else 
            grp_fu_163_ce <= ap_const_logic_0;
        end if; 
    end process;


    -- grp_fu_163_opcode assign process. --
    grp_fu_163_opcode_assign_proc : process(ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it21, ap_reg_ppiten_pp0_it23, ap_reg_ppiten_pp0_it29, ap_reg_ppiten_pp0_it30, ap_reg_ppiten_pp0_it33, ap_reg_ppstg_tmp_49_reg_570_pp0_it29, ap_reg_ppstg_tmp_49_reg_570_pp0_it32, grp_fu_262_p2, ap_reg_ppstg_tmp_30_reg_648_pp0_it20)
    begin
        if ((((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it29) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm)))) then 
            grp_fu_163_opcode <= ap_const_lv2_1;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and not((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0)) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_30_reg_648_pp0_it20) and not((ap_const_lv1_0 = grp_fu_262_p2))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm) and not((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it33) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it32) and (ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm)))) then 
            grp_fu_163_opcode <= ap_const_lv2_0;
        else 
            grp_fu_163_opcode <= "XX";
        end if; 
    end process;


    -- grp_fu_163_p0 assign process. --
    grp_fu_163_p0_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it21, ap_reg_ppiten_pp0_it23, ap_reg_ppiten_pp0_it29, ap_reg_ppiten_pp0_it30, ap_reg_ppiten_pp0_it33, b, tmp_25_reg_590, v_reg_682, tmp_45_reg_709, d1_reg_729, tmp_i_reg_783, tmp_i4_reg_845, tmp_48_i3_reg_972)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it33) and (ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm))) then 
            grp_fu_163_p0 <= tmp_48_i3_reg_972;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm))) then 
            grp_fu_163_p0 <= tmp_i4_reg_845;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm))) then 
            grp_fu_163_p0 <= tmp_i_reg_783;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it29) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm))) then 
            grp_fu_163_p0 <= d1_reg_729;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm))) then 
            grp_fu_163_p0 <= tmp_45_reg_709;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm))) then 
            grp_fu_163_p0 <= v_reg_682;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm))) then 
            grp_fu_163_p0 <= tmp_25_reg_590;
        elsif (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            grp_fu_163_p0 <= b;
        else 
            grp_fu_163_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_163_p1 assign process. --
    grp_fu_163_p1_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it21, ap_reg_ppiten_pp0_it23, ap_reg_ppiten_pp0_it29, ap_reg_ppiten_pp0_it30, ap_reg_ppiten_pp0_it33, r, ap_reg_ppstg_b_read_reg_498_pp0_it23, tmp_27_reg_580, ap_reg_ppstg_v2_reg_703_pp0_it28)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it33) and (ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm))) then 
            grp_fu_163_p1 <= ap_const_lv64_BFFD23DD4EF278D0;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm)))) then 
            grp_fu_163_p1 <= ap_const_lv64_3FF0000000000000;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it29) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm))) then 
            grp_fu_163_p1 <= ap_reg_ppstg_v2_reg_703_pp0_it28;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm))) then 
            grp_fu_163_p1 <= ap_reg_ppstg_b_read_reg_498_pp0_it23;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm))) then 
            grp_fu_163_p1 <= ap_const_lv64_BFE0000000000000;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm))) then 
            grp_fu_163_p1 <= tmp_27_reg_580;
        elsif (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            grp_fu_163_p1 <= r;
        else 
            grp_fu_163_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_169_ce assign process. --
    grp_fu_169_ce_assign_proc : process(ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_ce, ap_reg_ppstg_tmp_49_reg_570_pp0_it29, ap_reg_ppstg_tmp_49_reg_570_pp0_it32, ap_reg_ppstg_tmp_49_reg_570_pp0_it33, ap_reg_ppstg_tmp_49_reg_570_pp0_it34, ap_reg_ppstg_tmp_49_reg_570_pp0_it36)
    begin
        if (((ap_const_logic_1 = ap_ce) and ((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) or (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm) or (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm) or (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm) or ((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)))) or (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm) or ((ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm) and ((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it32)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it33) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it34)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it36))) or ((ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm) and ((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it32)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it33) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it34) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it34))))))) then 
            grp_fu_169_ce <= ap_const_logic_1;
        else 
            grp_fu_169_ce <= ap_const_logic_0;
        end if; 
    end process;


    -- grp_fu_169_p0 assign process. --
    grp_fu_169_p0_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it4, ap_reg_ppiten_pp0_it24, ap_reg_ppiten_pp0_it30, ap_reg_ppiten_pp0_it33, ap_reg_ppiten_pp0_it34, ap_reg_ppiten_pp0_it35, ap_reg_ppiten_pp0_it37, tmp_29_reg_631, ap_reg_ppstg_tmp_43_reg_652_pp0_it23, tmp_i1_reg_808, tmp_48_i1_reg_952, tmp_50_i2_reg_992, tmp_52_i_reg_1017, tmp_52_i2_reg_1027, tmp_54_i2_reg_1062)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it37) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm))) then 
            grp_fu_169_p0 <= tmp_54_i2_reg_1062;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it35) and (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm))) then 
            grp_fu_169_p0 <= tmp_52_i2_reg_1027;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it35) and (ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm))) then 
            grp_fu_169_p0 <= tmp_52_i_reg_1017;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it34) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm))) then 
            grp_fu_169_p0 <= tmp_50_i2_reg_992;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it33) and (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm))) then 
            grp_fu_169_p0 <= tmp_48_i1_reg_952;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm))) then 
            grp_fu_169_p0 <= tmp_i1_reg_808;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it24) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm))) then 
            grp_fu_169_p0 <= ap_reg_ppstg_tmp_43_reg_652_pp0_it23;
        elsif (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4))) then 
            grp_fu_169_p0 <= tmp_29_reg_631;
        else 
            grp_fu_169_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_169_p1 assign process. --
    grp_fu_169_p1_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it4, ap_reg_ppiten_pp0_it24, ap_reg_ppiten_pp0_it30, ap_reg_ppiten_pp0_it33, ap_reg_ppiten_pp0_it34, ap_reg_ppiten_pp0_it35, ap_reg_ppiten_pp0_it37, tmp_47_reg_719)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it37) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm))) then 
            grp_fu_169_p1 <= ap_const_lv64_3FD470BF3A92F8EC;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it35) and (ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it35) and (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm)))) then 
            grp_fu_169_p1 <= ap_const_lv64_BFD6D1F0E5A8325B;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it34) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm))) then 
            grp_fu_169_p1 <= ap_const_lv64_3FFC80EF025F5E68;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it33) and (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm))) then 
            grp_fu_169_p1 <= ap_const_lv64_BFFD23DD4EF278D0;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm))) then 
            grp_fu_169_p1 <= ap_const_lv64_3FF0000000000000;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it24) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm))) then 
            grp_fu_169_p1 <= tmp_47_reg_719;
        elsif (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4))) then 
            grp_fu_169_p1 <= ap_const_lv64_BFF0000000000000;
        else 
            grp_fu_169_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_177_ce assign process. --
    grp_fu_177_ce_assign_proc : process(ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_ce, ap_reg_ppstg_tmp_49_reg_570_pp0_it29, ap_reg_ppstg_tmp_49_reg_570_pp0_it32, ap_reg_ppstg_tmp_49_reg_570_pp0_it33, ap_reg_ppstg_tmp_57_i_reg_765_pp0_it38, ap_reg_ppstg_tmp_49_reg_570_pp0_it38, ap_reg_ppstg_tmp_49_reg_570_pp0_it35, ap_reg_ppstg_tmp_49_reg_570_pp0_it30, ap_reg_ppstg_tmp_49_reg_570_pp0_it36, ap_reg_ppstg_tmp_49_reg_570_pp0_it37)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and ((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it35) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it36) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it36)))) or ((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and ((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it32) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it30) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it37) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it37)))) or ((ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm) and ((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it32) or ((ap_const_lv1_0 = ap_reg_ppstg_tmp_57_i_reg_765_pp0_it38) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it38))) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it30) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it37) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it37)))) or ((ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm) and ((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it32) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it33)) or ((ap_const_lv1_0 = ap_reg_ppstg_tmp_57_i_reg_765_pp0_it38) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it38))) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it30) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it37))) or ((ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm) and ((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it32) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it33)) or ((ap_const_lv1_0 = ap_reg_ppstg_tmp_57_i_reg_765_pp0_it38) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it38))) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it35) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it30))) or ((ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm) and ((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it32) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it33)) or ((ap_const_lv1_0 = ap_reg_ppstg_tmp_57_i_reg_765_pp0_it38) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it38))) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it35))) or ((ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm) and (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it33)) or ((ap_const_lv1_0 = ap_reg_ppstg_tmp_57_i_reg_765_pp0_it38) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it38))) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it35) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it36)))) or ((ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm) and (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it33)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it35) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it36) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it36))))))) then 
            grp_fu_177_ce <= ap_const_logic_1;
        else 
            grp_fu_177_ce <= ap_const_logic_0;
        end if; 
    end process;


    -- grp_fu_177_opcode assign process. --
    grp_fu_177_opcode_assign_proc : process(ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it30, ap_reg_ppiten_pp0_it33, ap_reg_ppiten_pp0_it34, ap_reg_ppiten_pp0_it36, ap_reg_ppiten_pp0_it37, ap_reg_ppiten_pp0_it39, ap_reg_ppstg_tmp_49_reg_570_pp0_it29, ap_reg_ppstg_tmp_49_reg_570_pp0_it32, ap_reg_ppstg_tmp_49_reg_570_pp0_it33, ap_reg_ppstg_tmp_57_i_reg_765_pp0_it38, ap_reg_ppstg_tmp_49_reg_570_pp0_it38, ap_reg_ppstg_tmp_49_reg_570_pp0_it35, ap_reg_ppstg_tmp_49_reg_570_pp0_it36)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it39) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_57_i_reg_765_pp0_it38) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it38)))) then 
            grp_fu_177_opcode <= ap_const_lv2_1;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0)) or ((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it32) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it34) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it33))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it36) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it35)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it37) and (ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it36))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it37) and (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it36)))) then 
            grp_fu_177_opcode <= ap_const_lv2_0;
        else 
            grp_fu_177_opcode <= "XX";
        end if; 
    end process;


    -- grp_fu_177_p0 assign process. --
    grp_fu_177_p0_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it30, ap_reg_ppiten_pp0_it33, ap_reg_ppiten_pp0_it34, ap_reg_ppiten_pp0_it36, ap_reg_ppiten_pp0_it37, ap_reg_ppiten_pp0_it39, reg_292, reg_303, tmp_48_i2_reg_937, tmp_52_i3_reg_1047, tmp_54_i1_reg_1072, tmp_54_i3_reg_1082)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it39) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm))) then 
            grp_fu_177_p0 <= ap_const_lv64_3FF0000000000000;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it37) and (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm))) then 
            grp_fu_177_p0 <= tmp_54_i3_reg_1082;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it37) and (ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm))) then 
            grp_fu_177_p0 <= tmp_54_i1_reg_1072;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it36) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm))) then 
            grp_fu_177_p0 <= tmp_52_i3_reg_1047;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it34) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm))) then 
            grp_fu_177_p0 <= reg_303;
        elsif (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33))) then 
            grp_fu_177_p0 <= tmp_48_i2_reg_937;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm))) then 
            grp_fu_177_p0 <= reg_292;
        else 
            grp_fu_177_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_177_p1 assign process. --
    grp_fu_177_p1_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it30, ap_reg_ppiten_pp0_it33, ap_reg_ppiten_pp0_it34, ap_reg_ppiten_pp0_it36, ap_reg_ppiten_pp0_it37, ap_reg_ppiten_pp0_it39, reg_319)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it39) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm))) then 
            grp_fu_177_p1 <= reg_319;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it37) and (ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it37) and (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm)))) then 
            grp_fu_177_p1 <= ap_const_lv64_3FD470BF3A92F8EC;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it36) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm))) then 
            grp_fu_177_p1 <= ap_const_lv64_BFD6D1F0E5A8325B;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it34) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm))) then 
            grp_fu_177_p1 <= ap_const_lv64_3FFC80EF025F5E68;
        elsif (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33))) then 
            grp_fu_177_p1 <= ap_const_lv64_BFFD23DD4EF278D0;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm))) then 
            grp_fu_177_p1 <= ap_const_lv64_3FF0000000000000;
        else 
            grp_fu_177_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_182_ce assign process. --
    grp_fu_182_ce_assign_proc : process(ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_ce, ap_reg_ppstg_tmp_49_reg_570_pp0_it32, ap_reg_ppstg_tmp_57_i1_reg_830_pp0_it39, ap_reg_ppstg_tmp_49_reg_570_pp0_it39, ap_reg_ppstg_tmp_49_reg_570_pp0_it41, ap_reg_ppstg_tmp_49_reg_570_pp0_it38, ap_reg_ppstg_tmp_49_reg_570_pp0_it35, ap_reg_ppstg_tmp_57_i3_reg_835_pp0_it40, ap_reg_ppstg_tmp_49_reg_570_pp0_it31, ap_reg_ppstg_tmp_49_reg_570_pp0_it34, ap_reg_ppstg_tmp_49_reg_570_pp0_it40, ap_reg_ppstg_tmp_57_i3_reg_835_pp0_it39)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it31)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it40) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it40)) or ((ap_const_lv1_0 = ap_reg_ppstg_tmp_57_i1_reg_830_pp0_it39) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it38))))) or ((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it32)) or ((ap_const_lv1_0 = ap_reg_ppstg_tmp_57_i1_reg_830_pp0_it39) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it39))) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it41) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it34))) or ((ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm) and (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it32)) or ((ap_const_lv1_0 = ap_reg_ppstg_tmp_57_i1_reg_830_pp0_it39) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it39))) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it41) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it34) or ((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it39) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_57_i3_reg_835_pp0_it39)))) or ((ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm) and (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it32)) or ((ap_const_lv1_0 = ap_reg_ppstg_tmp_57_i1_reg_830_pp0_it39) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it39))) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it35)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it34) or ((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it39) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_57_i3_reg_835_pp0_it39)))) or ((ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm) and (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it32)) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it35)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it34) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it40)) or ((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it39) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_57_i3_reg_835_pp0_it39)))) or ((ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm) and (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it35)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it34) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it40)) or ((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it39) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_57_i3_reg_835_pp0_it39)))) or ((ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm) and (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it35)) or ((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it39) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_57_i3_reg_835_pp0_it40)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it40) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it40)))) or ((ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm) and (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it35)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it40) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it40)) or ((ap_const_lv1_0 = ap_reg_ppstg_tmp_57_i1_reg_830_pp0_it39) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it38)))))))) then 
            grp_fu_182_ce <= ap_const_logic_1;
        else 
            grp_fu_182_ce <= ap_const_logic_0;
        end if; 
    end process;


    -- grp_fu_182_opcode assign process. --
    grp_fu_182_opcode_assign_proc : process(ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it32, ap_reg_ppiten_pp0_it35, ap_reg_ppiten_pp0_it36, ap_reg_ppiten_pp0_it39, ap_reg_ppiten_pp0_it40, ap_reg_ppiten_pp0_it41, ap_reg_ppstg_tmp_57_i1_reg_830_pp0_it39, ap_reg_ppstg_tmp_49_reg_570_pp0_it39, ap_reg_ppstg_tmp_49_reg_570_pp0_it38, ap_reg_ppstg_tmp_49_reg_570_pp0_it35, ap_reg_ppstg_tmp_49_reg_570_pp0_it31, ap_reg_ppstg_tmp_49_reg_570_pp0_it34, ap_reg_ppstg_tmp_49_reg_570_pp0_it40, ap_reg_ppstg_tmp_57_i3_reg_835_pp0_it39)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it39) and (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_57_i1_reg_830_pp0_it39) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it38))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it40) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it39) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_57_i3_reg_835_pp0_it39)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it41) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it40))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it41) and (ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it40)))) then 
            grp_fu_182_opcode <= ap_const_lv2_1;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it32) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it31))) or ((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it35) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it34)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it36) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it35))))) then 
            grp_fu_182_opcode <= ap_const_lv2_0;
        else 
            grp_fu_182_opcode <= "XX";
        end if; 
    end process;


    -- grp_fu_182_p0 assign process. --
    grp_fu_182_p0_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it32, ap_reg_ppiten_pp0_it35, ap_reg_ppiten_pp0_it36, ap_reg_ppiten_pp0_it39, ap_reg_ppiten_pp0_it40, ap_reg_ppiten_pp0_it41, tmp_48_i_reg_918, tmp_50_i3_reg_1007, tmp_52_i1_reg_1037, vc1_reg_1150, vp2_reg_1170)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it41) and (ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm))) then 
            grp_fu_182_p0 <= vp2_reg_1170;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it41) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm))) then 
            grp_fu_182_p0 <= vc1_reg_1150;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it39) and (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it40) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm)))) then 
            grp_fu_182_p0 <= ap_const_lv64_3FF0000000000000;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it36) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm))) then 
            grp_fu_182_p0 <= tmp_52_i1_reg_1037;
        elsif (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it35))) then 
            grp_fu_182_p0 <= tmp_50_i3_reg_1007;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it32) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm))) then 
            grp_fu_182_p0 <= tmp_48_i_reg_918;
        else 
            grp_fu_182_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_182_p1 assign process. --
    grp_fu_182_p1_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it32, ap_reg_ppiten_pp0_it35, ap_reg_ppiten_pp0_it36, ap_reg_ppiten_pp0_it39, ap_reg_ppiten_pp0_it40, ap_reg_ppiten_pp0_it41, w_1_reg_1118, w_3_reg_1139, vp1_reg_1160, vc2_reg_1165)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it41) and (ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm))) then 
            grp_fu_182_p1 <= vp1_reg_1160;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it41) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm))) then 
            grp_fu_182_p1 <= vc2_reg_1165;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it40) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm))) then 
            grp_fu_182_p1 <= w_3_reg_1139;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it39) and (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm))) then 
            grp_fu_182_p1 <= w_1_reg_1118;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it36) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm))) then 
            grp_fu_182_p1 <= ap_const_lv64_BFD6D1F0E5A8325B;
        elsif (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it35))) then 
            grp_fu_182_p1 <= ap_const_lv64_3FFC80EF025F5E68;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it32) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm))) then 
            grp_fu_182_p1 <= ap_const_lv64_BFFD23DD4EF278D0;
        else 
            grp_fu_182_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_192_ce assign process. --
    grp_fu_192_ce_assign_proc : process(ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_ce, ap_reg_ppstg_tmp_49_reg_570_pp0_it33, ap_reg_ppstg_tmp_49_reg_570_pp0_it38, ap_reg_ppstg_tmp_49_reg_570_pp0_it34, ap_reg_ppstg_tmp_49_reg_570_pp0_it36, ap_reg_ppstg_tmp_57_i2_reg_770_pp0_it38)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it33))) or ((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it34)) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it36)))) or ((ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm) and (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it34)) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it36)))) or ((ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm) and (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it34)) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it36)) or ((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it38) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_57_i2_reg_770_pp0_it38)))) or ((ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm) and (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it34)) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it36)) or ((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it38) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_57_i2_reg_770_pp0_it38)))) or ((ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm) and (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it36)) or ((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it38) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_57_i2_reg_770_pp0_it38)))) or ((ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it38) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_57_i2_reg_770_pp0_it38)) or ((ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it38) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_57_i2_reg_770_pp0_it38))))) then 
            grp_fu_192_ce <= ap_const_logic_1;
        else 
            grp_fu_192_ce <= ap_const_logic_0;
        end if; 
    end process;


    -- grp_fu_192_opcode assign process. --
    grp_fu_192_opcode_assign_proc : process(ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it34, ap_reg_ppiten_pp0_it37, ap_reg_ppiten_pp0_it39, ap_reg_ppstg_tmp_49_reg_570_pp0_it33, ap_reg_ppstg_tmp_49_reg_570_pp0_it38, ap_reg_ppstg_tmp_49_reg_570_pp0_it36, ap_reg_ppstg_tmp_57_i2_reg_770_pp0_it38)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it39) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it38) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_57_i2_reg_770_pp0_it38))) then 
            grp_fu_192_opcode <= ap_const_lv2_1;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it34) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it33))) or ((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it37) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it36))))) then 
            grp_fu_192_opcode <= ap_const_lv2_0;
        else 
            grp_fu_192_opcode <= "XX";
        end if; 
    end process;


    -- grp_fu_192_p0 assign process. --
    grp_fu_192_p0_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it34, ap_reg_ppiten_pp0_it37, ap_reg_ppiten_pp0_it39, tmp_50_i1_reg_997, tmp_54_i_reg_1052)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it39) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm))) then 
            grp_fu_192_p0 <= ap_const_lv64_3FF0000000000000;
        elsif (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it37))) then 
            grp_fu_192_p0 <= tmp_54_i_reg_1052;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it34) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm))) then 
            grp_fu_192_p0 <= tmp_50_i1_reg_997;
        else 
            grp_fu_192_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_192_p1 assign process. --
    grp_fu_192_p1_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it34, ap_reg_ppiten_pp0_it37, ap_reg_ppiten_pp0_it39, w_2_reg_1112)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it39) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm))) then 
            grp_fu_192_p1 <= w_2_reg_1112;
        elsif (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it37))) then 
            grp_fu_192_p1 <= ap_const_lv64_3FD470BF3A92F8EC;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it34) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm))) then 
            grp_fu_192_p1 <= ap_const_lv64_3FFC80EF025F5E68;
        else 
            grp_fu_192_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_207_ce assign process. --
    grp_fu_207_ce_assign_proc : process(ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and ((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) or (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm) or (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm) or (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm) or (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm) or (ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm) or ((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)))) or (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm)))) then 
            grp_fu_207_ce <= ap_const_logic_1;
        else 
            grp_fu_207_ce <= ap_const_logic_0;
        end if; 
    end process;


    -- grp_fu_207_p0 assign process. --
    grp_fu_207_p0_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it2, ap_reg_ppiten_pp0_it3, ap_reg_ppiten_pp0_it7, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it22, tmp_39_fu_335_p1, tmp_36_reg_560, tmp_28_reg_595, tmp_41_reg_600, U_reg_605, ap_reg_ppstg_v_4_reg_641_pp0_it15, tmp_31_reg_657, tmp_44_reg_698)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it22) and (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm))) then 
            grp_fu_207_p0 <= tmp_44_reg_698;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it16) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm))) then 
            grp_fu_207_p0 <= ap_reg_ppstg_v_4_reg_641_pp0_it15;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm))) then 
            grp_fu_207_p0 <= tmp_31_reg_657;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm))) then 
            grp_fu_207_p0 <= U_reg_605;
        elsif (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3))) then 
            grp_fu_207_p0 <= tmp_41_reg_600;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm))) then 
            grp_fu_207_p0 <= tmp_28_reg_595;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm))) then 
            grp_fu_207_p0 <= tmp_36_reg_560;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm))) then 
            grp_fu_207_p0 <= tmp_39_fu_335_p1;
        else 
            grp_fu_207_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_207_p1 assign process. --
    grp_fu_207_p1_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it2, ap_reg_ppiten_pp0_it3, ap_reg_ppiten_pp0_it7, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it22, T_read_reg_509, ap_reg_ppstg_X_read_reg_516_pp0_it2, tmp_34_reg_672)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it22) and (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm))) then 
            grp_fu_207_p1 <= ap_const_lv64_3FE0000000000000;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it16) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm))) then 
            grp_fu_207_p1 <= tmp_34_reg_672;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm)))) then 
            grp_fu_207_p1 <= ap_const_lv64_4000000000000000;
        elsif (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3))) then 
            grp_fu_207_p1 <= ap_reg_ppstg_X_read_reg_516_pp0_it2;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm))) then 
            grp_fu_207_p1 <= ap_const_lv64_3CA0000000000000;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm)))) then 
            grp_fu_207_p1 <= T_read_reg_509;
        else 
            grp_fu_207_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_211_ce assign process. --
    grp_fu_211_ce_assign_proc : process(ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and ((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) or (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm) or (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm) or (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm) or (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm) or (ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm) or ((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)))) or (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm)))) then 
            grp_fu_211_ce <= ap_const_logic_1;
        else 
            grp_fu_211_ce <= ap_const_logic_0;
        end if; 
    end process;


    -- grp_fu_211_p0 assign process. --
    grp_fu_211_p0_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_reg_ppiten_pp0_it22, ap_reg_ppiten_pp0_it29, ap_reg_ppiten_pp0_it30, ap_reg_ppiten_pp0_it33, tmp_s_reg_575, tmp_38_reg_610, ret_i_i_i_i_i_i_fu_388_p1, ret_i_i_i_i_i_i1_fu_416_p1, tmp_44_i7_reg_850, tmp_44_i2_reg_860, ap_reg_ppstg_K_2_reg_897_pp0_it33, ap_reg_phiprechg_v_1_reg_134pp0_it22)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it33) and (ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm))) then 
            grp_fu_211_p0 <= ap_reg_ppstg_K_2_reg_897_pp0_it33;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm))) then 
            grp_fu_211_p0 <= tmp_44_i2_reg_860;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm))) then 
            grp_fu_211_p0 <= tmp_44_i7_reg_850;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it29) and (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm))) then 
            grp_fu_211_p0 <= ret_i_i_i_i_i_i1_fu_416_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it29) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm))) then 
            grp_fu_211_p0 <= ret_i_i_i_i_i_i_fu_388_p1;
        elsif (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it22))) then 
            grp_fu_211_p0 <= ap_reg_phiprechg_v_1_reg_134pp0_it22;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm))) then 
            grp_fu_211_p0 <= tmp_38_reg_610;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm))) then 
            grp_fu_211_p0 <= tmp_s_reg_575;
        else 
            grp_fu_211_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_211_p1 assign process. --
    grp_fu_211_p1_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_reg_ppiten_pp0_it22, ap_reg_ppiten_pp0_it29, ap_reg_ppiten_pp0_it30, ap_reg_ppiten_pp0_it33, ap_reg_ppstg_S_read_reg_522_pp0_it3, tmp_49_i2_reg_967, ap_reg_phiprechg_v_1_reg_134pp0_it22)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it33) and (ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm))) then 
            grp_fu_211_p1 <= tmp_49_i2_reg_967;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm)))) then 
            grp_fu_211_p1 <= ap_const_lv64_BFE0000000000000;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it29) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it29) and (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm)))) then 
            grp_fu_211_p1 <= ap_const_lv64_3FCDA6711871100E;
        elsif (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it22))) then 
            grp_fu_211_p1 <= ap_reg_phiprechg_v_1_reg_134pp0_it22;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm))) then 
            grp_fu_211_p1 <= ap_reg_ppstg_S_read_reg_522_pp0_it3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm))) then 
            grp_fu_211_p1 <= ap_const_lv64_4190000000000000;
        else 
            grp_fu_211_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_220_ce assign process. --
    grp_fu_220_ce_assign_proc : process(ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_ce, ap_reg_ppstg_tmp_49_reg_570_pp0_it29, ap_reg_ppstg_tmp_49_reg_570_pp0_it28, ap_reg_ppstg_tmp_49_reg_570_pp0_it31, ap_reg_ppstg_tmp_49_reg_570_pp0_it34)
    begin
        if (((ap_const_logic_1 = ap_ce) and ((ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm) or (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm) or (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm) or (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm) or (ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm) or ((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)))) or (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm) or ((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and ((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it28) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it28)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it31) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it31)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it34)))))) then 
            grp_fu_220_ce <= ap_const_logic_1;
        else 
            grp_fu_220_ce <= ap_const_logic_0;
        end if; 
    end process;


    -- grp_fu_220_p0 assign process. --
    grp_fu_220_p0_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it22, ap_reg_ppiten_pp0_it24, ap_reg_ppiten_pp0_it29, ap_reg_ppiten_pp0_it30, ap_reg_ppiten_pp0_it32, ap_reg_ppiten_pp0_it35, tmp_46_reg_714, d1_reg_729, X_assign_fu_403_p1, tmp_44_i1_reg_813, tmp_46_i_reg_905, tmp_46_i1_reg_923, ap_reg_ppstg_K_3_reg_928_pp0_it34, ap_reg_phiprechg_v_1_reg_134pp0_it22)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it35) and (ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm))) then 
            grp_fu_220_p0 <= ap_reg_ppstg_K_3_reg_928_pp0_it34;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it32) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm))) then 
            grp_fu_220_p0 <= tmp_46_i1_reg_923;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it32) and (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm))) then 
            grp_fu_220_p0 <= tmp_46_i_reg_905;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm))) then 
            grp_fu_220_p0 <= tmp_44_i1_reg_813;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it29) and (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm))) then 
            grp_fu_220_p0 <= X_assign_fu_403_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it29) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm))) then 
            grp_fu_220_p0 <= d1_reg_729;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it24) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm))) then 
            grp_fu_220_p0 <= tmp_46_reg_714;
        elsif (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it22))) then 
            grp_fu_220_p0 <= ap_reg_phiprechg_v_1_reg_134pp0_it22;
        else 
            grp_fu_220_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_220_p1 assign process. --
    grp_fu_220_p1_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it22, ap_reg_ppiten_pp0_it24, ap_reg_ppiten_pp0_it29, ap_reg_ppiten_pp0_it30, ap_reg_ppiten_pp0_it32, ap_reg_ppiten_pp0_it35, ap_reg_ppstg_T_read_reg_509_pp0_it24, ap_reg_ppstg_tmp_48_reg_626_pp0_it21, d1_reg_729, X_assign_fu_403_p1, tmp_51_i3_reg_1022)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it35) and (ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm))) then 
            grp_fu_220_p1 <= tmp_51_i3_reg_1022;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it32) and (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it32) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm)))) then 
            grp_fu_220_p1 <= ap_const_lv64_3FD9884533D43651;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm))) then 
            grp_fu_220_p1 <= ap_const_lv64_BFE0000000000000;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it29) and (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm))) then 
            grp_fu_220_p1 <= X_assign_fu_403_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it29) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm))) then 
            grp_fu_220_p1 <= d1_reg_729;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it24) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm))) then 
            grp_fu_220_p1 <= ap_reg_ppstg_T_read_reg_509_pp0_it24;
        elsif (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it22))) then 
            grp_fu_220_p1 <= ap_reg_ppstg_tmp_48_reg_626_pp0_it21;
        else 
            grp_fu_220_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_227_ce assign process. --
    grp_fu_227_ce_assign_proc : process(ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_ce, ap_reg_ppstg_tmp_49_reg_570_pp0_it29, ap_reg_ppstg_tmp_49_reg_570_pp0_it32, ap_reg_ppstg_tmp_49_reg_570_pp0_it33, ap_reg_ppstg_tmp_49_reg_570_pp0_it31, ap_reg_ppstg_tmp_49_reg_570_pp0_it36, ap_reg_ppstg_tmp_49_reg_570_pp0_it37)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (not((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it32) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it32)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it33) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it33)) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it37)))) or ((ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm) and ((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0) or not((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it32) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it32)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it33) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it33)) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it37)))) or ((ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm) and ((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0) or not((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it32) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it32)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it31) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it37)))) or ((ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm) and ((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0) or not((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it32) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it32)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it31))) or ((ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm) and ((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0) or not((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it32) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it32)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it31))) or ((ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm) and ((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0) or not((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it32) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it32)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it31) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it36)))) or ((ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm) and ((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0) or not((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it32) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it32)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it31) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it31)) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it36)))) or ((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and ((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it32) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it32)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it31) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it31)) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it36))))))) then 
            grp_fu_227_ce <= ap_const_logic_1;
        else 
            grp_fu_227_ce <= ap_const_logic_0;
        end if; 
    end process;


    -- grp_fu_227_p0 assign process. --
    grp_fu_227_p0_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it30, ap_reg_ppiten_pp0_it32, ap_reg_ppiten_pp0_it33, ap_reg_ppiten_pp0_it37, ap_reg_ppstg_tmp_49_reg_570_pp0_it29, ap_reg_ppstg_tmp_49_reg_570_pp0_it32, tmp_44_i_reg_788, ret_i_i_i_i_i_i3_fu_436_p1, ret_i_i_i_i_i_i2_fu_463_p1, ap_reg_ppstg_K_reg_890_pp0_it33, ap_reg_ppstg_K_reg_890_pp0_it37, K_2_reg_897, K_1_reg_910, K_3_reg_928, tmp_46_i9_reg_942, tmp_46_i2_reg_957)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it37) and (ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm))) then 
            grp_fu_227_p0 <= ap_reg_ppstg_K_reg_890_pp0_it37;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it33) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it32) and (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm))) then 
            grp_fu_227_p0 <= tmp_46_i2_reg_957;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it33) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it32)) and (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm))) then 
            grp_fu_227_p0 <= ap_reg_ppstg_K_reg_890_pp0_it33;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it33) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm))) then 
            grp_fu_227_p0 <= tmp_46_i9_reg_942;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it32) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm))) then 
            grp_fu_227_p0 <= K_3_reg_928;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it32) and (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm))) then 
            grp_fu_227_p0 <= K_1_reg_910;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it32) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm))) then 
            grp_fu_227_p0 <= K_2_reg_897;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and (ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm))) then 
            grp_fu_227_p0 <= ret_i_i_i_i_i_i2_fu_463_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and not((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0)) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm))) then 
            grp_fu_227_p0 <= tmp_44_i_reg_788;
        elsif (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it30))) then 
            grp_fu_227_p0 <= ret_i_i_i_i_i_i3_fu_436_p1;
        else 
            grp_fu_227_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_227_p1 assign process. --
    grp_fu_227_p1_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it30, ap_reg_ppiten_pp0_it32, ap_reg_ppiten_pp0_it33, ap_reg_ppiten_pp0_it37, ap_reg_ppstg_tmp_49_reg_570_pp0_it29, reg_298, ap_reg_ppstg_tmp_49_reg_570_pp0_it32, tmp_55_i_reg_1067)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it37) and (ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm))) then 
            grp_fu_227_p1 <= tmp_55_i_reg_1067;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it33) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it32)) and (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm))) then 
            grp_fu_227_p1 <= reg_298;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it33) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it33) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it32) and (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm)))) then 
            grp_fu_227_p1 <= ap_const_lv64_3FD9884533D43651;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it32) and (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it32) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it32) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm)))) then 
            grp_fu_227_p1 <= ap_const_lv64_3FF548CDD6F42943;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and not((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0)) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm))) then 
            grp_fu_227_p1 <= ap_const_lv64_BFE0000000000000;
        elsif ((((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it30)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and (ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm)))) then 
            grp_fu_227_p1 <= ap_const_lv64_3FCDA6711871100E;
        else 
            grp_fu_227_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_232_ce assign process. --
    grp_fu_232_ce_assign_proc : process(ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_ce, ap_reg_ppstg_tmp_49_reg_570_pp0_it29, ap_reg_ppstg_tmp_49_reg_570_pp0_it33, ap_reg_ppstg_tmp_49_reg_570_pp0_it35, ap_reg_ppstg_tmp_49_reg_570_pp0_it34, ap_reg_ppstg_tmp_49_reg_570_pp0_it36, ap_reg_ppstg_tmp_49_reg_570_pp0_it37)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (not((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0)) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it35)) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it34)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it36) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it37))) or ((ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm) and ((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0) or not((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0)) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it35)) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it34)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it37))) or ((ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm) and ((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0) or not((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it33) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it34)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it37))) or ((ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm) and ((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0) or not((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it33) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it35) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it34)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it37))) or ((ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm) and ((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0) or not((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it33) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it35) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it34)))) or ((ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm) and ((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0) or not((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it33) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it35) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it34)))) or ((ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm) and ((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it33) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it35) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it34)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it36))) or ((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and ((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it33) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it33)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it35) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it34)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it36)))))) then 
            grp_fu_232_ce <= ap_const_logic_1;
        else 
            grp_fu_232_ce <= ap_const_logic_0;
        end if; 
    end process;


    -- grp_fu_232_p0 assign process. --
    grp_fu_232_p0_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it30, ap_reg_ppiten_pp0_it34, ap_reg_ppiten_pp0_it35, ap_reg_ppiten_pp0_it36, ap_reg_ppiten_pp0_it37, d2_reg_775, X_assign_1_fu_451_p1, ap_reg_ppstg_K_reg_890_pp0_it34, ap_reg_ppstg_K_2_reg_897_pp0_it36, ap_reg_ppstg_K_2_reg_897_pp0_it37, ap_reg_ppstg_K_1_reg_910_pp0_it34, ap_reg_ppstg_K_3_reg_928_pp0_it33)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it37) and (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm))) then 
            grp_fu_232_p0 <= ap_reg_ppstg_K_2_reg_897_pp0_it37;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it36) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm))) then 
            grp_fu_232_p0 <= ap_reg_ppstg_K_2_reg_897_pp0_it36;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it35) and (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm))) then 
            grp_fu_232_p0 <= ap_reg_ppstg_K_1_reg_910_pp0_it34;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it34) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm))) then 
            grp_fu_232_p0 <= ap_reg_ppstg_K_reg_890_pp0_it34;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it34) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm))) then 
            grp_fu_232_p0 <= ap_reg_ppstg_K_3_reg_928_pp0_it33;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm))) then 
            grp_fu_232_p0 <= X_assign_1_fu_451_p1;
        elsif (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it30))) then 
            grp_fu_232_p0 <= d2_reg_775;
        else 
            grp_fu_232_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_232_p1 assign process. --
    grp_fu_232_p1_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it30, ap_reg_ppiten_pp0_it34, ap_reg_ppiten_pp0_it35, ap_reg_ppiten_pp0_it36, ap_reg_ppiten_pp0_it37, reg_309, d2_reg_775, X_assign_1_fu_451_p1, tmp_49_i3_reg_987, tmp_51_i1_reg_1012, tmp_53_i2_reg_1042, tmp_55_i2_reg_1077)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it37) and (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm))) then 
            grp_fu_232_p1 <= tmp_55_i2_reg_1077;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it36) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm))) then 
            grp_fu_232_p1 <= tmp_53_i2_reg_1042;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it35) and (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm))) then 
            grp_fu_232_p1 <= tmp_51_i1_reg_1012;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it34) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm))) then 
            grp_fu_232_p1 <= reg_309;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it34) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm))) then 
            grp_fu_232_p1 <= tmp_49_i3_reg_987;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm))) then 
            grp_fu_232_p1 <= X_assign_1_fu_451_p1;
        elsif (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it30))) then 
            grp_fu_232_p1 <= d2_reg_775;
        else 
            grp_fu_232_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_239_ce assign process. --
    grp_fu_239_ce_assign_proc : process(ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_ce, ap_reg_ppstg_tmp_49_reg_570_pp0_it38, ap_reg_ppstg_tmp_49_reg_570_pp0_it35, ap_reg_ppstg_tmp_49_reg_570_pp0_it31, ap_reg_ppstg_tmp_49_reg_570_pp0_it34, ap_reg_ppstg_tmp_49_reg_570_pp0_it36, ap_reg_ppstg_tmp_49_reg_570_pp0_it37)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm) and ((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it38) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it31)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it34) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it36)))) or ((ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm) and (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it35)) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it31)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it34) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it36)))) or ((ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm) and (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it35)) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it31)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it34) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it36)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it37) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it37)))) or ((ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm) and (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it35)) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it31)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it34) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it36)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it37) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it37)))) or ((ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm) and (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it35)) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it31)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it34) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it37) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it37)))) or ((ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm) and (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it35)) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it31)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it37) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it37)))) or ((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and ((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it38) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it38)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it34) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it36)))) or ((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it35)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it37) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it37))))))) then 
            grp_fu_239_ce <= ap_const_logic_1;
        else 
            grp_fu_239_ce <= ap_const_logic_0;
        end if; 
    end process;


    -- grp_fu_239_p0 assign process. --
    grp_fu_239_p0_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it32, ap_reg_ppiten_pp0_it35, ap_reg_ppiten_pp0_it36, ap_reg_ppiten_pp0_it38, ap_reg_ppstg_tmp_49_reg_570_pp0_it37, K_reg_890, ap_reg_ppstg_K_reg_890_pp0_it36, ap_reg_ppstg_K_2_reg_897_pp0_it34, ap_reg_ppstg_K_1_reg_910_pp0_it36, ap_reg_ppstg_K_3_reg_928_pp0_it37, ap_reg_ppstg_tmp_47_i_reg_947_pp0_it37, ap_reg_ppstg_tmp_47_i2_reg_962_pp0_it37)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it38) and (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm))) then 
            grp_fu_239_p0 <= ap_reg_ppstg_tmp_47_i2_reg_962_pp0_it37;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it38) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it37))) then 
            grp_fu_239_p0 <= ap_reg_ppstg_K_3_reg_928_pp0_it37;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it38) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it37)))) then 
            grp_fu_239_p0 <= ap_reg_ppstg_tmp_47_i_reg_947_pp0_it37;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it36) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm))) then 
            grp_fu_239_p0 <= ap_reg_ppstg_K_1_reg_910_pp0_it36;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it36) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm))) then 
            grp_fu_239_p0 <= ap_reg_ppstg_K_reg_890_pp0_it36;
        elsif (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it35))) then 
            grp_fu_239_p0 <= ap_reg_ppstg_K_2_reg_897_pp0_it34;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it32) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm))) then 
            grp_fu_239_p0 <= K_reg_890;
        else 
            grp_fu_239_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_239_p1 assign process. --
    grp_fu_239_p1_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it32, ap_reg_ppiten_pp0_it35, ap_reg_ppiten_pp0_it36, ap_reg_ppiten_pp0_it38, reg_314, ap_reg_ppstg_tmp_49_reg_570_pp0_it37, tmp_51_i2_reg_1002, tmp_53_i_reg_1032, tmp_56_i_reg_1092, tmp_55_i3_reg_1097, tmp_56_i2_reg_1102)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it38) and (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm))) then 
            grp_fu_239_p1 <= tmp_56_i2_reg_1102;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it38) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it37))) then 
            grp_fu_239_p1 <= tmp_55_i3_reg_1097;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it38) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it37)))) then 
            grp_fu_239_p1 <= tmp_56_i_reg_1092;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it36) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm))) then 
            grp_fu_239_p1 <= reg_314;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it36) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm))) then 
            grp_fu_239_p1 <= tmp_53_i_reg_1032;
        elsif (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it35))) then 
            grp_fu_239_p1 <= tmp_51_i2_reg_1002;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it32) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm))) then 
            grp_fu_239_p1 <= ap_const_lv64_3FF548CDD6F42943;
        else 
            grp_fu_239_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_247_ce assign process. --
    grp_fu_247_ce_assign_proc : process(ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_ce, ap_reg_ppstg_tmp_49_reg_570_pp0_it39, ap_reg_ppstg_tmp_49_reg_570_pp0_it33, ap_reg_ppstg_tmp_49_reg_570_pp0_it38, ap_reg_ppstg_tmp_49_reg_570_pp0_it36, ap_reg_ppstg_tmp_49_reg_570_pp0_it37, ap_reg_ppstg_tmp_49_reg_570_pp0_it40)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm) and (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it39)) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it33)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it36) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it40)))) or ((ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm) and (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it39)) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it33)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it36) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it37)))) or ((ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm) and ((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it39) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it39)) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it33)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it36) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it37)))) or ((ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm) and ((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it39) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it39)) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it33)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it36) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it37)))) or ((ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm) and ((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it39) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it39)) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it33)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it36) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it37)))) or ((ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm) and ((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it39) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it39)) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it33)) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it37)))) or ((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it39)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it36) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it40) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it40)))) or ((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and ((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it39) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it39)) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it38)) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it37))))))) then 
            grp_fu_247_ce <= ap_const_logic_1;
        else 
            grp_fu_247_ce <= ap_const_logic_0;
        end if; 
    end process;


    -- grp_fu_247_p0 assign process. --
    grp_fu_247_p0_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it34, ap_reg_ppiten_pp0_it37, ap_reg_ppiten_pp0_it38, ap_reg_ppiten_pp0_it39, ap_reg_ppiten_pp0_it40, ap_reg_ppstg_t2_reg_615_pp0_it39, ap_reg_ppstg_t1_reg_636_pp0_it38, ap_reg_ppstg_t1_reg_636_pp0_it39, ap_reg_ppstg_K_1_reg_910_pp0_it33, ap_reg_ppstg_K_1_reg_910_pp0_it37, ap_reg_ppstg_K_3_reg_928_pp0_it36)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it40) and (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm))) then 
            grp_fu_247_p0 <= ap_reg_ppstg_t2_reg_615_pp0_it39;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it40) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm))) then 
            grp_fu_247_p0 <= ap_reg_ppstg_t1_reg_636_pp0_it39;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it39) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm))) then 
            grp_fu_247_p0 <= ap_reg_ppstg_t1_reg_636_pp0_it38;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it38) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm))) then 
            grp_fu_247_p0 <= ap_reg_ppstg_K_1_reg_910_pp0_it37;
        elsif (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it37))) then 
            grp_fu_247_p0 <= ap_reg_ppstg_K_3_reg_928_pp0_it36;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it34) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm))) then 
            grp_fu_247_p0 <= ap_reg_ppstg_K_1_reg_910_pp0_it33;
        else 
            grp_fu_247_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_247_p1 assign process. --
    grp_fu_247_p1_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it34, ap_reg_ppiten_pp0_it37, ap_reg_ppiten_pp0_it38, ap_reg_ppiten_pp0_it39, ap_reg_ppiten_pp0_it40, tmp_49_i1_reg_982, tmp_53_i3_reg_1057, tmp_55_i1_reg_1087, tmp_59_i_reg_1124, tmp_59_i2_reg_1134, tmp_59_i1_reg_1145)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it40) and (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm))) then 
            grp_fu_247_p1 <= tmp_59_i1_reg_1145;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it40) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm))) then 
            grp_fu_247_p1 <= tmp_59_i2_reg_1134;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it39) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm))) then 
            grp_fu_247_p1 <= tmp_59_i_reg_1124;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it38) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm))) then 
            grp_fu_247_p1 <= tmp_55_i1_reg_1087;
        elsif (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it37))) then 
            grp_fu_247_p1 <= tmp_53_i3_reg_1057;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it34) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm))) then 
            grp_fu_247_p1 <= tmp_49_i1_reg_982;
        else 
            grp_fu_247_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_251_ce assign process. --
    grp_fu_251_ce_assign_proc : process(ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_ce, ap_reg_ppstg_tmp_49_reg_570_pp0_it39, ap_reg_ppstg_tmp_49_reg_570_pp0_it38, ap_reg_ppstg_tmp_49_reg_570_pp0_it40)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it38)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it40))) or ((ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm) and (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it38)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it40))) or ((ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm) and ((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it38) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it38)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it40))) or ((ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm) and ((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it38) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it38)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it40))) or ((ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm) and ((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it38) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it38)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it40))) or ((ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm) and ((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it38) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it38)))) or ((ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it38)) or ((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and ((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it39) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it38)))))) then 
            grp_fu_251_ce <= ap_const_logic_1;
        else 
            grp_fu_251_ce <= ap_const_logic_0;
        end if; 
    end process;


    -- grp_fu_251_p0 assign process. --
    grp_fu_251_p0_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it39, ap_reg_ppiten_pp0_it40, ap_reg_ppstg_reg_303_pp0_it39, ap_reg_ppstg_t2_reg_615_pp0_it40, ap_reg_ppstg_tmp_47_i1_reg_977_pp0_it38)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it40) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm))) then 
            grp_fu_251_p0 <= ap_reg_ppstg_t2_reg_615_pp0_it40;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it39) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm))) then 
            grp_fu_251_p0 <= ap_reg_ppstg_reg_303_pp0_it39;
        elsif (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it39))) then 
            grp_fu_251_p0 <= ap_reg_ppstg_tmp_47_i1_reg_977_pp0_it38;
        else 
            grp_fu_251_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_251_p1 assign process. --
    grp_fu_251_p1_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it39, ap_reg_ppiten_pp0_it40, reg_319, tmp_56_i1_reg_1107, tmp_59_i3_reg_1155)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it40) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm))) then 
            grp_fu_251_p1 <= tmp_59_i3_reg_1155;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it39) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm))) then 
            grp_fu_251_p1 <= reg_319;
        elsif (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it39))) then 
            grp_fu_251_p1 <= tmp_56_i1_reg_1107;
        else 
            grp_fu_251_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_255_ce assign process. --
    grp_fu_255_ce_assign_proc : process(ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and ((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) or (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm) or (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm) or (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm) or (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm) or (ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm) or ((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)))) or (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm)))) then 
            grp_fu_255_ce <= ap_const_logic_1;
        else 
            grp_fu_255_ce <= ap_const_logic_0;
        end if; 
    end process;


    -- grp_fu_255_p0 assign process. --
    grp_fu_255_p0_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8, ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp0_it25, S, tmp_32_reg_662, tmp_35_reg_677, v1_reg_724)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it25) and (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm))) then 
            grp_fu_255_p0 <= v1_reg_724;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm))) then 
            grp_fu_255_p0 <= tmp_35_reg_677;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and (ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm))) then 
            grp_fu_255_p0 <= tmp_32_reg_662;
        elsif (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            grp_fu_255_p0 <= S;
        else 
            grp_fu_255_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_255_p1 assign process. --
    grp_fu_255_p1_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8, ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp0_it25, X, ap_reg_ppstg_S_read_reg_522_pp0_it8, ap_reg_ppstg_v2_reg_703_pp0_it24)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it25) and (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm))) then 
            grp_fu_255_p1 <= ap_reg_ppstg_v2_reg_703_pp0_it24;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm))) then 
            grp_fu_255_p1 <= ap_const_lv64_42374876E8000000;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and (ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm))) then 
            grp_fu_255_p1 <= ap_reg_ppstg_S_read_reg_522_pp0_it8;
        elsif (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            grp_fu_255_p1 <= X;
        else 
            grp_fu_255_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_262_ce assign process. --
    grp_fu_262_ce_assign_proc : process(ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_ce, ap_reg_ppstg_tmp_49_reg_570_pp0_it29, ap_reg_ppstg_tmp_49_reg_570_pp0_it28, ap_reg_ppstg_tmp_30_reg_648_pp0_it20)
    begin
        if ((not((ap_const_logic_1 = ap_ce)) or ((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_30_reg_648_pp0_it20)))) or ((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_30_reg_648_pp0_it20))) or ((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0) and not((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0)) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_30_reg_648_pp0_it20))) or ((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0) and not((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0)) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it28)) or (not((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0)) and (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it28) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it28))))) then 
            grp_fu_262_ce <= ap_const_logic_0;
        else 
            grp_fu_262_ce <= ap_const_logic_1;
        end if; 
    end process;


    -- grp_fu_262_opcode assign process. --
    grp_fu_262_opcode_assign_proc : process(ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it4, ap_reg_ppiten_pp0_it21, ap_reg_ppiten_pp0_it29, ap_reg_ppiten_pp0_it30, ap_reg_ppstg_tmp_49_reg_570_pp0_it29, ap_reg_ppstg_tmp_49_reg_570_pp0_it28, ap_reg_ppstg_tmp_30_reg_648_pp0_it20)
    begin
        if (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_30_reg_648_pp0_it20))) then 
            grp_fu_262_opcode <= ap_const_lv5_3;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and not((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0)) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and (ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it29) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it28))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it29) and (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it28)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and (ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm)))) then 
            grp_fu_262_opcode <= ap_const_lv5_4;
        else 
            grp_fu_262_opcode <= "XXXXX";
        end if; 
    end process;


    -- grp_fu_262_p0 assign process. --
    grp_fu_262_p0_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it4, ap_reg_ppiten_pp0_it21, ap_reg_ppiten_pp0_it29, ap_reg_ppiten_pp0_it30, v_4_reg_641, v_reg_682, d1_reg_729, X_assign_fu_403_p1, d2_reg_775, X_assign_1_reg_818)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm))) then 
            grp_fu_262_p0 <= X_assign_1_reg_818;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm))) then 
            grp_fu_262_p0 <= d2_reg_775;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it29) and (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm))) then 
            grp_fu_262_p0 <= X_assign_fu_403_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it29) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm))) then 
            grp_fu_262_p0 <= d1_reg_729;
        elsif (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it21))) then 
            grp_fu_262_p0 <= v_reg_682;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and (ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm))) then 
            grp_fu_262_p0 <= v_4_reg_641;
        else 
            grp_fu_262_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_262_p1 assign process. --
    grp_fu_262_p1_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it4, ap_reg_ppiten_pp0_it21, ap_reg_ppiten_pp0_it29, ap_reg_ppiten_pp0_it30)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it29) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it29) and (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm)))) then 
            grp_fu_262_p1 <= ap_const_lv64_0;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and (ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm)) or ((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it21)))) then 
            grp_fu_262_p1 <= ap_const_lv64_3FF0000000000000;
        else 
            grp_fu_262_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_268_ce assign process. --
    grp_fu_268_ce_assign_proc : process(ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_ce)
    begin
        if ((not((ap_const_logic_1 = ap_ce)) or (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm) or ((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)))) then 
            grp_fu_268_ce <= ap_const_logic_0;
        else 
            grp_fu_268_ce <= ap_const_logic_1;
        end if; 
    end process;


    -- grp_fu_268_p0 assign process. --
    grp_fu_268_p0_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it0, tmp_9_fu_359_p1, tmp_26_fu_363_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) then
            if ((ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm)) then 
                grp_fu_268_p0 <= tmp_26_fu_363_p1;
            elsif ((ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm)) then 
                grp_fu_268_p0 <= tmp_9_fu_359_p1;
            else 
                grp_fu_268_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_268_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_271_ce assign process. --
    grp_fu_271_ce_assign_proc : process(ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and ((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) or (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm) or (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm) or (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm) or (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm) or (ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm) or ((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)))) or (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm)))) then 
            grp_fu_271_ce <= ap_const_logic_1;
        else 
            grp_fu_271_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_271_p0 <= ap_const_lv64_0;

    -- grp_fu_271_p1 assign process. --
    grp_fu_271_p1_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it12, T, tmp_33_reg_667)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it12) and (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm))) then 
            grp_fu_271_p1 <= tmp_33_reg_667;
        elsif (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            grp_fu_271_p1 <= T;
        else 
            grp_fu_271_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_277_ce assign process. --
    grp_fu_277_ce_assign_proc : process(ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_ce, ap_reg_ppstg_tmp_49_reg_570_pp0_it29, ap_reg_ppstg_tmp_49_reg_570_pp0_it30, ap_reg_ppstg_tmp_49_reg_570_pp0_it31)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm) and (not((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it30) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it30)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it31))) or ((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) and ((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0) or not((ap_reg_ppstg_tmp_49_reg_570_pp0_it29 = ap_const_lv1_0)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it30) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it30)))) or ((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and ((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it30) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it30)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it31) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it31)))) or ((ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm) and ((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it30) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it30)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it31) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it31)))) or ((ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm) and ((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it30) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it30)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it31) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it31)))) or ((ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm) and ((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it30) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it30)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it31) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it31)))) or ((ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm) and ((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it30) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it30)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it31) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it31)))) or ((ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm) and ((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it30) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it30)) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it31) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_49_reg_570_pp0_it31))))))) then 
            grp_fu_277_ce <= ap_const_logic_1;
        else 
            grp_fu_277_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_277_p0 <= ap_const_lv64_0;

    -- grp_fu_277_p1 assign process. --
    grp_fu_277_p1_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it30, ap_reg_ppiten_pp0_it31, tmp_43_i_reg_840, tmp_43_i1_reg_855, tmp_43_i5_reg_870, tmp_43_i2_reg_880)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it31) and (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm))) then 
            grp_fu_277_p1 <= tmp_43_i2_reg_880;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it31) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm))) then 
            grp_fu_277_p1 <= tmp_43_i5_reg_870;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm))) then 
            grp_fu_277_p1 <= tmp_43_i1_reg_855;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm))) then 
            grp_fu_277_p1 <= tmp_43_i_reg_840;
        else 
            grp_fu_277_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_282_ce assign process. --
    grp_fu_282_ce_assign_proc : process(ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and ((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) or (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm) or (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm) or (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm) or (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm) or (ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm) or ((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)))) or (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm)))) then 
            grp_fu_282_ce <= ap_const_logic_1;
        else 
            grp_fu_282_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_282_p0 <= ap_const_lv64_0;

    -- grp_fu_282_p1 assign process. --
    grp_fu_282_p1_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it4, ap_reg_ppstg_S_read_reg_522_pp0_it4, tmp_42_reg_621)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) then
            if ((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm)) then 
                grp_fu_282_p1 <= ap_reg_ppstg_S_read_reg_522_pp0_it4;
            elsif ((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm)) then 
                grp_fu_282_p1 <= tmp_42_reg_621;
            else 
                grp_fu_282_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_282_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_287_ce assign process. --
    grp_fu_287_ce_assign_proc : process(ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and ((ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm) or (ap_ST_pp0_stg6_fsm_6 = ap_CS_fsm) or (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm) or (ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm) or (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm) or (ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm) or ((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)))) or (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm)))) then 
            grp_fu_287_ce <= ap_const_logic_1;
        else 
            grp_fu_287_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_287_p0 <= ap_const_lv64_0;

    -- grp_fu_287_p1 assign process. --
    grp_fu_287_p1_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it30, ap_reg_ppiten_pp0_it31, reg_292, tmp_40_reg_565, tmp_37_reg_585, tmp_45_i1_reg_865, tmp_45_i8_reg_875, tmp_45_i2_reg_885)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it31) and (ap_ST_pp0_stg5_fsm_5 = ap_CS_fsm))) then 
            grp_fu_287_p1 <= tmp_45_i2_reg_885;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it31) and (ap_ST_pp0_stg4_fsm_4 = ap_CS_fsm))) then 
            grp_fu_287_p1 <= tmp_45_i8_reg_875;
        elsif (((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it31))) then 
            grp_fu_287_p1 <= tmp_45_i1_reg_865;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and (ap_ST_pp0_stg7_fsm_7 = ap_CS_fsm))) then 
            grp_fu_287_p1 <= reg_292;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_ST_pp0_stg3_fsm_3 = ap_CS_fsm))) then 
            grp_fu_287_p1 <= tmp_37_reg_585;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm))) then 
            grp_fu_287_p1 <= tmp_40_reg_565;
        else 
            grp_fu_287_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_rand_uint32_fu_147_ap_ce assign process. --
    grp_rand_uint32_fu_147_ap_ce_assign_proc : process(ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and ((ap_ST_pp0_stg2_fsm_2 = ap_CS_fsm) or (ap_ST_pp0_stg1_fsm_1 = ap_CS_fsm) or ((ap_ST_pp0_stg0_fsm_0 = ap_CS_fsm) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))))))) then 
            grp_rand_uint32_fu_147_ap_ce <= ap_const_logic_1;
        else 
            grp_rand_uint32_fu_147_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    -- grp_rand_uint32_fu_147_ap_start assign process. --
    grp_rand_uint32_fu_147_ap_start_assign_proc : process(ap_sig_start_in_grp_rand_uint32_fu_147_ap_start)
    begin
        if ((ap_const_logic_1 = ap_sig_start_in_grp_rand_uint32_fu_147_ap_start)) then 
            grp_rand_uint32_fu_147_ap_start <= ap_sig_start_in_grp_rand_uint32_fu_147_ap_start;
        else 
            grp_rand_uint32_fu_147_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_1_fu_428_p3 <= (ap_const_lv1_0 & tmp_61_fu_424_p1);
    p_Result_2_fu_409_p3 <= (ap_const_lv1_0 & tmp_64_reg_748);
    p_Result_3_fu_456_p3 <= (ap_const_lv1_0 & tmp_65_reg_803);
    p_Result_s_fu_380_p3 <= (ap_const_lv1_0 & tmp_60_fu_376_p1);
    p_Val2_1_fu_421_p1 <= d2_reg_775;
    p_Val2_2_fu_393_p2 <= (p_Val2_s_fu_373_p1 xor ap_const_lv64_8000000000000000);
    p_Val2_3_fu_441_p2 <= (p_Val2_1_fu_421_p1 xor ap_const_lv64_8000000000000000);
    p_Val2_s_fu_373_p1 <= d1_reg_729;
    ret_i_i_i_i_i_i1_fu_416_p1 <= p_Result_2_fu_409_p3;
    ret_i_i_i_i_i_i2_fu_463_p1 <= p_Result_3_fu_456_p3;
    ret_i_i_i_i_i_i3_fu_436_p1 <= p_Result_1_fu_428_p3;
    ret_i_i_i_i_i_i_fu_388_p1 <= p_Result_s_fu_380_p3;
    tmp_26_fu_363_p1 <= std_logic_vector(resize(unsigned(l_reg_545),64));
    tmp_39_fu_335_p1 <= tmp_77_neg_reg_530;
    tmp_49_fu_367_p2 <= "1" when (ap_reg_ptbuf_CallPutFlag = ap_const_lv8_63) else "0";
    tmp_59_i1_fu_480_p3 <= 
        w_1_reg_1118 when (ap_reg_ppstg_tmp_57_i1_reg_830_pp0_it39(0) = '1') else 
        reg_298;
    tmp_59_i2_fu_475_p3 <= 
        w_2_reg_1112 when (ap_reg_ppstg_tmp_57_i2_reg_770_pp0_it39(0) = '1') else 
        tmp_58_i2_reg_1129;
    tmp_59_i3_fu_486_p3 <= 
        w_3_reg_1139 when (ap_reg_ppstg_tmp_57_i3_reg_835_pp0_it40(0) = '1') else 
        reg_314;
    tmp_59_i_fu_468_p3 <= 
        reg_319 when (ap_reg_ppstg_tmp_57_i_reg_765_pp0_it39(0) = '1') else 
        reg_309;
    tmp_60_fu_376_p1 <= p_Val2_s_fu_373_p1(63 - 1 downto 0);
    tmp_61_fu_424_p1 <= p_Val2_1_fu_421_p1(63 - 1 downto 0);
    tmp_64_fu_399_p1 <= p_Val2_2_fu_393_p2(63 - 1 downto 0);
    tmp_65_fu_447_p1 <= p_Val2_3_fu_441_p2(63 - 1 downto 0);
    tmp_77_neg_fu_329_p2 <= (tmp_77_to_int_fu_325_p1 xor ap_const_lv64_8000000000000000);
    tmp_77_to_int_fu_325_p1 <= r;
    tmp_9_fu_359_p1 <= std_logic_vector(resize(unsigned(k_reg_540),64));
end behav;
