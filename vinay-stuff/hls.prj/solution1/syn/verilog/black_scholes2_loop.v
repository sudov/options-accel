// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.2
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="black_scholes2_loop,hls_ip_2014_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.623000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=0}" *)

module black_scholes2_loop (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        S,
        E,
        r,
        sigma,
        T,
        rand_number_address0,
        rand_number_ce0,
        rand_number_q0,
        store_address0,
        store_ce0,
        store_we0,
        store_d0,
        M,
        ap_return
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 7'b0000000;
parameter    ap_ST_st2_fsm_1 = 7'b1;
parameter    ap_ST_st3_fsm_2 = 7'b10;
parameter    ap_ST_st4_fsm_3 = 7'b11;
parameter    ap_ST_st5_fsm_4 = 7'b100;
parameter    ap_ST_st6_fsm_5 = 7'b101;
parameter    ap_ST_st7_fsm_6 = 7'b110;
parameter    ap_ST_st8_fsm_7 = 7'b111;
parameter    ap_ST_st9_fsm_8 = 7'b1000;
parameter    ap_ST_st10_fsm_9 = 7'b1001;
parameter    ap_ST_st11_fsm_10 = 7'b1010;
parameter    ap_ST_st12_fsm_11 = 7'b1011;
parameter    ap_ST_st13_fsm_12 = 7'b1100;
parameter    ap_ST_st14_fsm_13 = 7'b1101;
parameter    ap_ST_st15_fsm_14 = 7'b1110;
parameter    ap_ST_st16_fsm_15 = 7'b1111;
parameter    ap_ST_st17_fsm_16 = 7'b10000;
parameter    ap_ST_st18_fsm_17 = 7'b10001;
parameter    ap_ST_st19_fsm_18 = 7'b10010;
parameter    ap_ST_st20_fsm_19 = 7'b10011;
parameter    ap_ST_st21_fsm_20 = 7'b10100;
parameter    ap_ST_st22_fsm_21 = 7'b10101;
parameter    ap_ST_st23_fsm_22 = 7'b10110;
parameter    ap_ST_st24_fsm_23 = 7'b10111;
parameter    ap_ST_st25_fsm_24 = 7'b11000;
parameter    ap_ST_st26_fsm_25 = 7'b11001;
parameter    ap_ST_st27_fsm_26 = 7'b11010;
parameter    ap_ST_st28_fsm_27 = 7'b11011;
parameter    ap_ST_st29_fsm_28 = 7'b11100;
parameter    ap_ST_st30_fsm_29 = 7'b11101;
parameter    ap_ST_st31_fsm_30 = 7'b11110;
parameter    ap_ST_st32_fsm_31 = 7'b11111;
parameter    ap_ST_st33_fsm_32 = 7'b100000;
parameter    ap_ST_st34_fsm_33 = 7'b100001;
parameter    ap_ST_st35_fsm_34 = 7'b100010;
parameter    ap_ST_st36_fsm_35 = 7'b100011;
parameter    ap_ST_st37_fsm_36 = 7'b100100;
parameter    ap_ST_st38_fsm_37 = 7'b100101;
parameter    ap_ST_st39_fsm_38 = 7'b100110;
parameter    ap_ST_st40_fsm_39 = 7'b100111;
parameter    ap_ST_st41_fsm_40 = 7'b101000;
parameter    ap_ST_st42_fsm_41 = 7'b101001;
parameter    ap_ST_st43_fsm_42 = 7'b101010;
parameter    ap_ST_st44_fsm_43 = 7'b101011;
parameter    ap_ST_st45_fsm_44 = 7'b101100;
parameter    ap_ST_st46_fsm_45 = 7'b101101;
parameter    ap_ST_st47_fsm_46 = 7'b101110;
parameter    ap_ST_st48_fsm_47 = 7'b101111;
parameter    ap_ST_st49_fsm_48 = 7'b110000;
parameter    ap_ST_st50_fsm_49 = 7'b110001;
parameter    ap_ST_st51_fsm_50 = 7'b110010;
parameter    ap_ST_st52_fsm_51 = 7'b110011;
parameter    ap_ST_st53_fsm_52 = 7'b110100;
parameter    ap_ST_st54_fsm_53 = 7'b110101;
parameter    ap_ST_st55_fsm_54 = 7'b110110;
parameter    ap_ST_st56_fsm_55 = 7'b110111;
parameter    ap_ST_st57_fsm_56 = 7'b111000;
parameter    ap_ST_st58_fsm_57 = 7'b111001;
parameter    ap_ST_st59_fsm_58 = 7'b111010;
parameter    ap_ST_st60_fsm_59 = 7'b111011;
parameter    ap_ST_st61_fsm_60 = 7'b111100;
parameter    ap_ST_st62_fsm_61 = 7'b111101;
parameter    ap_ST_st63_fsm_62 = 7'b111110;
parameter    ap_ST_st64_fsm_63 = 7'b111111;
parameter    ap_ST_st65_fsm_64 = 7'b1000000;
parameter    ap_ST_st66_fsm_65 = 7'b1000001;
parameter    ap_ST_st67_fsm_66 = 7'b1000010;
parameter    ap_ST_st68_fsm_67 = 7'b1000011;
parameter    ap_ST_st69_fsm_68 = 7'b1000100;
parameter    ap_ST_st70_fsm_69 = 7'b1000101;
parameter    ap_ST_st71_fsm_70 = 7'b1000110;
parameter    ap_ST_st72_fsm_71 = 7'b1000111;
parameter    ap_ST_st73_fsm_72 = 7'b1001000;
parameter    ap_ST_st74_fsm_73 = 7'b1001001;
parameter    ap_ST_st75_fsm_74 = 7'b1001010;
parameter    ap_ST_st76_fsm_75 = 7'b1001011;
parameter    ap_ST_st77_fsm_76 = 7'b1001100;
parameter    ap_ST_st78_fsm_77 = 7'b1001101;
parameter    ap_ST_st79_fsm_78 = 7'b1001110;
parameter    ap_ST_st80_fsm_79 = 7'b1001111;
parameter    ap_ST_st81_fsm_80 = 7'b1010000;
parameter    ap_ST_st82_fsm_81 = 7'b1010001;
parameter    ap_ST_st83_fsm_82 = 7'b1010010;
parameter    ap_ST_st84_fsm_83 = 7'b1010011;
parameter    ap_ST_st85_fsm_84 = 7'b1010100;
parameter    ap_ST_st86_fsm_85 = 7'b1010101;
parameter    ap_ST_st87_fsm_86 = 7'b1010110;
parameter    ap_ST_st88_fsm_87 = 7'b1010111;
parameter    ap_ST_st89_fsm_88 = 7'b1011000;
parameter    ap_ST_st90_fsm_89 = 7'b1011001;
parameter    ap_ST_st91_fsm_90 = 7'b1011010;
parameter    ap_ST_st92_fsm_91 = 7'b1011011;
parameter    ap_ST_st93_fsm_92 = 7'b1011100;
parameter    ap_ST_st94_fsm_93 = 7'b1011101;
parameter    ap_ST_st95_fsm_94 = 7'b1011110;
parameter    ap_ST_st96_fsm_95 = 7'b1011111;
parameter    ap_ST_st97_fsm_96 = 7'b1100000;
parameter    ap_ST_st98_fsm_97 = 7'b1100001;
parameter    ap_ST_st99_fsm_98 = 7'b1100010;
parameter    ap_ST_st100_fsm_99 = 7'b1100011;
parameter    ap_ST_st101_fsm_100 = 7'b1100100;
parameter    ap_ST_st102_fsm_101 = 7'b1100101;
parameter    ap_ST_st103_fsm_102 = 7'b1100110;
parameter    ap_ST_st104_fsm_103 = 7'b1100111;
parameter    ap_ST_st105_fsm_104 = 7'b1101000;
parameter    ap_ST_st106_fsm_105 = 7'b1101001;
parameter    ap_ST_st107_fsm_106 = 7'b1101010;
parameter    ap_ST_st108_fsm_107 = 7'b1101011;
parameter    ap_ST_st109_fsm_108 = 7'b1101100;
parameter    ap_ST_st110_fsm_109 = 7'b1101101;
parameter    ap_ST_st111_fsm_110 = 7'b1101110;
parameter    ap_ST_st112_fsm_111 = 7'b1101111;
parameter    ap_ST_st113_fsm_112 = 7'b1110000;
parameter    ap_ST_st114_fsm_113 = 7'b1110001;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_3FE0000000000000 = 64'b11111111100000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_8000000000000000 = 64'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv5_4 = 5'b100;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] S;
input  [63:0] E;
input  [63:0] r;
input  [63:0] sigma;
input  [63:0] T;
output  [13:0] rand_number_address0;
output   rand_number_ce0;
input  [63:0] rand_number_q0;
output  [13:0] store_address0;
output   store_ce0;
output   store_we0;
output  [63:0] store_d0;
input  [31:0] M;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg rand_number_ce0;
reg store_ce0;
reg store_we0;
reg   [6:0] ap_CS_fsm = 7'b0000000;
wire   [63:0] grp_fu_133_p2;
reg   [63:0] reg_161;
wire   [63:0] grp_fu_127_p2;
reg   [63:0] reg_168;
reg   [63:0] reg_175;
wire   [63:0] grp_fu_156_p2;
reg   [63:0] reg_183;
wire   [63:0] tmp_5_neg_i_fu_191_p2;
reg   [63:0] tmp_5_neg_i_reg_237;
wire   [63:0] tmp_5_i_fu_197_p1;
wire   [63:0] grp_fu_141_p2;
reg   [63:0] tmp_9_i_reg_269;
wire   [31:0] i_1_fu_206_p2;
reg   [31:0] i_1_reg_277;
wire   [63:0] grp_fu_151_p2;
reg   [63:0] tmp_i_reg_282;
wire   [63:0] tmp_s_fu_212_p1;
reg   [63:0] tmp_s_reg_287;
reg   [63:0] rand_number_load_reg_297;
wire   [63:0] tmp_13_i_fu_217_p3;
reg   [63:0] tmp_13_i_reg_302;
reg   [31:0] i_reg_102;
reg   [63:0] sum_reg_114;
reg   [63:0] grp_fu_127_p0;
reg   [63:0] grp_fu_127_p1;
reg   [63:0] grp_fu_133_p0;
reg   [63:0] grp_fu_133_p1;
wire   [63:0] grp_fu_141_p0;
wire   [63:0] grp_fu_141_p1;
wire   [63:0] grp_fu_146_p0;
wire   [63:0] grp_fu_146_p1;
wire   [63:0] grp_fu_151_p1;
reg   [63:0] grp_fu_156_p1;
wire   [63:0] tmp_5_to_int_i_fu_188_p1;
wire   [0:0] grp_fu_146_p2;
reg   [1:0] grp_fu_127_opcode;
wire    grp_fu_127_ce;
wire    grp_fu_133_ce;
wire    grp_fu_141_ce;
wire    grp_fu_146_ce;
wire   [4:0] grp_fu_146_opcode;
wire   [63:0] grp_fu_151_p0;
wire    grp_fu_151_ce;
wire   [63:0] grp_fu_156_p0;
wire    grp_fu_156_ce;
wire   [0:0] tmp_fu_201_p2;
reg   [6:0] ap_NS_fsm;


black_scholes2_loop_dadddsub_64ns_64ns_64_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
black_scholes2_loop_dadddsub_64ns_64ns_64_5_full_dsp_U1(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_127_p0 ),
    .din1( grp_fu_127_p1 ),
    .opcode( grp_fu_127_opcode ),
    .ce( grp_fu_127_ce ),
    .dout( grp_fu_127_p2 )
);

black_scholes2_loop_dmul_64ns_64ns_64_6_max_dsp #(
    .ID( 2 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
black_scholes2_loop_dmul_64ns_64ns_64_6_max_dsp_U2(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_133_p0 ),
    .din1( grp_fu_133_p1 ),
    .ce( grp_fu_133_ce ),
    .dout( grp_fu_133_p2 )
);

black_scholes2_loop_dmul_64ns_64ns_64_6_max_dsp #(
    .ID( 3 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
black_scholes2_loop_dmul_64ns_64ns_64_6_max_dsp_U3(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_141_p0 ),
    .din1( grp_fu_141_p1 ),
    .ce( grp_fu_141_ce ),
    .dout( grp_fu_141_p2 )
);

black_scholes2_loop_dcmp_64ns_64ns_1_3 #(
    .ID( 4 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
black_scholes2_loop_dcmp_64ns_64ns_1_3_U4(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_146_p0 ),
    .din1( grp_fu_146_p1 ),
    .ce( grp_fu_146_ce ),
    .opcode( grp_fu_146_opcode ),
    .dout( grp_fu_146_p2 )
);

black_scholes2_loop_dsqrt_64ns_64ns_64_31 #(
    .ID( 5 ),
    .NUM_STAGE( 31 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
black_scholes2_loop_dsqrt_64ns_64ns_64_31_U5(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_151_p0 ),
    .din1( grp_fu_151_p1 ),
    .ce( grp_fu_151_ce ),
    .dout( grp_fu_151_p2 )
);

black_scholes2_loop_dexp_64ns_64ns_64_18_full_dsp #(
    .ID( 6 ),
    .NUM_STAGE( 18 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
black_scholes2_loop_dexp_64ns_64ns_64_18_full_dsp_U6(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_156_p0 ),
    .din1( grp_fu_156_p1 ),
    .ce( grp_fu_156_ce ),
    .dout( grp_fu_156_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st114_fsm_113 == ap_CS_fsm)) begin
        i_reg_102 <= i_1_reg_277;
    end else if ((ap_ST_st23_fsm_22 == ap_CS_fsm)) begin
        i_reg_102 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st114_fsm_113 == ap_CS_fsm)) begin
        sum_reg_114 <= grp_fu_127_p2;
    end else if ((ap_ST_st23_fsm_22 == ap_CS_fsm)) begin
        sum_reg_114 <= ap_const_lv64_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st24_fsm_23 == ap_CS_fsm)) begin
        i_1_reg_277 <= i_1_fu_206_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st60_fsm_59 == ap_CS_fsm)) begin
        rand_number_load_reg_297 <= rand_number_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st6_fsm_5 == ap_CS_fsm) | (ap_ST_st12_fsm_11 == ap_CS_fsm) | (ap_ST_st23_fsm_22 == ap_CS_fsm))) begin
        reg_161 <= grp_fu_133_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st17_fsm_16 == ap_CS_fsm) | (ap_ST_st71_fsm_70 == ap_CS_fsm) | (ap_ST_st100_fsm_99 == ap_CS_fsm))) begin
        reg_168 <= grp_fu_127_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st60_fsm_59 == ap_CS_fsm) | (ap_ST_st66_fsm_65 == ap_CS_fsm) | (ap_ST_st95_fsm_94 == ap_CS_fsm) | (ap_ST_st109_fsm_108 == ap_CS_fsm))) begin
        reg_175 <= grp_fu_133_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st89_fsm_88 == ap_CS_fsm) | (ap_ST_st103_fsm_102 == ap_CS_fsm))) begin
        reg_183 <= grp_fu_156_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st103_fsm_102 == ap_CS_fsm)) begin
        tmp_13_i_reg_302 <= tmp_13_i_fu_217_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st17_fsm_16 == ap_CS_fsm)) begin
        tmp_5_neg_i_reg_237 <= tmp_5_neg_i_fu_191_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st23_fsm_22 == ap_CS_fsm)) begin
        tmp_9_i_reg_269 <= grp_fu_141_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st54_fsm_53 == ap_CS_fsm)) begin
        tmp_i_reg_282 <= grp_fu_151_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st59_fsm_58 == ap_CS_fsm)) begin
        tmp_s_reg_287 <= tmp_s_fu_212_p1;
    end
end

/// ap_done assign process. ///
always @ (ap_CS_fsm or tmp_fu_201_p2)
begin
    if (((ap_ST_st24_fsm_23 == ap_CS_fsm) & (tmp_fu_201_p2 == ap_const_lv1_0))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_CS_fsm or tmp_fu_201_p2)
begin
    if (((ap_ST_st24_fsm_23 == ap_CS_fsm) & (tmp_fu_201_p2 == ap_const_lv1_0))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// grp_fu_127_opcode assign process. ///
always @ (ap_CS_fsm)
begin
    if (((ap_ST_st13_fsm_12 == ap_CS_fsm) | (ap_ST_st96_fsm_95 == ap_CS_fsm))) begin
        grp_fu_127_opcode = ap_const_lv2_1;
    end else if (((ap_ST_st110_fsm_109 == ap_CS_fsm) | (ap_ST_st67_fsm_66 == ap_CS_fsm))) begin
        grp_fu_127_opcode = ap_const_lv2_0;
    end else begin
        grp_fu_127_opcode = 'bx;
    end
end

/// grp_fu_127_p0 assign process. ///
always @ (ap_CS_fsm or r or reg_175 or tmp_9_i_reg_269 or sum_reg_114)
begin
    if ((ap_ST_st110_fsm_109 == ap_CS_fsm)) begin
        grp_fu_127_p0 = sum_reg_114;
    end else if ((ap_ST_st96_fsm_95 == ap_CS_fsm)) begin
        grp_fu_127_p0 = reg_175;
    end else if ((ap_ST_st67_fsm_66 == ap_CS_fsm)) begin
        grp_fu_127_p0 = tmp_9_i_reg_269;
    end else if ((ap_ST_st13_fsm_12 == ap_CS_fsm)) begin
        grp_fu_127_p0 = r;
    end else begin
        grp_fu_127_p0 = 'bx;
    end
end

/// grp_fu_127_p1 assign process. ///
always @ (ap_CS_fsm or E or reg_161 or reg_175)
begin
    if ((ap_ST_st96_fsm_95 == ap_CS_fsm)) begin
        grp_fu_127_p1 = E;
    end else if (((ap_ST_st110_fsm_109 == ap_CS_fsm) | (ap_ST_st67_fsm_66 == ap_CS_fsm))) begin
        grp_fu_127_p1 = reg_175;
    end else if ((ap_ST_st13_fsm_12 == ap_CS_fsm)) begin
        grp_fu_127_p1 = reg_161;
    end else begin
        grp_fu_127_p1 = 'bx;
    end
end

/// grp_fu_133_p0 assign process. ///
always @ (ap_CS_fsm or sigma or reg_161 or reg_175 or reg_183 or tmp_5_i_fu_197_p1 or tmp_i_reg_282)
begin
    if (((ap_ST_st90_fsm_89 == ap_CS_fsm) | (ap_ST_st104_fsm_103 == ap_CS_fsm))) begin
        grp_fu_133_p0 = reg_183;
    end else if ((ap_ST_st61_fsm_60 == ap_CS_fsm)) begin
        grp_fu_133_p0 = reg_175;
    end else if ((ap_ST_st55_fsm_54 == ap_CS_fsm)) begin
        grp_fu_133_p0 = tmp_i_reg_282;
    end else if ((ap_ST_st18_fsm_17 == ap_CS_fsm)) begin
        grp_fu_133_p0 = tmp_5_i_fu_197_p1;
    end else if ((ap_ST_st7_fsm_6 == ap_CS_fsm)) begin
        grp_fu_133_p0 = reg_161;
    end else if ((ap_ST_st1_fsm_0 == ap_CS_fsm)) begin
        grp_fu_133_p0 = sigma;
    end else begin
        grp_fu_133_p0 = 'bx;
    end
end

/// grp_fu_133_p1 assign process. ///
always @ (ap_CS_fsm or S or sigma or T or rand_number_load_reg_297 or tmp_13_i_reg_302)
begin
    if ((ap_ST_st104_fsm_103 == ap_CS_fsm)) begin
        grp_fu_133_p1 = tmp_13_i_reg_302;
    end else if ((ap_ST_st90_fsm_89 == ap_CS_fsm)) begin
        grp_fu_133_p1 = S;
    end else if ((ap_ST_st61_fsm_60 == ap_CS_fsm)) begin
        grp_fu_133_p1 = rand_number_load_reg_297;
    end else if ((ap_ST_st18_fsm_17 == ap_CS_fsm)) begin
        grp_fu_133_p1 = T;
    end else if ((ap_ST_st7_fsm_6 == ap_CS_fsm)) begin
        grp_fu_133_p1 = ap_const_lv64_3FE0000000000000;
    end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) | (ap_ST_st55_fsm_54 == ap_CS_fsm))) begin
        grp_fu_133_p1 = sigma;
    end else begin
        grp_fu_133_p1 = 'bx;
    end
end

/// grp_fu_156_p1 assign process. ///
always @ (ap_CS_fsm or reg_161 or reg_168)
begin
    if ((ap_ST_st86_fsm_85 == ap_CS_fsm)) begin
        grp_fu_156_p1 = reg_161;
    end else if ((ap_ST_st72_fsm_71 == ap_CS_fsm)) begin
        grp_fu_156_p1 = reg_168;
    end else begin
        grp_fu_156_p1 = 'bx;
    end
end

/// rand_number_ce0 assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st59_fsm_58 == ap_CS_fsm)) begin
        rand_number_ce0 = ap_const_logic_1;
    end else begin
        rand_number_ce0 = ap_const_logic_0;
    end
end

/// store_ce0 assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st110_fsm_109 == ap_CS_fsm)) begin
        store_ce0 = ap_const_logic_1;
    end else begin
        store_ce0 = ap_const_logic_0;
    end
end

/// store_we0 assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st110_fsm_109 == ap_CS_fsm)) begin
        store_we0 = ap_const_logic_1;
    end else begin
        store_we0 = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or tmp_fu_201_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : 
        begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : 
        begin
            if ((tmp_fu_201_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st25_fsm_24;
            end
        end
        ap_ST_st25_fsm_24 : 
        begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : 
        begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : 
        begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : 
        begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : 
        begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : 
        begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : 
        begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : 
        begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : 
        begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : 
        begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : 
        begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : 
        begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : 
        begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : 
        begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : 
        begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : 
        begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : 
        begin
            ap_NS_fsm = ap_ST_st42_fsm_41;
        end
        ap_ST_st42_fsm_41 : 
        begin
            ap_NS_fsm = ap_ST_st43_fsm_42;
        end
        ap_ST_st43_fsm_42 : 
        begin
            ap_NS_fsm = ap_ST_st44_fsm_43;
        end
        ap_ST_st44_fsm_43 : 
        begin
            ap_NS_fsm = ap_ST_st45_fsm_44;
        end
        ap_ST_st45_fsm_44 : 
        begin
            ap_NS_fsm = ap_ST_st46_fsm_45;
        end
        ap_ST_st46_fsm_45 : 
        begin
            ap_NS_fsm = ap_ST_st47_fsm_46;
        end
        ap_ST_st47_fsm_46 : 
        begin
            ap_NS_fsm = ap_ST_st48_fsm_47;
        end
        ap_ST_st48_fsm_47 : 
        begin
            ap_NS_fsm = ap_ST_st49_fsm_48;
        end
        ap_ST_st49_fsm_48 : 
        begin
            ap_NS_fsm = ap_ST_st50_fsm_49;
        end
        ap_ST_st50_fsm_49 : 
        begin
            ap_NS_fsm = ap_ST_st51_fsm_50;
        end
        ap_ST_st51_fsm_50 : 
        begin
            ap_NS_fsm = ap_ST_st52_fsm_51;
        end
        ap_ST_st52_fsm_51 : 
        begin
            ap_NS_fsm = ap_ST_st53_fsm_52;
        end
        ap_ST_st53_fsm_52 : 
        begin
            ap_NS_fsm = ap_ST_st54_fsm_53;
        end
        ap_ST_st54_fsm_53 : 
        begin
            ap_NS_fsm = ap_ST_st55_fsm_54;
        end
        ap_ST_st55_fsm_54 : 
        begin
            ap_NS_fsm = ap_ST_st56_fsm_55;
        end
        ap_ST_st56_fsm_55 : 
        begin
            ap_NS_fsm = ap_ST_st57_fsm_56;
        end
        ap_ST_st57_fsm_56 : 
        begin
            ap_NS_fsm = ap_ST_st58_fsm_57;
        end
        ap_ST_st58_fsm_57 : 
        begin
            ap_NS_fsm = ap_ST_st59_fsm_58;
        end
        ap_ST_st59_fsm_58 : 
        begin
            ap_NS_fsm = ap_ST_st60_fsm_59;
        end
        ap_ST_st60_fsm_59 : 
        begin
            ap_NS_fsm = ap_ST_st61_fsm_60;
        end
        ap_ST_st61_fsm_60 : 
        begin
            ap_NS_fsm = ap_ST_st62_fsm_61;
        end
        ap_ST_st62_fsm_61 : 
        begin
            ap_NS_fsm = ap_ST_st63_fsm_62;
        end
        ap_ST_st63_fsm_62 : 
        begin
            ap_NS_fsm = ap_ST_st64_fsm_63;
        end
        ap_ST_st64_fsm_63 : 
        begin
            ap_NS_fsm = ap_ST_st65_fsm_64;
        end
        ap_ST_st65_fsm_64 : 
        begin
            ap_NS_fsm = ap_ST_st66_fsm_65;
        end
        ap_ST_st66_fsm_65 : 
        begin
            ap_NS_fsm = ap_ST_st67_fsm_66;
        end
        ap_ST_st67_fsm_66 : 
        begin
            ap_NS_fsm = ap_ST_st68_fsm_67;
        end
        ap_ST_st68_fsm_67 : 
        begin
            ap_NS_fsm = ap_ST_st69_fsm_68;
        end
        ap_ST_st69_fsm_68 : 
        begin
            ap_NS_fsm = ap_ST_st70_fsm_69;
        end
        ap_ST_st70_fsm_69 : 
        begin
            ap_NS_fsm = ap_ST_st71_fsm_70;
        end
        ap_ST_st71_fsm_70 : 
        begin
            ap_NS_fsm = ap_ST_st72_fsm_71;
        end
        ap_ST_st72_fsm_71 : 
        begin
            ap_NS_fsm = ap_ST_st73_fsm_72;
        end
        ap_ST_st73_fsm_72 : 
        begin
            ap_NS_fsm = ap_ST_st74_fsm_73;
        end
        ap_ST_st74_fsm_73 : 
        begin
            ap_NS_fsm = ap_ST_st75_fsm_74;
        end
        ap_ST_st75_fsm_74 : 
        begin
            ap_NS_fsm = ap_ST_st76_fsm_75;
        end
        ap_ST_st76_fsm_75 : 
        begin
            ap_NS_fsm = ap_ST_st77_fsm_76;
        end
        ap_ST_st77_fsm_76 : 
        begin
            ap_NS_fsm = ap_ST_st78_fsm_77;
        end
        ap_ST_st78_fsm_77 : 
        begin
            ap_NS_fsm = ap_ST_st79_fsm_78;
        end
        ap_ST_st79_fsm_78 : 
        begin
            ap_NS_fsm = ap_ST_st80_fsm_79;
        end
        ap_ST_st80_fsm_79 : 
        begin
            ap_NS_fsm = ap_ST_st81_fsm_80;
        end
        ap_ST_st81_fsm_80 : 
        begin
            ap_NS_fsm = ap_ST_st82_fsm_81;
        end
        ap_ST_st82_fsm_81 : 
        begin
            ap_NS_fsm = ap_ST_st83_fsm_82;
        end
        ap_ST_st83_fsm_82 : 
        begin
            ap_NS_fsm = ap_ST_st84_fsm_83;
        end
        ap_ST_st84_fsm_83 : 
        begin
            ap_NS_fsm = ap_ST_st85_fsm_84;
        end
        ap_ST_st85_fsm_84 : 
        begin
            ap_NS_fsm = ap_ST_st86_fsm_85;
        end
        ap_ST_st86_fsm_85 : 
        begin
            ap_NS_fsm = ap_ST_st87_fsm_86;
        end
        ap_ST_st87_fsm_86 : 
        begin
            ap_NS_fsm = ap_ST_st88_fsm_87;
        end
        ap_ST_st88_fsm_87 : 
        begin
            ap_NS_fsm = ap_ST_st89_fsm_88;
        end
        ap_ST_st89_fsm_88 : 
        begin
            ap_NS_fsm = ap_ST_st90_fsm_89;
        end
        ap_ST_st90_fsm_89 : 
        begin
            ap_NS_fsm = ap_ST_st91_fsm_90;
        end
        ap_ST_st91_fsm_90 : 
        begin
            ap_NS_fsm = ap_ST_st92_fsm_91;
        end
        ap_ST_st92_fsm_91 : 
        begin
            ap_NS_fsm = ap_ST_st93_fsm_92;
        end
        ap_ST_st93_fsm_92 : 
        begin
            ap_NS_fsm = ap_ST_st94_fsm_93;
        end
        ap_ST_st94_fsm_93 : 
        begin
            ap_NS_fsm = ap_ST_st95_fsm_94;
        end
        ap_ST_st95_fsm_94 : 
        begin
            ap_NS_fsm = ap_ST_st96_fsm_95;
        end
        ap_ST_st96_fsm_95 : 
        begin
            ap_NS_fsm = ap_ST_st97_fsm_96;
        end
        ap_ST_st97_fsm_96 : 
        begin
            ap_NS_fsm = ap_ST_st98_fsm_97;
        end
        ap_ST_st98_fsm_97 : 
        begin
            ap_NS_fsm = ap_ST_st99_fsm_98;
        end
        ap_ST_st99_fsm_98 : 
        begin
            ap_NS_fsm = ap_ST_st100_fsm_99;
        end
        ap_ST_st100_fsm_99 : 
        begin
            ap_NS_fsm = ap_ST_st101_fsm_100;
        end
        ap_ST_st101_fsm_100 : 
        begin
            ap_NS_fsm = ap_ST_st102_fsm_101;
        end
        ap_ST_st102_fsm_101 : 
        begin
            ap_NS_fsm = ap_ST_st103_fsm_102;
        end
        ap_ST_st103_fsm_102 : 
        begin
            ap_NS_fsm = ap_ST_st104_fsm_103;
        end
        ap_ST_st104_fsm_103 : 
        begin
            ap_NS_fsm = ap_ST_st105_fsm_104;
        end
        ap_ST_st105_fsm_104 : 
        begin
            ap_NS_fsm = ap_ST_st106_fsm_105;
        end
        ap_ST_st106_fsm_105 : 
        begin
            ap_NS_fsm = ap_ST_st107_fsm_106;
        end
        ap_ST_st107_fsm_106 : 
        begin
            ap_NS_fsm = ap_ST_st108_fsm_107;
        end
        ap_ST_st108_fsm_107 : 
        begin
            ap_NS_fsm = ap_ST_st109_fsm_108;
        end
        ap_ST_st109_fsm_108 : 
        begin
            ap_NS_fsm = ap_ST_st110_fsm_109;
        end
        ap_ST_st110_fsm_109 : 
        begin
            ap_NS_fsm = ap_ST_st111_fsm_110;
        end
        ap_ST_st111_fsm_110 : 
        begin
            ap_NS_fsm = ap_ST_st112_fsm_111;
        end
        ap_ST_st112_fsm_111 : 
        begin
            ap_NS_fsm = ap_ST_st113_fsm_112;
        end
        ap_ST_st113_fsm_112 : 
        begin
            ap_NS_fsm = ap_ST_st114_fsm_113;
        end
        ap_ST_st114_fsm_113 : 
        begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_return = sum_reg_114;
assign grp_fu_127_ce = ap_const_logic_1;
assign grp_fu_133_ce = ap_const_logic_1;
assign grp_fu_141_ce = ap_const_logic_1;
assign grp_fu_141_p0 = reg_168;
assign grp_fu_141_p1 = T;
assign grp_fu_146_ce = ap_const_logic_1;
assign grp_fu_146_opcode = ap_const_lv5_4;
assign grp_fu_146_p0 = reg_168;
assign grp_fu_146_p1 = ap_const_lv64_0;
assign grp_fu_151_ce = ap_const_logic_1;
assign grp_fu_151_p0 = ap_const_lv64_0;
assign grp_fu_151_p1 = T;
assign grp_fu_156_ce = ap_const_logic_1;
assign grp_fu_156_p0 = ap_const_lv64_0;
assign i_1_fu_206_p2 = (i_reg_102 + ap_const_lv32_1);
assign rand_number_address0 = tmp_s_fu_212_p1;
assign store_address0 = tmp_s_reg_287;
assign store_d0 = reg_175;
assign tmp_13_i_fu_217_p3 = ((grp_fu_146_p2)? ap_const_lv64_0: reg_168);
assign tmp_5_i_fu_197_p1 = tmp_5_neg_i_reg_237;
assign tmp_5_neg_i_fu_191_p2 = (tmp_5_to_int_i_fu_188_p1 ^ ap_const_lv64_8000000000000000);
assign tmp_5_to_int_i_fu_188_p1 = r;
assign tmp_fu_201_p2 = ($signed(i_reg_102) < $signed(M)? 1'b1: 1'b0);
assign tmp_s_fu_212_p1 = $signed(i_reg_102);


endmodule //black_scholes2_loop

