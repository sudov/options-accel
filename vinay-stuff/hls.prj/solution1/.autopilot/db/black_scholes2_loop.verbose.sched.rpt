

================================================================
== Vivado HLS Report for 'black_scholes2_loop'
================================================================
* Date:           Sat Nov 29 15:11:44 2014

* Version:        2014.2 (Build 932637 on Wed Jun 11 12:38:34 PM 2014)
* Project:        hls.prj
* Solution:       solution1
* Product family: zynq zynq_fpv6 
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |  10.00|      8.62|        1.25|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |    ?|    ?|        91|          -|          -|     ?|    no    |
        +----------+-----+-----+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 114
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / (tmp)
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 
	59  / true
59 --> 
	60  / true
60 --> 
	61  / true
61 --> 
	62  / true
62 --> 
	63  / true
63 --> 
	64  / true
64 --> 
	65  / true
65 --> 
	66  / true
66 --> 
	67  / true
67 --> 
	68  / true
68 --> 
	69  / true
69 --> 
	70  / true
70 --> 
	71  / true
71 --> 
	72  / true
72 --> 
	73  / true
73 --> 
	74  / true
74 --> 
	75  / true
75 --> 
	76  / true
76 --> 
	77  / true
77 --> 
	78  / true
78 --> 
	79  / true
79 --> 
	80  / true
80 --> 
	81  / true
81 --> 
	82  / true
82 --> 
	83  / true
83 --> 
	84  / true
84 --> 
	85  / true
85 --> 
	86  / true
86 --> 
	87  / true
87 --> 
	88  / true
88 --> 
	89  / true
89 --> 
	90  / true
90 --> 
	91  / true
91 --> 
	92  / true
92 --> 
	93  / true
93 --> 
	94  / true
94 --> 
	95  / true
95 --> 
	96  / true
96 --> 
	97  / true
97 --> 
	98  / true
98 --> 
	99  / true
99 --> 
	100  / true
100 --> 
	101  / true
101 --> 
	102  / true
102 --> 
	103  / true
103 --> 
	104  / true
104 --> 
	105  / true
105 --> 
	106  / true
106 --> 
	107  / true
107 --> 
	108  / true
108 --> 
	109  / true
109 --> 
	110  / true
110 --> 
	111  / true
111 --> 
	112  / true
112 --> 
	113  / true
113 --> 
	114  / true
114 --> 
	24  / true
* FSM state operations: 

 <State 1>: 7.79ns
ST_1: sigma_read [1/1] 0.00ns
:12  %sigma_read = call double @_ssdm_op_Read.ap_auto.double(double %sigma) nounwind

ST_1: tmp_6_i [6/6] 7.79ns
:20  %tmp_6_i = fmul double %sigma_read, %sigma_read


 <State 2>: 7.79ns
ST_2: tmp_6_i [5/6] 7.79ns
:20  %tmp_6_i = fmul double %sigma_read, %sigma_read


 <State 3>: 7.79ns
ST_3: tmp_6_i [4/6] 7.79ns
:20  %tmp_6_i = fmul double %sigma_read, %sigma_read


 <State 4>: 7.79ns
ST_4: tmp_6_i [3/6] 7.79ns
:20  %tmp_6_i = fmul double %sigma_read, %sigma_read


 <State 5>: 7.79ns
ST_5: tmp_6_i [2/6] 7.79ns
:20  %tmp_6_i = fmul double %sigma_read, %sigma_read


 <State 6>: 7.79ns
ST_6: tmp_6_i [1/6] 7.79ns
:20  %tmp_6_i = fmul double %sigma_read, %sigma_read


 <State 7>: 7.79ns
ST_7: tmp_7_i [6/6] 7.79ns
:21  %tmp_7_i = fmul double %tmp_6_i, 5.000000e-01


 <State 8>: 7.79ns
ST_8: tmp_7_i [5/6] 7.79ns
:21  %tmp_7_i = fmul double %tmp_6_i, 5.000000e-01


 <State 9>: 7.79ns
ST_9: tmp_7_i [4/6] 7.79ns
:21  %tmp_7_i = fmul double %tmp_6_i, 5.000000e-01


 <State 10>: 7.79ns
ST_10: tmp_7_i [3/6] 7.79ns
:21  %tmp_7_i = fmul double %tmp_6_i, 5.000000e-01


 <State 11>: 7.79ns
ST_11: tmp_7_i [2/6] 7.79ns
:21  %tmp_7_i = fmul double %tmp_6_i, 5.000000e-01


 <State 12>: 7.79ns
ST_12: tmp_7_i [1/6] 7.79ns
:21  %tmp_7_i = fmul double %tmp_6_i, 5.000000e-01


 <State 13>: 8.23ns
ST_13: r_read [1/1] 0.00ns
:13  %r_read = call double @_ssdm_op_Read.ap_auto.double(double %r) nounwind

ST_13: tmp_8_i [5/5] 8.23ns
:22  %tmp_8_i = fsub double %r_read, %tmp_7_i


 <State 14>: 8.23ns
ST_14: tmp_8_i [4/5] 8.23ns
:22  %tmp_8_i = fsub double %r_read, %tmp_7_i


 <State 15>: 8.23ns
ST_15: tmp_8_i [3/5] 8.23ns
:22  %tmp_8_i = fsub double %r_read, %tmp_7_i


 <State 16>: 8.23ns
ST_16: tmp_8_i [2/5] 8.23ns
:22  %tmp_8_i = fsub double %r_read, %tmp_7_i


 <State 17>: 8.23ns
ST_17: tmp_5_to_int_i [1/1] 0.00ns
:16  %tmp_5_to_int_i = bitcast double %r_read to i64

ST_17: tmp_5_neg_i [1/1] 1.37ns
:17  %tmp_5_neg_i = xor i64 %tmp_5_to_int_i, -9223372036854775808

ST_17: tmp_8_i [1/5] 8.23ns
:22  %tmp_8_i = fsub double %r_read, %tmp_7_i


 <State 18>: 7.79ns
ST_18: T_read [1/1] 0.00ns
:11  %T_read = call double @_ssdm_op_Read.ap_auto.double(double %T) nounwind

ST_18: tmp_5_i [1/1] 0.00ns
:18  %tmp_5_i = bitcast i64 %tmp_5_neg_i to double

ST_18: tmp6 [6/6] 7.79ns
:19  %tmp6 = fmul double %tmp_5_i, %T_read

ST_18: tmp_9_i [6/6] 7.79ns
:23  %tmp_9_i = fmul double %tmp_8_i, %T_read


 <State 19>: 7.79ns
ST_19: tmp6 [5/6] 7.79ns
:19  %tmp6 = fmul double %tmp_5_i, %T_read

ST_19: tmp_9_i [5/6] 7.79ns
:23  %tmp_9_i = fmul double %tmp_8_i, %T_read


 <State 20>: 7.79ns
ST_20: tmp6 [4/6] 7.79ns
:19  %tmp6 = fmul double %tmp_5_i, %T_read

ST_20: tmp_9_i [4/6] 7.79ns
:23  %tmp_9_i = fmul double %tmp_8_i, %T_read


 <State 21>: 7.79ns
ST_21: tmp6 [3/6] 7.79ns
:19  %tmp6 = fmul double %tmp_5_i, %T_read

ST_21: tmp_9_i [3/6] 7.79ns
:23  %tmp_9_i = fmul double %tmp_8_i, %T_read


 <State 22>: 7.79ns
ST_22: tmp6 [2/6] 7.79ns
:19  %tmp6 = fmul double %tmp_5_i, %T_read

ST_22: tmp_9_i [2/6] 7.79ns
:23  %tmp_9_i = fmul double %tmp_8_i, %T_read


 <State 23>: 7.79ns
ST_23: stg_148 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap(double %S) nounwind, !map !0

ST_23: stg_149 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(double %E) nounwind, !map !6

ST_23: stg_150 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(double %r) nounwind, !map !10

ST_23: stg_151 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(double %sigma) nounwind, !map !14

ST_23: stg_152 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap(double %T) nounwind, !map !18

ST_23: stg_153 [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecBitsMap([10000 x double]* %rand_number) nounwind, !map !22

ST_23: stg_154 [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecBitsMap([10000 x double]* %store) nounwind, !map !28

ST_23: stg_155 [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecBitsMap(i32 %M) nounwind, !map !32

ST_23: stg_156 [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecBitsMap(double 0.000000e+00) nounwind, !map !36

ST_23: stg_157 [1/1] 0.00ns
:9  call void (...)* @_ssdm_op_SpecTopModule([20 x i8]* @str) nounwind

ST_23: M_read [1/1] 0.00ns
:10  %M_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %M) nounwind

ST_23: E_read [1/1] 0.00ns
:14  %E_read = call double @_ssdm_op_Read.ap_auto.double(double %E) nounwind

ST_23: S_read [1/1] 0.00ns
:15  %S_read = call double @_ssdm_op_Read.ap_auto.double(double %S) nounwind

ST_23: tmp6 [1/6] 7.79ns
:19  %tmp6 = fmul double %tmp_5_i, %T_read

ST_23: tmp_9_i [1/6] 7.79ns
:23  %tmp_9_i = fmul double %tmp_8_i, %T_read

ST_23: stg_163 [1/1] 1.57ns
:24  br label %1


 <State 24>: 8.62ns
ST_24: i [1/1] 0.00ns
:0  %i = phi i32 [ 0, %0 ], [ %i_1, %2 ]

ST_24: sum [1/1] 0.00ns
:1  %sum = phi double [ 0.000000e+00, %0 ], [ %sum_1, %2 ]

ST_24: tmp [1/1] 2.52ns
:2  %tmp = icmp slt i32 %i, %M_read

ST_24: i_1 [1/1] 2.44ns
:3  %i_1 = add nsw i32 %i, 1

ST_24: stg_168 [1/1] 0.00ns
:4  br i1 %tmp, label %2, label %3

ST_24: tmp_i [31/31] 8.62ns
:4  %tmp_i = call double @llvm.sqrt.f64(double %T_read) nounwind

ST_24: stg_170 [1/1] 0.00ns
:0  ret double %sum


 <State 25>: 8.62ns
ST_25: tmp_i [30/31] 8.62ns
:4  %tmp_i = call double @llvm.sqrt.f64(double %T_read) nounwind


 <State 26>: 8.62ns
ST_26: tmp_i [29/31] 8.62ns
:4  %tmp_i = call double @llvm.sqrt.f64(double %T_read) nounwind


 <State 27>: 8.62ns
ST_27: tmp_i [28/31] 8.62ns
:4  %tmp_i = call double @llvm.sqrt.f64(double %T_read) nounwind


 <State 28>: 8.62ns
ST_28: tmp_i [27/31] 8.62ns
:4  %tmp_i = call double @llvm.sqrt.f64(double %T_read) nounwind


 <State 29>: 8.62ns
ST_29: tmp_i [26/31] 8.62ns
:4  %tmp_i = call double @llvm.sqrt.f64(double %T_read) nounwind


 <State 30>: 8.62ns
ST_30: tmp_i [25/31] 8.62ns
:4  %tmp_i = call double @llvm.sqrt.f64(double %T_read) nounwind


 <State 31>: 8.62ns
ST_31: tmp_i [24/31] 8.62ns
:4  %tmp_i = call double @llvm.sqrt.f64(double %T_read) nounwind


 <State 32>: 8.62ns
ST_32: tmp_i [23/31] 8.62ns
:4  %tmp_i = call double @llvm.sqrt.f64(double %T_read) nounwind


 <State 33>: 8.62ns
ST_33: tmp_i [22/31] 8.62ns
:4  %tmp_i = call double @llvm.sqrt.f64(double %T_read) nounwind


 <State 34>: 8.62ns
ST_34: tmp_i [21/31] 8.62ns
:4  %tmp_i = call double @llvm.sqrt.f64(double %T_read) nounwind


 <State 35>: 8.62ns
ST_35: tmp_i [20/31] 8.62ns
:4  %tmp_i = call double @llvm.sqrt.f64(double %T_read) nounwind


 <State 36>: 8.62ns
ST_36: tmp_i [19/31] 8.62ns
:4  %tmp_i = call double @llvm.sqrt.f64(double %T_read) nounwind


 <State 37>: 8.62ns
ST_37: tmp_i [18/31] 8.62ns
:4  %tmp_i = call double @llvm.sqrt.f64(double %T_read) nounwind


 <State 38>: 8.62ns
ST_38: tmp_i [17/31] 8.62ns
:4  %tmp_i = call double @llvm.sqrt.f64(double %T_read) nounwind


 <State 39>: 8.62ns
ST_39: tmp_i [16/31] 8.62ns
:4  %tmp_i = call double @llvm.sqrt.f64(double %T_read) nounwind


 <State 40>: 8.62ns
ST_40: tmp_i [15/31] 8.62ns
:4  %tmp_i = call double @llvm.sqrt.f64(double %T_read) nounwind


 <State 41>: 8.62ns
ST_41: tmp_i [14/31] 8.62ns
:4  %tmp_i = call double @llvm.sqrt.f64(double %T_read) nounwind


 <State 42>: 8.62ns
ST_42: tmp_i [13/31] 8.62ns
:4  %tmp_i = call double @llvm.sqrt.f64(double %T_read) nounwind


 <State 43>: 8.62ns
ST_43: tmp_i [12/31] 8.62ns
:4  %tmp_i = call double @llvm.sqrt.f64(double %T_read) nounwind


 <State 44>: 8.62ns
ST_44: tmp_i [11/31] 8.62ns
:4  %tmp_i = call double @llvm.sqrt.f64(double %T_read) nounwind


 <State 45>: 8.62ns
ST_45: tmp_i [10/31] 8.62ns
:4  %tmp_i = call double @llvm.sqrt.f64(double %T_read) nounwind


 <State 46>: 8.62ns
ST_46: tmp_i [9/31] 8.62ns
:4  %tmp_i = call double @llvm.sqrt.f64(double %T_read) nounwind


 <State 47>: 8.62ns
ST_47: tmp_i [8/31] 8.62ns
:4  %tmp_i = call double @llvm.sqrt.f64(double %T_read) nounwind


 <State 48>: 8.62ns
ST_48: tmp_i [7/31] 8.62ns
:4  %tmp_i = call double @llvm.sqrt.f64(double %T_read) nounwind


 <State 49>: 8.62ns
ST_49: tmp_i [6/31] 8.62ns
:4  %tmp_i = call double @llvm.sqrt.f64(double %T_read) nounwind


 <State 50>: 8.62ns
ST_50: tmp_i [5/31] 8.62ns
:4  %tmp_i = call double @llvm.sqrt.f64(double %T_read) nounwind


 <State 51>: 8.62ns
ST_51: tmp_i [4/31] 8.62ns
:4  %tmp_i = call double @llvm.sqrt.f64(double %T_read) nounwind


 <State 52>: 8.62ns
ST_52: tmp_i [3/31] 8.62ns
:4  %tmp_i = call double @llvm.sqrt.f64(double %T_read) nounwind


 <State 53>: 8.62ns
ST_53: tmp_i [2/31] 8.62ns
:4  %tmp_i = call double @llvm.sqrt.f64(double %T_read) nounwind


 <State 54>: 8.62ns
ST_54: tmp_i [1/31] 8.62ns
:4  %tmp_i = call double @llvm.sqrt.f64(double %T_read) nounwind


 <State 55>: 7.79ns
ST_55: tmp_1_i [6/6] 7.79ns
:5  %tmp_1_i = fmul double %tmp_i, %sigma_read


 <State 56>: 7.79ns
ST_56: tmp_1_i [5/6] 7.79ns
:5  %tmp_1_i = fmul double %tmp_i, %sigma_read


 <State 57>: 7.79ns
ST_57: tmp_1_i [4/6] 7.79ns
:5  %tmp_1_i = fmul double %tmp_i, %sigma_read


 <State 58>: 7.79ns
ST_58: tmp_1_i [3/6] 7.79ns
:5  %tmp_1_i = fmul double %tmp_i, %sigma_read


 <State 59>: 7.79ns
ST_59: tmp_s [1/1] 0.00ns
:0  %tmp_s = sext i32 %i to i64

ST_59: rand_number_addr [1/1] 0.00ns
:1  %rand_number_addr = getelementptr [10000 x double]* %rand_number, i64 0, i64 %tmp_s

ST_59: rand_number_load [2/2] 2.39ns
:2  %rand_number_load = load double* %rand_number_addr, align 8

ST_59: tmp_1_i [2/6] 7.79ns
:5  %tmp_1_i = fmul double %tmp_i, %sigma_read


 <State 60>: 7.79ns
ST_60: rand_number_load [1/2] 2.39ns
:2  %rand_number_load = load double* %rand_number_addr, align 8

ST_60: tmp_1_i [1/6] 7.79ns
:5  %tmp_1_i = fmul double %tmp_i, %sigma_read


 <State 61>: 7.79ns
ST_61: tmp_2_i [6/6] 7.79ns
:6  %tmp_2_i = fmul double %tmp_1_i, %rand_number_load


 <State 62>: 7.79ns
ST_62: tmp_2_i [5/6] 7.79ns
:6  %tmp_2_i = fmul double %tmp_1_i, %rand_number_load


 <State 63>: 7.79ns
ST_63: tmp_2_i [4/6] 7.79ns
:6  %tmp_2_i = fmul double %tmp_1_i, %rand_number_load


 <State 64>: 7.79ns
ST_64: tmp_2_i [3/6] 7.79ns
:6  %tmp_2_i = fmul double %tmp_1_i, %rand_number_load


 <State 65>: 7.79ns
ST_65: tmp_2_i [2/6] 7.79ns
:6  %tmp_2_i = fmul double %tmp_1_i, %rand_number_load


 <State 66>: 7.79ns
ST_66: tmp_2_i [1/6] 7.79ns
:6  %tmp_2_i = fmul double %tmp_1_i, %rand_number_load


 <State 67>: 8.23ns
ST_67: tmp_3_i [5/5] 8.23ns
:7  %tmp_3_i = fadd double %tmp_9_i, %tmp_2_i


 <State 68>: 8.23ns
ST_68: tmp_3_i [4/5] 8.23ns
:7  %tmp_3_i = fadd double %tmp_9_i, %tmp_2_i


 <State 69>: 8.23ns
ST_69: tmp_3_i [3/5] 8.23ns
:7  %tmp_3_i = fadd double %tmp_9_i, %tmp_2_i


 <State 70>: 8.23ns
ST_70: tmp_3_i [2/5] 8.23ns
:7  %tmp_3_i = fadd double %tmp_9_i, %tmp_2_i


 <State 71>: 8.23ns
ST_71: tmp_3_i [1/5] 8.23ns
:7  %tmp_3_i = fadd double %tmp_9_i, %tmp_2_i


 <State 72>: 7.32ns
ST_72: tmp_4_i [18/18] 7.32ns
:8  %tmp_4_i = call double @llvm.exp.f64(double %tmp_3_i) nounwind


 <State 73>: 7.32ns
ST_73: tmp_4_i [17/18] 7.32ns
:8  %tmp_4_i = call double @llvm.exp.f64(double %tmp_3_i) nounwind


 <State 74>: 7.32ns
ST_74: tmp_4_i [16/18] 7.32ns
:8  %tmp_4_i = call double @llvm.exp.f64(double %tmp_3_i) nounwind


 <State 75>: 7.32ns
ST_75: tmp_4_i [15/18] 7.32ns
:8  %tmp_4_i = call double @llvm.exp.f64(double %tmp_3_i) nounwind


 <State 76>: 7.32ns
ST_76: tmp_4_i [14/18] 7.32ns
:8  %tmp_4_i = call double @llvm.exp.f64(double %tmp_3_i) nounwind


 <State 77>: 7.32ns
ST_77: tmp_4_i [13/18] 7.32ns
:8  %tmp_4_i = call double @llvm.exp.f64(double %tmp_3_i) nounwind


 <State 78>: 7.32ns
ST_78: tmp_4_i [12/18] 7.32ns
:8  %tmp_4_i = call double @llvm.exp.f64(double %tmp_3_i) nounwind


 <State 79>: 7.32ns
ST_79: tmp_4_i [11/18] 7.32ns
:8  %tmp_4_i = call double @llvm.exp.f64(double %tmp_3_i) nounwind


 <State 80>: 7.32ns
ST_80: tmp_4_i [10/18] 7.32ns
:8  %tmp_4_i = call double @llvm.exp.f64(double %tmp_3_i) nounwind


 <State 81>: 7.32ns
ST_81: tmp_4_i [9/18] 7.32ns
:8  %tmp_4_i = call double @llvm.exp.f64(double %tmp_3_i) nounwind


 <State 82>: 7.32ns
ST_82: tmp_4_i [8/18] 7.32ns
:8  %tmp_4_i = call double @llvm.exp.f64(double %tmp_3_i) nounwind


 <State 83>: 7.32ns
ST_83: tmp_4_i [7/18] 7.32ns
:8  %tmp_4_i = call double @llvm.exp.f64(double %tmp_3_i) nounwind


 <State 84>: 7.32ns
ST_84: tmp_4_i [6/18] 7.32ns
:8  %tmp_4_i = call double @llvm.exp.f64(double %tmp_3_i) nounwind


 <State 85>: 7.32ns
ST_85: tmp_4_i [5/18] 7.32ns
:8  %tmp_4_i = call double @llvm.exp.f64(double %tmp_3_i) nounwind


 <State 86>: 7.32ns
ST_86: tmp_4_i [4/18] 7.32ns
:8  %tmp_4_i = call double @llvm.exp.f64(double %tmp_3_i) nounwind

ST_86: tmp_10_i [18/18] 7.32ns
:10  %tmp_10_i = call double @llvm.exp.f64(double %tmp6) nounwind


 <State 87>: 7.32ns
ST_87: tmp_4_i [3/18] 7.32ns
:8  %tmp_4_i = call double @llvm.exp.f64(double %tmp_3_i) nounwind

ST_87: tmp_10_i [17/18] 7.32ns
:10  %tmp_10_i = call double @llvm.exp.f64(double %tmp6) nounwind


 <State 88>: 7.32ns
ST_88: tmp_4_i [2/18] 7.32ns
:8  %tmp_4_i = call double @llvm.exp.f64(double %tmp_3_i) nounwind

ST_88: tmp_10_i [16/18] 7.32ns
:10  %tmp_10_i = call double @llvm.exp.f64(double %tmp6) nounwind


 <State 89>: 7.32ns
ST_89: tmp_4_i [1/18] 7.32ns
:8  %tmp_4_i = call double @llvm.exp.f64(double %tmp_3_i) nounwind

ST_89: tmp_10_i [15/18] 7.32ns
:10  %tmp_10_i = call double @llvm.exp.f64(double %tmp6) nounwind


 <State 90>: 7.79ns
ST_90: current_value [6/6] 7.79ns
:9  %current_value = fmul double %tmp_4_i, %S_read

ST_90: tmp_10_i [14/18] 7.32ns
:10  %tmp_10_i = call double @llvm.exp.f64(double %tmp6) nounwind


 <State 91>: 7.79ns
ST_91: current_value [5/6] 7.79ns
:9  %current_value = fmul double %tmp_4_i, %S_read

ST_91: tmp_10_i [13/18] 7.32ns
:10  %tmp_10_i = call double @llvm.exp.f64(double %tmp6) nounwind


 <State 92>: 7.79ns
ST_92: current_value [4/6] 7.79ns
:9  %current_value = fmul double %tmp_4_i, %S_read

ST_92: tmp_10_i [12/18] 7.32ns
:10  %tmp_10_i = call double @llvm.exp.f64(double %tmp6) nounwind


 <State 93>: 7.79ns
ST_93: current_value [3/6] 7.79ns
:9  %current_value = fmul double %tmp_4_i, %S_read

ST_93: tmp_10_i [11/18] 7.32ns
:10  %tmp_10_i = call double @llvm.exp.f64(double %tmp6) nounwind


 <State 94>: 7.79ns
ST_94: current_value [2/6] 7.79ns
:9  %current_value = fmul double %tmp_4_i, %S_read

ST_94: tmp_10_i [10/18] 7.32ns
:10  %tmp_10_i = call double @llvm.exp.f64(double %tmp6) nounwind


 <State 95>: 7.79ns
ST_95: current_value [1/6] 7.79ns
:9  %current_value = fmul double %tmp_4_i, %S_read

ST_95: tmp_10_i [9/18] 7.32ns
:10  %tmp_10_i = call double @llvm.exp.f64(double %tmp6) nounwind


 <State 96>: 8.23ns
ST_96: tmp_10_i [8/18] 7.32ns
:10  %tmp_10_i = call double @llvm.exp.f64(double %tmp6) nounwind

ST_96: tmp_11_i [5/5] 8.23ns
:11  %tmp_11_i = fsub double %current_value, %E_read


 <State 97>: 8.23ns
ST_97: tmp_10_i [7/18] 7.32ns
:10  %tmp_10_i = call double @llvm.exp.f64(double %tmp6) nounwind

ST_97: tmp_11_i [4/5] 8.23ns
:11  %tmp_11_i = fsub double %current_value, %E_read


 <State 98>: 8.23ns
ST_98: tmp_10_i [6/18] 7.32ns
:10  %tmp_10_i = call double @llvm.exp.f64(double %tmp6) nounwind

ST_98: tmp_11_i [3/5] 8.23ns
:11  %tmp_11_i = fsub double %current_value, %E_read


 <State 99>: 8.23ns
ST_99: tmp_10_i [5/18] 7.32ns
:10  %tmp_10_i = call double @llvm.exp.f64(double %tmp6) nounwind

ST_99: tmp_11_i [2/5] 8.23ns
:11  %tmp_11_i = fsub double %current_value, %E_read


 <State 100>: 8.23ns
ST_100: tmp_10_i [4/18] 7.32ns
:10  %tmp_10_i = call double @llvm.exp.f64(double %tmp6) nounwind

ST_100: tmp_11_i [1/5] 8.23ns
:11  %tmp_11_i = fsub double %current_value, %E_read


 <State 101>: 7.32ns
ST_101: tmp_10_i [3/18] 7.32ns
:10  %tmp_10_i = call double @llvm.exp.f64(double %tmp6) nounwind

ST_101: tmp_12_i [3/3] 4.55ns
:12  %tmp_12_i = fcmp olt double %tmp_11_i, 0.000000e+00


 <State 102>: 7.32ns
ST_102: tmp_10_i [2/18] 7.32ns
:10  %tmp_10_i = call double @llvm.exp.f64(double %tmp6) nounwind

ST_102: tmp_12_i [2/3] 4.55ns
:12  %tmp_12_i = fcmp olt double %tmp_11_i, 0.000000e+00


 <State 103>: 7.32ns
ST_103: tmp_10_i [1/18] 7.32ns
:10  %tmp_10_i = call double @llvm.exp.f64(double %tmp6) nounwind

ST_103: tmp_12_i [1/3] 4.55ns
:12  %tmp_12_i = fcmp olt double %tmp_11_i, 0.000000e+00

ST_103: tmp_13_i [1/1] 1.37ns
:13  %tmp_13_i = select i1 %tmp_12_i, double 0.000000e+00, double %tmp_11_i


 <State 104>: 7.79ns
ST_104: mydata [6/6] 7.79ns
:14  %mydata = fmul double %tmp_10_i, %tmp_13_i


 <State 105>: 7.79ns
ST_105: mydata [5/6] 7.79ns
:14  %mydata = fmul double %tmp_10_i, %tmp_13_i


 <State 106>: 7.79ns
ST_106: mydata [4/6] 7.79ns
:14  %mydata = fmul double %tmp_10_i, %tmp_13_i


 <State 107>: 7.79ns
ST_107: mydata [3/6] 7.79ns
:14  %mydata = fmul double %tmp_10_i, %tmp_13_i


 <State 108>: 7.79ns
ST_108: mydata [2/6] 7.79ns
:14  %mydata = fmul double %tmp_10_i, %tmp_13_i


 <State 109>: 7.79ns
ST_109: mydata [1/6] 7.79ns
:14  %mydata = fmul double %tmp_10_i, %tmp_13_i


 <State 110>: 8.23ns
ST_110: store_addr [1/1] 0.00ns
:3  %store_addr = getelementptr [10000 x double]* %store, i64 0, i64 %tmp_s

ST_110: stg_280 [1/1] 2.39ns
:15  store double %mydata, double* %store_addr, align 8

ST_110: sum_1 [5/5] 8.23ns
:16  %sum_1 = fadd double %sum, %mydata


 <State 111>: 8.23ns
ST_111: sum_1 [4/5] 8.23ns
:16  %sum_1 = fadd double %sum, %mydata


 <State 112>: 8.23ns
ST_112: sum_1 [3/5] 8.23ns
:16  %sum_1 = fadd double %sum, %mydata


 <State 113>: 8.23ns
ST_113: sum_1 [2/5] 8.23ns
:16  %sum_1 = fadd double %sum, %mydata


 <State 114>: 8.23ns
ST_114: sum_1 [1/5] 8.23ns
:16  %sum_1 = fadd double %sum, %mydata

ST_114: stg_286 [1/1] 0.00ns
:17  br label %1



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78
	State 79
	State 80
	State 81
	State 82
	State 83
	State 84
	State 85
	State 86
	State 87
	State 88
	State 89
	State 90
	State 91
	State 92
	State 93
	State 94
	State 95
	State 96
	State 97
	State 98
	State 99
	State 100
	State 101
	State 102
	State 103
	State 104
	State 105
	State 106
	State 107
	State 108
	State 109
	State 110
	State 111
	State 112
	State 113
	State 114


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
