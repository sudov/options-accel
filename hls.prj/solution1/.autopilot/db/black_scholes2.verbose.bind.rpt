

================================================================
== Vivado HLS Report for 'black_scholes2'
================================================================
* Date:           Fri Nov 28 13:53:16 2014

* Version:        2014.2 (Build 932637 on Wed Jun 11 12:38:34 PM 2014)
* Project:        hls.prj
* Solution:       solution1
* Product family: zynq zynq_fpv6 
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |  10.00|      8.62|        1.25|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   85|   85|   86|   86|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 86
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 
	59  / true
59 --> 
	60  / true
60 --> 
	61  / true
61 --> 
	62  / true
62 --> 
	63  / true
63 --> 
	64  / true
64 --> 
	65  / true
65 --> 
	66  / true
66 --> 
	67  / true
67 --> 
	68  / true
68 --> 
	69  / true
69 --> 
	70  / true
70 --> 
	71  / true
71 --> 
	72  / true
72 --> 
	73  / true
73 --> 
	74  / true
74 --> 
	75  / true
75 --> 
	76  / true
76 --> 
	77  / true
77 --> 
	78  / true
78 --> 
	79  / true
79 --> 
	80  / true
80 --> 
	81  / true
81 --> 
	82  / true
82 --> 
	83  / true
83 --> 
	84  / true
84 --> 
	85  / true
85 --> 
	86  / true
86 --> 
* FSM state operations: 

 <State 1>: 8.62ns
ST_1: T_read [1/1] 0.00ns
._crit_edge:9  %T_read = call double @_ssdm_op_Read.ap_auto.double(double %T) nounwind

ST_1: tmp_4 [31/31] 8.62ns
._crit_edge:18  %tmp_4 = call double @llvm.sqrt.f64(double %T_read)


 <State 2>: 8.62ns
ST_2: tmp_4 [30/31] 8.62ns
._crit_edge:18  %tmp_4 = call double @llvm.sqrt.f64(double %T_read)


 <State 3>: 8.62ns
ST_3: tmp_4 [29/31] 8.62ns
._crit_edge:18  %tmp_4 = call double @llvm.sqrt.f64(double %T_read)


 <State 4>: 8.62ns
ST_4: tmp_4 [28/31] 8.62ns
._crit_edge:18  %tmp_4 = call double @llvm.sqrt.f64(double %T_read)


 <State 5>: 8.62ns
ST_5: tmp_4 [27/31] 8.62ns
._crit_edge:18  %tmp_4 = call double @llvm.sqrt.f64(double %T_read)


 <State 6>: 8.62ns
ST_6: tmp_4 [26/31] 8.62ns
._crit_edge:18  %tmp_4 = call double @llvm.sqrt.f64(double %T_read)


 <State 7>: 8.62ns
ST_7: tmp_4 [25/31] 8.62ns
._crit_edge:18  %tmp_4 = call double @llvm.sqrt.f64(double %T_read)


 <State 8>: 8.62ns
ST_8: tmp_4 [24/31] 8.62ns
._crit_edge:18  %tmp_4 = call double @llvm.sqrt.f64(double %T_read)


 <State 9>: 8.62ns
ST_9: tmp_4 [23/31] 8.62ns
._crit_edge:18  %tmp_4 = call double @llvm.sqrt.f64(double %T_read)


 <State 10>: 8.62ns
ST_10: tmp_4 [22/31] 8.62ns
._crit_edge:18  %tmp_4 = call double @llvm.sqrt.f64(double %T_read)


 <State 11>: 8.62ns
ST_11: tmp_4 [21/31] 8.62ns
._crit_edge:18  %tmp_4 = call double @llvm.sqrt.f64(double %T_read)


 <State 12>: 8.62ns
ST_12: tmp_4 [20/31] 8.62ns
._crit_edge:18  %tmp_4 = call double @llvm.sqrt.f64(double %T_read)


 <State 13>: 8.62ns
ST_13: tmp_4 [19/31] 8.62ns
._crit_edge:18  %tmp_4 = call double @llvm.sqrt.f64(double %T_read)


 <State 14>: 8.62ns
ST_14: tmp_4 [18/31] 8.62ns
._crit_edge:18  %tmp_4 = call double @llvm.sqrt.f64(double %T_read)


 <State 15>: 8.62ns
ST_15: tmp_4 [17/31] 8.62ns
._crit_edge:18  %tmp_4 = call double @llvm.sqrt.f64(double %T_read)


 <State 16>: 8.62ns
ST_16: tmp_4 [16/31] 8.62ns
._crit_edge:18  %tmp_4 = call double @llvm.sqrt.f64(double %T_read)


 <State 17>: 8.62ns
ST_17: tmp_4 [15/31] 8.62ns
._crit_edge:18  %tmp_4 = call double @llvm.sqrt.f64(double %T_read)


 <State 18>: 8.62ns
ST_18: tmp_4 [14/31] 8.62ns
._crit_edge:18  %tmp_4 = call double @llvm.sqrt.f64(double %T_read)


 <State 19>: 8.62ns
ST_19: tmp_4 [13/31] 8.62ns
._crit_edge:18  %tmp_4 = call double @llvm.sqrt.f64(double %T_read)


 <State 20>: 8.62ns
ST_20: tmp_4 [12/31] 8.62ns
._crit_edge:18  %tmp_4 = call double @llvm.sqrt.f64(double %T_read)


 <State 21>: 8.62ns
ST_21: sigma_read [1/1] 0.00ns
._crit_edge:10  %sigma_read = call double @_ssdm_op_Read.ap_auto.double(double %sigma) nounwind

ST_21: tmp [6/6] 7.79ns
._crit_edge:14  %tmp = fmul double %sigma_read, %sigma_read

ST_21: tmp_4 [11/31] 8.62ns
._crit_edge:18  %tmp_4 = call double @llvm.sqrt.f64(double %T_read)


 <State 22>: 8.62ns
ST_22: tmp [5/6] 7.79ns
._crit_edge:14  %tmp = fmul double %sigma_read, %sigma_read

ST_22: tmp_4 [10/31] 8.62ns
._crit_edge:18  %tmp_4 = call double @llvm.sqrt.f64(double %T_read)


 <State 23>: 8.62ns
ST_23: tmp [4/6] 7.79ns
._crit_edge:14  %tmp = fmul double %sigma_read, %sigma_read

ST_23: tmp_4 [9/31] 8.62ns
._crit_edge:18  %tmp_4 = call double @llvm.sqrt.f64(double %T_read)


 <State 24>: 8.62ns
ST_24: tmp [3/6] 7.79ns
._crit_edge:14  %tmp = fmul double %sigma_read, %sigma_read

ST_24: tmp_4 [8/31] 8.62ns
._crit_edge:18  %tmp_4 = call double @llvm.sqrt.f64(double %T_read)


 <State 25>: 8.62ns
ST_25: tmp [2/6] 7.79ns
._crit_edge:14  %tmp = fmul double %sigma_read, %sigma_read

ST_25: tmp_4 [7/31] 8.62ns
._crit_edge:18  %tmp_4 = call double @llvm.sqrt.f64(double %T_read)


 <State 26>: 8.62ns
ST_26: tmp [1/6] 7.79ns
._crit_edge:14  %tmp = fmul double %sigma_read, %sigma_read

ST_26: tmp_4 [6/31] 8.62ns
._crit_edge:18  %tmp_4 = call double @llvm.sqrt.f64(double %T_read)


 <State 27>: 8.62ns
ST_27: tmp_1 [6/6] 7.79ns
._crit_edge:15  %tmp_1 = fmul double %tmp, 5.000000e-01

ST_27: tmp_4 [5/31] 8.62ns
._crit_edge:18  %tmp_4 = call double @llvm.sqrt.f64(double %T_read)


 <State 28>: 8.62ns
ST_28: tmp_1 [5/6] 7.79ns
._crit_edge:15  %tmp_1 = fmul double %tmp, 5.000000e-01

ST_28: tmp_4 [4/31] 8.62ns
._crit_edge:18  %tmp_4 = call double @llvm.sqrt.f64(double %T_read)


 <State 29>: 8.62ns
ST_29: tmp_1 [4/6] 7.79ns
._crit_edge:15  %tmp_1 = fmul double %tmp, 5.000000e-01

ST_29: tmp_4 [3/31] 8.62ns
._crit_edge:18  %tmp_4 = call double @llvm.sqrt.f64(double %T_read)


 <State 30>: 8.62ns
ST_30: tmp_1 [3/6] 7.79ns
._crit_edge:15  %tmp_1 = fmul double %tmp, 5.000000e-01

ST_30: tmp_4 [2/31] 8.62ns
._crit_edge:18  %tmp_4 = call double @llvm.sqrt.f64(double %T_read)


 <State 31>: 8.62ns
ST_31: tmp_1 [2/6] 7.79ns
._crit_edge:15  %tmp_1 = fmul double %tmp, 5.000000e-01

ST_31: tmp_4 [1/31] 8.62ns
._crit_edge:18  %tmp_4 = call double @llvm.sqrt.f64(double %T_read)


 <State 32>: 7.79ns
ST_32: tmp_1 [1/6] 7.79ns
._crit_edge:15  %tmp_1 = fmul double %tmp, 5.000000e-01

ST_32: tmp_5 [6/6] 7.79ns
._crit_edge:19  %tmp_5 = fmul double %tmp_4, %sigma_read


 <State 33>: 8.23ns
ST_33: r_read [1/1] 0.00ns
._crit_edge:11  %r_read = call double @_ssdm_op_Read.ap_auto.double(double %r) nounwind

ST_33: tmp_2 [5/5] 8.23ns
._crit_edge:16  %tmp_2 = fsub double %r_read, %tmp_1

ST_33: tmp_5 [5/6] 7.79ns
._crit_edge:19  %tmp_5 = fmul double %tmp_4, %sigma_read


 <State 34>: 8.23ns
ST_34: tmp_2 [4/5] 8.23ns
._crit_edge:16  %tmp_2 = fsub double %r_read, %tmp_1

ST_34: tmp_5 [4/6] 7.79ns
._crit_edge:19  %tmp_5 = fmul double %tmp_4, %sigma_read


 <State 35>: 8.23ns
ST_35: tmp_2 [3/5] 8.23ns
._crit_edge:16  %tmp_2 = fsub double %r_read, %tmp_1

ST_35: tmp_5 [3/6] 7.79ns
._crit_edge:19  %tmp_5 = fmul double %tmp_4, %sigma_read


 <State 36>: 8.23ns
ST_36: tmp_2 [2/5] 8.23ns
._crit_edge:16  %tmp_2 = fsub double %r_read, %tmp_1

ST_36: tmp_5 [2/6] 7.79ns
._crit_edge:19  %tmp_5 = fmul double %tmp_4, %sigma_read


 <State 37>: 8.23ns
ST_37: tmp_2 [1/5] 8.23ns
._crit_edge:16  %tmp_2 = fsub double %r_read, %tmp_1

ST_37: tmp_5 [1/6] 7.79ns
._crit_edge:19  %tmp_5 = fmul double %tmp_4, %sigma_read

ST_37: tmp_9_to_int [1/1] 0.00ns
._crit_edge:24  %tmp_9_to_int = bitcast double %r_read to i64

ST_37: tmp_9_neg [1/1] 1.37ns
._crit_edge:25  %tmp_9_neg = xor i64 %tmp_9_to_int, -9223372036854775808


 <State 38>: 7.79ns
ST_38: gaussian_random_number_read [1/1] 0.00ns
._crit_edge:8  %gaussian_random_number_read = call double @_ssdm_op_Read.ap_auto.double(double %gaussian_random_number) nounwind

ST_38: tmp_3 [6/6] 7.79ns
._crit_edge:17  %tmp_3 = fmul double %tmp_2, %T_read

ST_38: tmp_6 [6/6] 7.79ns
._crit_edge:20  %tmp_6 = fmul double %tmp_5, %gaussian_random_number_read

ST_38: tmp_9 [1/1] 0.00ns
._crit_edge:26  %tmp_9 = bitcast i64 %tmp_9_neg to double

ST_38: tmp_s [6/6] 7.79ns
._crit_edge:27  %tmp_s = fmul double %tmp_9, %T_read


 <State 39>: 7.79ns
ST_39: tmp_3 [5/6] 7.79ns
._crit_edge:17  %tmp_3 = fmul double %tmp_2, %T_read

ST_39: tmp_6 [5/6] 7.79ns
._crit_edge:20  %tmp_6 = fmul double %tmp_5, %gaussian_random_number_read

ST_39: tmp_s [5/6] 7.79ns
._crit_edge:27  %tmp_s = fmul double %tmp_9, %T_read


 <State 40>: 7.79ns
ST_40: tmp_3 [4/6] 7.79ns
._crit_edge:17  %tmp_3 = fmul double %tmp_2, %T_read

ST_40: tmp_6 [4/6] 7.79ns
._crit_edge:20  %tmp_6 = fmul double %tmp_5, %gaussian_random_number_read

ST_40: tmp_s [4/6] 7.79ns
._crit_edge:27  %tmp_s = fmul double %tmp_9, %T_read


 <State 41>: 7.79ns
ST_41: tmp_3 [3/6] 7.79ns
._crit_edge:17  %tmp_3 = fmul double %tmp_2, %T_read

ST_41: tmp_6 [3/6] 7.79ns
._crit_edge:20  %tmp_6 = fmul double %tmp_5, %gaussian_random_number_read

ST_41: tmp_s [3/6] 7.79ns
._crit_edge:27  %tmp_s = fmul double %tmp_9, %T_read


 <State 42>: 7.79ns
ST_42: tmp_3 [2/6] 7.79ns
._crit_edge:17  %tmp_3 = fmul double %tmp_2, %T_read

ST_42: tmp_6 [2/6] 7.79ns
._crit_edge:20  %tmp_6 = fmul double %tmp_5, %gaussian_random_number_read

ST_42: tmp_s [2/6] 7.79ns
._crit_edge:27  %tmp_s = fmul double %tmp_9, %T_read


 <State 43>: 7.79ns
ST_43: tmp_3 [1/6] 7.79ns
._crit_edge:17  %tmp_3 = fmul double %tmp_2, %T_read

ST_43: tmp_6 [1/6] 7.79ns
._crit_edge:20  %tmp_6 = fmul double %tmp_5, %gaussian_random_number_read

ST_43: tmp_s [1/6] 7.79ns
._crit_edge:27  %tmp_s = fmul double %tmp_9, %T_read


 <State 44>: 8.23ns
ST_44: tmp_7 [5/5] 8.23ns
._crit_edge:21  %tmp_7 = fadd double %tmp_3, %tmp_6


 <State 45>: 8.23ns
ST_45: tmp_7 [4/5] 8.23ns
._crit_edge:21  %tmp_7 = fadd double %tmp_3, %tmp_6


 <State 46>: 8.23ns
ST_46: tmp_7 [3/5] 8.23ns
._crit_edge:21  %tmp_7 = fadd double %tmp_3, %tmp_6


 <State 47>: 8.23ns
ST_47: tmp_7 [2/5] 8.23ns
._crit_edge:21  %tmp_7 = fadd double %tmp_3, %tmp_6


 <State 48>: 8.23ns
ST_48: tmp_7 [1/5] 8.23ns
._crit_edge:21  %tmp_7 = fadd double %tmp_3, %tmp_6


 <State 49>: 7.32ns
ST_49: tmp_8 [18/18] 7.32ns
._crit_edge:22  %tmp_8 = call double @llvm.exp.f64(double %tmp_7)


 <State 50>: 7.32ns
ST_50: tmp_8 [17/18] 7.32ns
._crit_edge:22  %tmp_8 = call double @llvm.exp.f64(double %tmp_7)


 <State 51>: 7.32ns
ST_51: tmp_8 [16/18] 7.32ns
._crit_edge:22  %tmp_8 = call double @llvm.exp.f64(double %tmp_7)


 <State 52>: 7.32ns
ST_52: tmp_8 [15/18] 7.32ns
._crit_edge:22  %tmp_8 = call double @llvm.exp.f64(double %tmp_7)


 <State 53>: 7.32ns
ST_53: tmp_8 [14/18] 7.32ns
._crit_edge:22  %tmp_8 = call double @llvm.exp.f64(double %tmp_7)


 <State 54>: 7.32ns
ST_54: tmp_8 [13/18] 7.32ns
._crit_edge:22  %tmp_8 = call double @llvm.exp.f64(double %tmp_7)


 <State 55>: 7.32ns
ST_55: tmp_8 [12/18] 7.32ns
._crit_edge:22  %tmp_8 = call double @llvm.exp.f64(double %tmp_7)


 <State 56>: 7.32ns
ST_56: tmp_8 [11/18] 7.32ns
._crit_edge:22  %tmp_8 = call double @llvm.exp.f64(double %tmp_7)


 <State 57>: 7.32ns
ST_57: tmp_8 [10/18] 7.32ns
._crit_edge:22  %tmp_8 = call double @llvm.exp.f64(double %tmp_7)


 <State 58>: 7.32ns
ST_58: tmp_8 [9/18] 7.32ns
._crit_edge:22  %tmp_8 = call double @llvm.exp.f64(double %tmp_7)


 <State 59>: 7.32ns
ST_59: tmp_8 [8/18] 7.32ns
._crit_edge:22  %tmp_8 = call double @llvm.exp.f64(double %tmp_7)


 <State 60>: 7.32ns
ST_60: tmp_8 [7/18] 7.32ns
._crit_edge:22  %tmp_8 = call double @llvm.exp.f64(double %tmp_7)


 <State 61>: 7.32ns
ST_61: tmp_8 [6/18] 7.32ns
._crit_edge:22  %tmp_8 = call double @llvm.exp.f64(double %tmp_7)


 <State 62>: 7.32ns
ST_62: tmp_8 [5/18] 7.32ns
._crit_edge:22  %tmp_8 = call double @llvm.exp.f64(double %tmp_7)


 <State 63>: 7.32ns
ST_63: tmp_8 [4/18] 7.32ns
._crit_edge:22  %tmp_8 = call double @llvm.exp.f64(double %tmp_7)

ST_63: tmp_10 [18/18] 7.32ns
._crit_edge:28  %tmp_10 = call double @llvm.exp.f64(double %tmp_s)


 <State 64>: 7.32ns
ST_64: tmp_8 [3/18] 7.32ns
._crit_edge:22  %tmp_8 = call double @llvm.exp.f64(double %tmp_7)

ST_64: tmp_10 [17/18] 7.32ns
._crit_edge:28  %tmp_10 = call double @llvm.exp.f64(double %tmp_s)


 <State 65>: 7.32ns
ST_65: tmp_8 [2/18] 7.32ns
._crit_edge:22  %tmp_8 = call double @llvm.exp.f64(double %tmp_7)

ST_65: tmp_10 [16/18] 7.32ns
._crit_edge:28  %tmp_10 = call double @llvm.exp.f64(double %tmp_s)


 <State 66>: 7.32ns
ST_66: tmp_8 [1/18] 7.32ns
._crit_edge:22  %tmp_8 = call double @llvm.exp.f64(double %tmp_7)

ST_66: tmp_10 [15/18] 7.32ns
._crit_edge:28  %tmp_10 = call double @llvm.exp.f64(double %tmp_s)


 <State 67>: 7.79ns
ST_67: S_read [1/1] 0.00ns
._crit_edge:13  %S_read = call double @_ssdm_op_Read.ap_auto.double(double %S) nounwind

ST_67: current_value [6/6] 7.79ns
._crit_edge:23  %current_value = fmul double %tmp_8, %S_read

ST_67: tmp_10 [14/18] 7.32ns
._crit_edge:28  %tmp_10 = call double @llvm.exp.f64(double %tmp_s)


 <State 68>: 7.79ns
ST_68: current_value [5/6] 7.79ns
._crit_edge:23  %current_value = fmul double %tmp_8, %S_read

ST_68: tmp_10 [13/18] 7.32ns
._crit_edge:28  %tmp_10 = call double @llvm.exp.f64(double %tmp_s)


 <State 69>: 7.79ns
ST_69: current_value [4/6] 7.79ns
._crit_edge:23  %current_value = fmul double %tmp_8, %S_read

ST_69: tmp_10 [12/18] 7.32ns
._crit_edge:28  %tmp_10 = call double @llvm.exp.f64(double %tmp_s)


 <State 70>: 7.79ns
ST_70: current_value [3/6] 7.79ns
._crit_edge:23  %current_value = fmul double %tmp_8, %S_read

ST_70: tmp_10 [11/18] 7.32ns
._crit_edge:28  %tmp_10 = call double @llvm.exp.f64(double %tmp_s)


 <State 71>: 7.79ns
ST_71: current_value [2/6] 7.79ns
._crit_edge:23  %current_value = fmul double %tmp_8, %S_read

ST_71: tmp_10 [10/18] 7.32ns
._crit_edge:28  %tmp_10 = call double @llvm.exp.f64(double %tmp_s)


 <State 72>: 7.79ns
ST_72: current_value [1/6] 7.79ns
._crit_edge:23  %current_value = fmul double %tmp_8, %S_read

ST_72: tmp_10 [9/18] 7.32ns
._crit_edge:28  %tmp_10 = call double @llvm.exp.f64(double %tmp_s)


 <State 73>: 8.23ns
ST_73: E_read [1/1] 0.00ns
._crit_edge:12  %E_read = call double @_ssdm_op_Read.ap_auto.double(double %E) nounwind

ST_73: tmp_10 [8/18] 7.32ns
._crit_edge:28  %tmp_10 = call double @llvm.exp.f64(double %tmp_s)

ST_73: tmp_11 [5/5] 8.23ns
._crit_edge:29  %tmp_11 = fsub double %current_value, %E_read


 <State 74>: 8.23ns
ST_74: tmp_10 [7/18] 7.32ns
._crit_edge:28  %tmp_10 = call double @llvm.exp.f64(double %tmp_s)

ST_74: tmp_11 [4/5] 8.23ns
._crit_edge:29  %tmp_11 = fsub double %current_value, %E_read


 <State 75>: 8.23ns
ST_75: tmp_10 [6/18] 7.32ns
._crit_edge:28  %tmp_10 = call double @llvm.exp.f64(double %tmp_s)

ST_75: tmp_11 [3/5] 8.23ns
._crit_edge:29  %tmp_11 = fsub double %current_value, %E_read


 <State 76>: 8.23ns
ST_76: tmp_10 [5/18] 7.32ns
._crit_edge:28  %tmp_10 = call double @llvm.exp.f64(double %tmp_s)

ST_76: tmp_11 [2/5] 8.23ns
._crit_edge:29  %tmp_11 = fsub double %current_value, %E_read


 <State 77>: 8.23ns
ST_77: tmp_10 [4/18] 7.32ns
._crit_edge:28  %tmp_10 = call double @llvm.exp.f64(double %tmp_s)

ST_77: tmp_11 [1/5] 8.23ns
._crit_edge:29  %tmp_11 = fsub double %current_value, %E_read


 <State 78>: 7.32ns
ST_78: tmp_10 [3/18] 7.32ns
._crit_edge:28  %tmp_10 = call double @llvm.exp.f64(double %tmp_s)

ST_78: tmp_12 [3/3] 4.55ns
._crit_edge:30  %tmp_12 = fcmp olt double %tmp_11, 0.000000e+00


 <State 79>: 7.32ns
ST_79: tmp_10 [2/18] 7.32ns
._crit_edge:28  %tmp_10 = call double @llvm.exp.f64(double %tmp_s)

ST_79: tmp_12 [2/3] 4.55ns
._crit_edge:30  %tmp_12 = fcmp olt double %tmp_11, 0.000000e+00


 <State 80>: 7.32ns
ST_80: tmp_10 [1/18] 7.32ns
._crit_edge:28  %tmp_10 = call double @llvm.exp.f64(double %tmp_s)

ST_80: tmp_12 [1/3] 4.55ns
._crit_edge:30  %tmp_12 = fcmp olt double %tmp_11, 0.000000e+00

ST_80: tmp_13 [1/1] 1.37ns
._crit_edge:31  %tmp_13 = select i1 %tmp_12, double 0.000000e+00, double %tmp_11


 <State 81>: 7.79ns
ST_81: mydata [6/6] 7.79ns
._crit_edge:32  %mydata = fmul double %tmp_10, %tmp_13


 <State 82>: 7.79ns
ST_82: mydata [5/6] 7.79ns
._crit_edge:32  %mydata = fmul double %tmp_10, %tmp_13


 <State 83>: 7.79ns
ST_83: mydata [4/6] 7.79ns
._crit_edge:32  %mydata = fmul double %tmp_10, %tmp_13


 <State 84>: 7.79ns
ST_84: mydata [3/6] 7.79ns
._crit_edge:32  %mydata = fmul double %tmp_10, %tmp_13


 <State 85>: 7.79ns
ST_85: mydata [2/6] 7.79ns
._crit_edge:32  %mydata = fmul double %tmp_10, %tmp_13


 <State 86>: 7.79ns
ST_86: stg_229 [1/1] 0.00ns
._crit_edge:0  call void (...)* @_ssdm_op_SpecBitsMap(double %S) nounwind, !map !12

ST_86: stg_230 [1/1] 0.00ns
._crit_edge:1  call void (...)* @_ssdm_op_SpecBitsMap(double %E) nounwind, !map !18

ST_86: stg_231 [1/1] 0.00ns
._crit_edge:2  call void (...)* @_ssdm_op_SpecBitsMap(double %r) nounwind, !map !22

ST_86: stg_232 [1/1] 0.00ns
._crit_edge:3  call void (...)* @_ssdm_op_SpecBitsMap(double %sigma) nounwind, !map !26

ST_86: stg_233 [1/1] 0.00ns
._crit_edge:4  call void (...)* @_ssdm_op_SpecBitsMap(double %T) nounwind, !map !30

ST_86: stg_234 [1/1] 0.00ns
._crit_edge:5  call void (...)* @_ssdm_op_SpecBitsMap(double %gaussian_random_number) nounwind, !map !34

ST_86: stg_235 [1/1] 0.00ns
._crit_edge:6  call void (...)* @_ssdm_op_SpecBitsMap(double 0.000000e+00) nounwind, !map !38

ST_86: stg_236 [1/1] 0.00ns
._crit_edge:7  call void (...)* @_ssdm_op_SpecTopModule([15 x i8]* @str) nounwind

ST_86: mydata [1/6] 7.79ns
._crit_edge:32  %mydata = fmul double %tmp_10, %tmp_13

ST_86: stg_238 [1/1] 0.00ns
._crit_edge:33  ret double %mydata



============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is clock enabled: 0
- Is pipelined: 0
- Is top level: 1
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ S]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; mode=0x1e25beb0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ E]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; mode=0x1e3a7670; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ r]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; mode=0x1e42a100; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ sigma]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; mode=0x1dc39b60; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ T]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; mode=0x1e0a38b0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ gaussian_random_number]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; mode=0x1e09b880; pingpong=0; private_global=0; IO mode=ap_none:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
T_read                      (read         ) [ 001111111111111111111111111111111111111111110000000000000000000000000000000000000000000]
sigma_read                  (read         ) [ 000000000000000000000011111111111111110000000000000000000000000000000000000000000000000]
tmp                         (dmul         ) [ 000000000000000000000000000111111000000000000000000000000000000000000000000000000000000]
tmp_4                       (dsqrt        ) [ 000000000000000000000000000000001111110000000000000000000000000000000000000000000000000]
tmp_1                       (dmul         ) [ 000000000000000000000000000000000111110000000000000000000000000000000000000000000000000]
r_read                      (read         ) [ 000000000000000000000000000000000011110000000000000000000000000000000000000000000000000]
tmp_2                       (dsub         ) [ 000000000000000000000000000000000000001111110000000000000000000000000000000000000000000]
tmp_5                       (dmul         ) [ 000000000000000000000000000000000000001111110000000000000000000000000000000000000000000]
tmp_9_to_int                (bitcast      ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_9_neg                   (xor          ) [ 000000000000000000000000000000000000001000000000000000000000000000000000000000000000000]
gaussian_random_number_read (read         ) [ 000000000000000000000000000000000000000111110000000000000000000000000000000000000000000]
tmp_9                       (bitcast      ) [ 000000000000000000000000000000000000000111110000000000000000000000000000000000000000000]
tmp_3                       (dmul         ) [ 000000000000000000000000000000000000000000001111100000000000000000000000000000000000000]
tmp_6                       (dmul         ) [ 000000000000000000000000000000000000000000001111100000000000000000000000000000000000000]
tmp_s                       (dmul         ) [ 000000000000000000000000000000000000000000001111111111111111111111111111111111111000000]
tmp_7                       (dadd         ) [ 000000000000000000000000000000000000000000000000011111111111111111100000000000000000000]
tmp_8                       (dexp         ) [ 000000000000000000000000000000000000000000000000000000000000000000011111100000000000000]
S_read                      (read         ) [ 000000000000000000000000000000000000000000000000000000000000000000001111100000000000000]
current_value               (dmul         ) [ 000000000000000000000000000000000000000000000000000000000000000000000000011111000000000]
E_read                      (read         ) [ 000000000000000000000000000000000000000000000000000000000000000000000000001111000000000]
tmp_11                      (dsub         ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000111000000]
tmp_10                      (dexp         ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000111111]
tmp_12                      (dcmp         ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_13                      (select       ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000111111]
stg_229                     (specbitsmap  ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_230                     (specbitsmap  ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_231                     (specbitsmap  ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_232                     (specbitsmap  ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_233                     (specbitsmap  ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_234                     (specbitsmap  ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_235                     (specbitsmap  ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_236                     (spectopmodule) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
mydata                      (dmul         ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_238                     (ret          ) [ 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="S">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="S"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="E">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="E"/></StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="r">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="r"/></StgValue>
</bind>
</comp>

<comp id="6" class="1000" name="sigma">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="sigma"/></StgValue>
</bind>
</comp>

<comp id="8" class="1000" name="T">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="T"/></StgValue>
</bind>
</comp>

<comp id="10" class="1000" name="gaussian_random_number">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="gaussian_random_number"/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_auto.double"/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="llvm.sqrt.f64"/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="llvm.exp.f64"/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecBitsMap"/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecTopModule"/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="str"/></StgValue>
</bind>
</comp>

<comp id="30" class="1004" name="T_read_read_fu_30">
<pin_list>
<pin id="31" dir="0" index="0" bw="64" slack="0"/>
<pin id="32" dir="0" index="1" bw="64" slack="0"/>
<pin id="33" dir="1" index="2" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="T_read/1 "/>
</bind>
</comp>

<comp id="36" class="1004" name="sigma_read_read_fu_36">
<pin_list>
<pin id="37" dir="0" index="0" bw="64" slack="0"/>
<pin id="38" dir="0" index="1" bw="64" slack="0"/>
<pin id="39" dir="1" index="2" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="sigma_read/21 "/>
</bind>
</comp>

<comp id="42" class="1004" name="r_read_read_fu_42">
<pin_list>
<pin id="43" dir="0" index="0" bw="64" slack="0"/>
<pin id="44" dir="0" index="1" bw="64" slack="0"/>
<pin id="45" dir="1" index="2" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="r_read/33 "/>
</bind>
</comp>

<comp id="48" class="1004" name="gaussian_random_number_read_read_fu_48">
<pin_list>
<pin id="49" dir="0" index="0" bw="64" slack="0"/>
<pin id="50" dir="0" index="1" bw="64" slack="0"/>
<pin id="51" dir="1" index="2" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="gaussian_random_number_read/38 "/>
</bind>
</comp>

<comp id="54" class="1004" name="S_read_read_fu_54">
<pin_list>
<pin id="55" dir="0" index="0" bw="64" slack="0"/>
<pin id="56" dir="0" index="1" bw="64" slack="0"/>
<pin id="57" dir="1" index="2" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="S_read/67 "/>
</bind>
</comp>

<comp id="60" class="1004" name="E_read_read_fu_60">
<pin_list>
<pin id="61" dir="0" index="0" bw="64" slack="0"/>
<pin id="62" dir="0" index="1" bw="64" slack="0"/>
<pin id="63" dir="1" index="2" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="E_read/73 "/>
</bind>
</comp>

<comp id="67" class="1004" name="grp_fu_67">
<pin_list>
<pin id="68" dir="0" index="0" bw="64" slack="0"/>
<pin id="69" dir="0" index="1" bw="64" slack="0"/>
<pin id="70" dir="1" index="2" bw="64" slack="1"/>
</pin_list>
<bind>
<opcode="dadd(508) dsub(509) " fcode="dadd"/>
<opset="tmp_2/33 tmp_7/44 tmp_11/73 "/>
</bind>
</comp>

<comp id="73" class="1004" name="grp_fu_73">
<pin_list>
<pin id="74" dir="0" index="0" bw="64" slack="0"/>
<pin id="75" dir="0" index="1" bw="64" slack="0"/>
<pin id="76" dir="1" index="2" bw="64" slack="1"/>
</pin_list>
<bind>
<opcode="dmul(510) " fcode="dmul"/>
<opset="tmp/21 tmp_1/27 tmp_5/32 tmp_3/38 current_value/67 mydata/81 "/>
</bind>
</comp>

<comp id="80" class="1004" name="grp_fu_80">
<pin_list>
<pin id="81" dir="0" index="0" bw="64" slack="1"/>
<pin id="82" dir="0" index="1" bw="64" slack="0"/>
<pin id="83" dir="1" index="2" bw="64" slack="1"/>
</pin_list>
<bind>
<opcode="dmul(510) " fcode="dmul"/>
<opset="tmp_6/38 "/>
</bind>
</comp>

<comp id="85" class="1004" name="grp_fu_85">
<pin_list>
<pin id="86" dir="0" index="0" bw="64" slack="0"/>
<pin id="87" dir="0" index="1" bw="64" slack="37"/>
<pin id="88" dir="1" index="2" bw="64" slack="20"/>
</pin_list>
<bind>
<opcode="dmul(510) " fcode="dmul"/>
<opset="tmp_s/38 "/>
</bind>
</comp>

<comp id="90" class="1004" name="grp_fu_90">
<pin_list>
<pin id="91" dir="0" index="0" bw="64" slack="1"/>
<pin id="92" dir="0" index="1" bw="64" slack="0"/>
<pin id="93" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="dcmp(513) " fcode="dcmp"/>
<opset="tmp_12/78 "/>
</bind>
</comp>

<comp id="95" class="1004" name="grp_fu_95">
<pin_list>
<pin id="96" dir="0" index="0" bw="64" slack="0"/>
<pin id="97" dir="0" index="1" bw="64" slack="0"/>
<pin id="98" dir="1" index="2" bw="64" slack="1"/>
</pin_list>
<bind>
<opcode="dsqrt(518) " fcode="dsqrt"/>
<opset="tmp_4/1 "/>
</bind>
</comp>

<comp id="101" class="1004" name="grp_fu_101">
<pin_list>
<pin id="102" dir="0" index="0" bw="64" slack="0"/>
<pin id="103" dir="0" index="1" bw="64" slack="1"/>
<pin id="104" dir="1" index="2" bw="64" slack="1"/>
</pin_list>
<bind>
<opcode="dexp(522) " fcode="dexp"/>
<opset="tmp_8/49 tmp_10/63 "/>
</bind>
</comp>

<comp id="106" class="1005" name="reg_106">
<pin_list>
<pin id="107" dir="0" index="0" bw="64" slack="1"/>
<pin id="108" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opset="tmp tmp_1 tmp_5 tmp_3 current_value "/>
</bind>
</comp>

<comp id="114" class="1005" name="reg_114">
<pin_list>
<pin id="115" dir="0" index="0" bw="64" slack="1"/>
<pin id="116" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opset="tmp_2 tmp_7 tmp_11 "/>
</bind>
</comp>

<comp id="121" class="1005" name="reg_121">
<pin_list>
<pin id="122" dir="0" index="0" bw="64" slack="1"/>
<pin id="123" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opset="tmp_8 tmp_10 "/>
</bind>
</comp>

<comp id="126" class="1004" name="tmp_9_to_int_fu_126">
<pin_list>
<pin id="127" dir="0" index="0" bw="64" slack="4"/>
<pin id="128" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="bitcast(44) " fcode="bitcast"/>
<opset="tmp_9_to_int/37 "/>
</bind>
</comp>

<comp id="129" class="1004" name="tmp_9_neg_fu_129">
<pin_list>
<pin id="130" dir="0" index="0" bw="64" slack="0"/>
<pin id="131" dir="0" index="1" bw="64" slack="0"/>
<pin id="132" dir="1" index="2" bw="64" slack="1"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="tmp_9_neg/37 "/>
</bind>
</comp>

<comp id="135" class="1004" name="tmp_9_fu_135">
<pin_list>
<pin id="136" dir="0" index="0" bw="64" slack="1"/>
<pin id="137" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="bitcast(44) " fcode="bitcast"/>
<opset="tmp_9/38 "/>
</bind>
</comp>

<comp id="139" class="1004" name="tmp_13_fu_139">
<pin_list>
<pin id="140" dir="0" index="0" bw="1" slack="0"/>
<pin id="141" dir="0" index="1" bw="64" slack="0"/>
<pin id="142" dir="0" index="2" bw="64" slack="3"/>
<pin id="143" dir="1" index="3" bw="64" slack="1"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="tmp_13/80 "/>
</bind>
</comp>

<comp id="147" class="1005" name="T_read_reg_147">
<pin_list>
<pin id="148" dir="0" index="0" bw="64" slack="1"/>
<pin id="149" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opset="T_read "/>
</bind>
</comp>

<comp id="154" class="1005" name="sigma_read_reg_154">
<pin_list>
<pin id="155" dir="0" index="0" bw="64" slack="1"/>
<pin id="156" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opset="sigma_read "/>
</bind>
</comp>

<comp id="160" class="1005" name="tmp_4_reg_160">
<pin_list>
<pin id="161" dir="0" index="0" bw="64" slack="1"/>
<pin id="162" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opset="tmp_4 "/>
</bind>
</comp>

<comp id="165" class="1005" name="r_read_reg_165">
<pin_list>
<pin id="166" dir="0" index="0" bw="64" slack="1"/>
<pin id="167" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opset="r_read "/>
</bind>
</comp>

<comp id="171" class="1005" name="tmp_9_neg_reg_171">
<pin_list>
<pin id="172" dir="0" index="0" bw="64" slack="1"/>
<pin id="173" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opset="tmp_9_neg "/>
</bind>
</comp>

<comp id="176" class="1005" name="gaussian_random_number_read_reg_176">
<pin_list>
<pin id="177" dir="0" index="0" bw="64" slack="1"/>
<pin id="178" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opset="gaussian_random_number_read "/>
</bind>
</comp>

<comp id="181" class="1005" name="tmp_9_reg_181">
<pin_list>
<pin id="182" dir="0" index="0" bw="64" slack="1"/>
<pin id="183" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opset="tmp_9 "/>
</bind>
</comp>

<comp id="186" class="1005" name="tmp_6_reg_186">
<pin_list>
<pin id="187" dir="0" index="0" bw="64" slack="1"/>
<pin id="188" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opset="tmp_6 "/>
</bind>
</comp>

<comp id="191" class="1005" name="tmp_s_reg_191">
<pin_list>
<pin id="192" dir="0" index="0" bw="64" slack="20"/>
<pin id="193" dir="1" index="1" bw="64" slack="20"/>
</pin_list>
<bind>
<opset="tmp_s "/>
</bind>
</comp>

<comp id="196" class="1005" name="S_read_reg_196">
<pin_list>
<pin id="197" dir="0" index="0" bw="64" slack="1"/>
<pin id="198" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opset="S_read "/>
</bind>
</comp>

<comp id="201" class="1005" name="E_read_reg_201">
<pin_list>
<pin id="202" dir="0" index="0" bw="64" slack="1"/>
<pin id="203" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opset="E_read "/>
</bind>
</comp>

<comp id="206" class="1005" name="tmp_13_reg_206">
<pin_list>
<pin id="207" dir="0" index="0" bw="64" slack="1"/>
<pin id="208" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opset="tmp_13 "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="34"><net_src comp="12" pin="0"/><net_sink comp="30" pin=0"/></net>

<net id="35"><net_src comp="8" pin="0"/><net_sink comp="30" pin=1"/></net>

<net id="40"><net_src comp="12" pin="0"/><net_sink comp="36" pin=0"/></net>

<net id="41"><net_src comp="6" pin="0"/><net_sink comp="36" pin=1"/></net>

<net id="46"><net_src comp="12" pin="0"/><net_sink comp="42" pin=0"/></net>

<net id="47"><net_src comp="4" pin="0"/><net_sink comp="42" pin=1"/></net>

<net id="52"><net_src comp="12" pin="0"/><net_sink comp="48" pin=0"/></net>

<net id="53"><net_src comp="10" pin="0"/><net_sink comp="48" pin=1"/></net>

<net id="58"><net_src comp="12" pin="0"/><net_sink comp="54" pin=0"/></net>

<net id="59"><net_src comp="0" pin="0"/><net_sink comp="54" pin=1"/></net>

<net id="64"><net_src comp="12" pin="0"/><net_sink comp="60" pin=0"/></net>

<net id="65"><net_src comp="2" pin="0"/><net_sink comp="60" pin=1"/></net>

<net id="71"><net_src comp="42" pin="2"/><net_sink comp="67" pin=0"/></net>

<net id="72"><net_src comp="60" pin="2"/><net_sink comp="67" pin=1"/></net>

<net id="77"><net_src comp="36" pin="2"/><net_sink comp="73" pin=0"/></net>

<net id="78"><net_src comp="36" pin="2"/><net_sink comp="73" pin=1"/></net>

<net id="79"><net_src comp="16" pin="0"/><net_sink comp="73" pin=1"/></net>

<net id="84"><net_src comp="48" pin="2"/><net_sink comp="80" pin=1"/></net>

<net id="89"><net_src comp="54" pin="2"/><net_sink comp="73" pin=1"/></net>

<net id="94"><net_src comp="22" pin="0"/><net_sink comp="90" pin=1"/></net>

<net id="99"><net_src comp="14" pin="0"/><net_sink comp="95" pin=0"/></net>

<net id="100"><net_src comp="30" pin="2"/><net_sink comp="95" pin=1"/></net>

<net id="105"><net_src comp="20" pin="0"/><net_sink comp="101" pin=0"/></net>

<net id="109"><net_src comp="73" pin="2"/><net_sink comp="106" pin=0"/></net>

<net id="110"><net_src comp="106" pin="1"/><net_sink comp="73" pin=0"/></net>

<net id="111"><net_src comp="106" pin="1"/><net_sink comp="67" pin=1"/></net>

<net id="112"><net_src comp="106" pin="1"/><net_sink comp="80" pin=0"/></net>

<net id="113"><net_src comp="106" pin="1"/><net_sink comp="67" pin=0"/></net>

<net id="117"><net_src comp="67" pin="2"/><net_sink comp="114" pin=0"/></net>

<net id="118"><net_src comp="114" pin="1"/><net_sink comp="73" pin=0"/></net>

<net id="119"><net_src comp="114" pin="1"/><net_sink comp="101" pin=1"/></net>

<net id="120"><net_src comp="114" pin="1"/><net_sink comp="90" pin=0"/></net>

<net id="124"><net_src comp="101" pin="2"/><net_sink comp="121" pin=0"/></net>

<net id="125"><net_src comp="121" pin="1"/><net_sink comp="73" pin=0"/></net>

<net id="133"><net_src comp="126" pin="1"/><net_sink comp="129" pin=0"/></net>

<net id="134"><net_src comp="18" pin="0"/><net_sink comp="129" pin=1"/></net>

<net id="138"><net_src comp="135" pin="1"/><net_sink comp="85" pin=0"/></net>

<net id="144"><net_src comp="90" pin="2"/><net_sink comp="139" pin=0"/></net>

<net id="145"><net_src comp="22" pin="0"/><net_sink comp="139" pin=1"/></net>

<net id="146"><net_src comp="114" pin="1"/><net_sink comp="139" pin=2"/></net>

<net id="150"><net_src comp="30" pin="2"/><net_sink comp="147" pin=0"/></net>

<net id="151"><net_src comp="147" pin="1"/><net_sink comp="95" pin=1"/></net>

<net id="152"><net_src comp="147" pin="1"/><net_sink comp="73" pin=1"/></net>

<net id="153"><net_src comp="147" pin="1"/><net_sink comp="85" pin=1"/></net>

<net id="157"><net_src comp="36" pin="2"/><net_sink comp="154" pin=0"/></net>

<net id="158"><net_src comp="154" pin="1"/><net_sink comp="73" pin=0"/></net>

<net id="159"><net_src comp="154" pin="1"/><net_sink comp="73" pin=1"/></net>

<net id="163"><net_src comp="95" pin="2"/><net_sink comp="160" pin=0"/></net>

<net id="164"><net_src comp="160" pin="1"/><net_sink comp="73" pin=0"/></net>

<net id="168"><net_src comp="42" pin="2"/><net_sink comp="165" pin=0"/></net>

<net id="169"><net_src comp="165" pin="1"/><net_sink comp="67" pin=0"/></net>

<net id="170"><net_src comp="165" pin="1"/><net_sink comp="126" pin=0"/></net>

<net id="174"><net_src comp="129" pin="2"/><net_sink comp="171" pin=0"/></net>

<net id="175"><net_src comp="171" pin="1"/><net_sink comp="135" pin=0"/></net>

<net id="179"><net_src comp="48" pin="2"/><net_sink comp="176" pin=0"/></net>

<net id="180"><net_src comp="176" pin="1"/><net_sink comp="80" pin=1"/></net>

<net id="184"><net_src comp="135" pin="1"/><net_sink comp="181" pin=0"/></net>

<net id="185"><net_src comp="181" pin="1"/><net_sink comp="85" pin=0"/></net>

<net id="189"><net_src comp="80" pin="2"/><net_sink comp="186" pin=0"/></net>

<net id="190"><net_src comp="186" pin="1"/><net_sink comp="67" pin=1"/></net>

<net id="194"><net_src comp="85" pin="2"/><net_sink comp="191" pin=0"/></net>

<net id="195"><net_src comp="191" pin="1"/><net_sink comp="101" pin=1"/></net>

<net id="199"><net_src comp="54" pin="2"/><net_sink comp="196" pin=0"/></net>

<net id="200"><net_src comp="196" pin="1"/><net_sink comp="73" pin=1"/></net>

<net id="204"><net_src comp="60" pin="2"/><net_sink comp="201" pin=0"/></net>

<net id="205"><net_src comp="201" pin="1"/><net_sink comp="67" pin=1"/></net>

<net id="209"><net_src comp="139" pin="3"/><net_sink comp="206" pin=0"/></net>

<net id="210"><net_src comp="206" pin="1"/><net_sink comp="73" pin=1"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
		tmp_9_neg : 1
	State 38
		tmp_s : 1
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78
	State 79
	State 80
		tmp_13 : 1
	State 81
	State 82
	State 83
	State 84
	State 85
	State 86
		stg_238 : 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|----------------------------------------|---------|---------|---------|
| Operation|             Functional Unit            |  DSP48E |    FF   |   LUT   |
|----------|----------------------------------------|---------|---------|---------|
|   dexp   |               grp_fu_101               |    26   |   1549  |   2599  |
|----------|----------------------------------------|---------|---------|---------|
|   dsqrt  |                grp_fu_95               |    0    |   1832  |   2180  |
|----------|----------------------------------------|---------|---------|---------|
|          |                grp_fu_73               |    11   |   317   |   578   |
|   dmul   |                grp_fu_80               |    11   |   317   |   578   |
|          |                grp_fu_85               |    11   |   317   |   578   |
|----------|----------------------------------------|---------|---------|---------|
|   dadd   |                grp_fu_67               |    3    |   445   |   1149  |
|----------|----------------------------------------|---------|---------|---------|
|   dcmp   |                grp_fu_90               |    0    |   130   |   469   |
|----------|----------------------------------------|---------|---------|---------|
|    xor   |            tmp_9_neg_fu_129            |    0    |    0    |    87   |
|----------|----------------------------------------|---------|---------|---------|
|  select  |              tmp_13_fu_139             |    0    |    0    |    64   |
|----------|----------------------------------------|---------|---------|---------|
|          |            T_read_read_fu_30           |    0    |    0    |    0    |
|          |          sigma_read_read_fu_36         |    0    |    0    |    0    |
|   read   |            r_read_read_fu_42           |    0    |    0    |    0    |
|          | gaussian_random_number_read_read_fu_48 |    0    |    0    |    0    |
|          |            S_read_read_fu_54           |    0    |    0    |    0    |
|          |            E_read_read_fu_60           |    0    |    0    |    0    |
|----------|----------------------------------------|---------|---------|---------|
|   Total  |                                        |    62   |   4907  |   8282  |
|----------|----------------------------------------|---------|---------|---------|

Memories:
N/A

* Register list:
+-----------------------------------+--------+
|                                   |   FF   |
+-----------------------------------+--------+
|           E_read_reg_201          |   64   |
|           S_read_reg_196          |   64   |
|           T_read_reg_147          |   64   |
|gaussian_random_number_read_reg_176|   64   |
|           r_read_reg_165          |   64   |
|              reg_106              |   64   |
|              reg_114              |   64   |
|              reg_121              |   64   |
|         sigma_read_reg_154        |   64   |
|           tmp_13_reg_206          |   64   |
|           tmp_4_reg_160           |   64   |
|           tmp_6_reg_186           |   64   |
|         tmp_9_neg_reg_171         |   64   |
|           tmp_9_reg_181           |   64   |
|           tmp_s_reg_191           |   64   |
+-----------------------------------+--------+
|               Total               |   960  |
+-----------------------------------+--------+

* Multiplexer (MUX) list: 
|------------|------|------|------|--------||---------||---------|
|    Comp    |  Pin | Size |  BW  | S x BW ||  Delay  ||   LUT   |
|------------|------|------|------|--------||---------||---------|
|  grp_fu_67 |  p0  |   3  |  64  |   192  ||    64   |
|  grp_fu_67 |  p1  |   4  |  64  |   256  ||    64   |
|  grp_fu_73 |  p0  |   6  |  64  |   384  ||    64   |
|  grp_fu_73 |  p1  |   7  |  64  |   448  ||    64   |
|  grp_fu_80 |  p1  |   2  |  64  |   128  ||    64   |
|  grp_fu_85 |  p0  |   2  |  64  |   128  ||    64   |
|  grp_fu_95 |  p1  |   2  |  64  |   128  ||    64   |
| grp_fu_101 |  p1  |   2  |  64  |   128  ||    64   |
|------------|------|------|------|--------||---------||---------|
|    Total   |      |      |      |  1792  ||  13.747 ||   512   |
|------------|------|------|------|--------||---------||---------|



* Summary:
+-----------+--------+--------+--------+--------+
|           | DSP48E |  Delay |   FF   |   LUT  |
+-----------+--------+--------+--------+--------+
|  Function |   62   |    -   |  4907  |  8282  |
|   Memory  |    -   |    -   |    -   |    -   |
|Multiplexer|    -   |   13   |    -   |   512  |
|  Register |    -   |    -   |   960  |    -   |
+-----------+--------+--------+--------+--------+
|   Total   |   62   |   13   |  5867  |  8794  |
+-----------+--------+--------+--------+--------+
