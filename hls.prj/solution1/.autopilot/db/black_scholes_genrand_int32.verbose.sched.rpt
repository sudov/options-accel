

================================================================
== Vivado HLS Report for 'black_scholes_genrand_int32'
================================================================
* Date:           Sat Nov 22 14:31:23 2014

* Version:        2014.2 (Build 932637 on Wed Jun 11 12:38:34 PM 2014)
* Project:        hls.prj
* Solution:       solution1
* Product family: zynq zynq_fpv6 
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |  10.00|      8.52|        1.25|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+------+-----+------+---------+
    |   Latency  |  Interval  | Pipeline|
    | min |  max | min |  max |   Type  |
    +-----+------+-----+------+---------+
    |    3|  7483|    3|  7483|   none  |
    +-----+------+-----+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+------+------+----------+-----------+-----------+------+----------+
        |          |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+------+------+----------+-----------+-----------+------+----------+
        |- Loop 1  |  5607|  5607|         9|          -|          -|   623|    no    |
        |- Loop 2  |   681|   681|         3|          -|          -|   227|    no    |
        |- Loop 3  |  1188|  1188|         3|          -|          -|   396|    no    |
        +----------+------+------+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 20
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	18  / (!tmp)
	2  / (tmp)
2 --> 
	3  / (tmp_s & !exitcond_i)
	11  / (!tmp_s) | (exitcond_i)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	2  / true
11 --> 
	12  / (!exitcond1)
	14  / (exitcond1)
12 --> 
	13  / true
13 --> 
	11  / true
14 --> 
	15  / (!exitcond)
	17  / (exitcond)
15 --> 
	16  / true
16 --> 
	14  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
* FSM state operations: 

 <State 1>: 4.09ns
ST_1: mti_load [1/1] 0.00ns
:0  %mti_load = load i32* @mti, align 4

ST_1: tmp [1/1] 2.52ns
:1  %tmp = icmp sgt i32 %mti_load, 623

ST_1: stg_23 [1/1] 1.57ns
:2  br i1 %tmp, label %1, label %._crit_edge

ST_1: tmp_s [1/1] 2.52ns
:0  %tmp_s = icmp eq i32 %mti_load, 625

ST_1: stg_25 [1/1] 0.00ns
:1  br i1 %tmp_s, label %2, label %._crit_edge2

ST_1: stg_26 [1/1] 2.39ns
:0  store i64 5489, i64* getelementptr inbounds ([624 x i64]* @mt, i64 0, i64 0), align 16

ST_1: stg_27 [1/1] 1.39ns
:1  br label %3


 <State 2>: 4.23ns
ST_2: tmp_1_i [1/1] 0.00ns
:0  %tmp_1_i = phi i10 [ 1, %2 ], [ %tmp_2_i, %4 ]

ST_2: tmp_1_i_cast [1/1] 0.00ns
:1  %tmp_1_i_cast = zext i10 %tmp_1_i to i32

ST_2: stg_30 [1/1] 1.66ns
:2  store i32 %tmp_1_i_cast, i32* @mti, align 4

ST_2: exitcond_i [1/1] 2.07ns
:3  %exitcond_i = icmp eq i10 %tmp_1_i, -400

ST_2: empty [1/1] 0.00ns
:4  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 623, i64 623, i64 623) nounwind

ST_2: stg_33 [1/1] 0.00ns
:5  br i1 %exitcond_i, label %._crit_edge2, label %4

ST_2: tmp_3_i [1/1] 1.84ns
:0  %tmp_3_i = add i10 %tmp_1_i, -1

ST_2: tmp_4_i [1/1] 0.00ns
:1  %tmp_4_i = zext i10 %tmp_3_i to i64

ST_2: mt_addr_11 [1/1] 0.00ns
:2  %mt_addr_11 = getelementptr inbounds [624 x i64]* @mt, i64 0, i64 %tmp_4_i

ST_2: mt_load_14 [2/2] 2.39ns
:3  %mt_load_14 = load i64* %mt_addr_11, align 8

ST_2: stg_38 [1/1] 1.39ns
._crit_edge2:0  br label %5


 <State 3>: 3.76ns
ST_3: mt_load_14 [1/2] 2.39ns
:3  %mt_load_14 = load i64* %mt_addr_11, align 8

ST_3: tmp_34 [1/1] 0.00ns
:4  %tmp_34 = call i32 @_ssdm_op_PartSelect.i32.i64.i32.i32(i64 %mt_load_14, i32 30, i32 61)

ST_3: tmp_35 [1/1] 0.00ns
:5  %tmp_35 = trunc i64 %mt_load_14 to i32

ST_3: tmp_40 [1/1] 1.37ns
:6  %tmp_40 = xor i32 %tmp_34, %tmp_35


 <State 4>: 6.08ns
ST_4: tmp_28 [6/6] 6.08ns
:8  %tmp_28 = mul i32 %tmp_40, 1812433253


 <State 5>: 6.08ns
ST_5: tmp_28 [5/6] 6.08ns
:8  %tmp_28 = mul i32 %tmp_40, 1812433253


 <State 6>: 6.08ns
ST_6: tmp_28 [4/6] 6.08ns
:8  %tmp_28 = mul i32 %tmp_40, 1812433253


 <State 7>: 6.08ns
ST_7: tmp_28 [3/6] 6.08ns
:8  %tmp_28 = mul i32 %tmp_40, 1812433253


 <State 8>: 6.08ns
ST_8: tmp_28 [2/6] 6.08ns
:8  %tmp_28 = mul i32 %tmp_40, 1812433253


 <State 9>: 8.52ns
ST_9: tmp_28 [1/6] 6.08ns
:8  %tmp_28 = mul i32 %tmp_40, 1812433253

ST_9: tmp_9_i_cast [1/1] 2.44ns
:9  %tmp_9_i_cast = add i32 %tmp_28, %tmp_1_i_cast


 <State 10>: 2.39ns
ST_10: tmp_8_i [1/1] 0.00ns
:7  %tmp_8_i = zext i10 %tmp_1_i to i64

ST_10: mt_addr_12 [1/1] 0.00ns
:10  %mt_addr_12 = getelementptr inbounds [624 x i64]* @mt, i64 0, i64 %tmp_8_i

ST_10: tmp_i_cast [1/1] 0.00ns
:11  %tmp_i_cast = zext i32 %tmp_9_i_cast to i64

ST_10: stg_53 [1/1] 2.39ns
:12  store i64 %tmp_i_cast, i64* %mt_addr_12, align 8

ST_10: tmp_2_i [1/1] 1.84ns
:13  %tmp_2_i = add i10 %tmp_1_i, 1

ST_10: stg_55 [1/1] 0.00ns
:14  br label %3


 <State 11>: 4.11ns
ST_11: kk [1/1] 0.00ns
:0  %kk = phi i8 [ 0, %._crit_edge2 ], [ %tmp_26, %6 ]

ST_11: kk_cast7 [1/1] 0.00ns
:1  %kk_cast7 = zext i8 %kk to i10

ST_11: exitcond1 [1/1] 2.00ns
:2  %exitcond1 = icmp eq i8 %kk, -29

ST_11: empty_100 [1/1] 0.00ns
:3  %empty_100 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 227, i64 227, i64 227) nounwind

ST_11: tmp_26 [1/1] 1.72ns
:4  %tmp_26 = add i8 %kk, 1

ST_11: stg_61 [1/1] 1.39ns
:5  br i1 %exitcond1, label %.preheader, label %6

ST_11: tmp_24 [1/1] 0.00ns
:0  %tmp_24 = zext i8 %kk to i64

ST_11: mt_addr [1/1] 0.00ns
:1  %mt_addr = getelementptr inbounds [624 x i64]* @mt, i64 0, i64 %tmp_24

ST_11: mt_load [2/2] 2.39ns
:2  %mt_load = load i64* %mt_addr, align 8

ST_11: tmp_27 [1/1] 0.00ns
:4  %tmp_27 = zext i8 %tmp_26 to i64

ST_11: mt_addr_5 [1/1] 0.00ns
:5  %mt_addr_5 = getelementptr inbounds [624 x i64]* @mt, i64 0, i64 %tmp_27

ST_11: mt_load_6 [2/2] 2.39ns
:6  %mt_load_6 = load i64* %mt_addr_5, align 8


 <State 12>: 4.23ns
ST_12: mt_load [1/2] 2.39ns
:2  %mt_load = load i64* %mt_addr, align 8

ST_12: tmp_46 [1/1] 0.00ns
:3  %tmp_46 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %mt_load, i32 31)

ST_12: mt_load_6 [1/2] 2.39ns
:6  %mt_load_6 = load i64* %mt_addr_5, align 8

ST_12: tmp_29 [1/1] 1.84ns
:7  %tmp_29 = add i10 %kk_cast7, 397

ST_12: tmp_30 [1/1] 0.00ns
:8  %tmp_30 = zext i10 %tmp_29 to i64

ST_12: mt_addr_6 [1/1] 0.00ns
:9  %mt_addr_6 = getelementptr inbounds [624 x i64]* @mt, i64 0, i64 %tmp_30

ST_12: mt_load_7 [2/2] 2.39ns
:10  %mt_load_7 = load i64* %mt_addr_6, align 8

ST_12: tmp_37 [1/1] 0.00ns
:11  %tmp_37 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %mt_load_6, i32 1, i32 30)

ST_12: tmp_56 [1/1] 0.00ns
:14  %tmp_56 = trunc i64 %mt_load_6 to i1


 <State 13>: 7.52ns
ST_13: mt_load_7 [1/2] 2.39ns
:10  %mt_load_7 = load i64* %mt_addr_6, align 8

ST_13: tmp_31 [1/1] 0.00ns
:12  %tmp_31 = call i31 @_ssdm_op_BitConcatenate.i31.i1.i30(i1 %tmp_46, i30 %tmp_37)

ST_13: tmp_31_cast [1/1] 0.00ns
:13  %tmp_31_cast = zext i31 %tmp_31 to i64

ST_13: mag01_load_phi_cast_cast [1/1] 1.37ns
:15  %mag01_load_phi_cast_cast = select i1 %tmp_56, i64 2567483615, i64 0

ST_13: tmp1 [1/1] 1.37ns
:16  %tmp1 = xor i64 %mt_load_7, %mag01_load_phi_cast_cast

ST_13: tmp_32 [1/1] 1.37ns
:17  %tmp_32 = xor i64 %tmp1, %tmp_31_cast

ST_13: stg_83 [1/1] 2.39ns
:18  store i64 %tmp_32, i64* %mt_addr, align 8

ST_13: stg_84 [1/1] 0.00ns
:19  br label %5


 <State 14>: 4.23ns
ST_14: kk_1 [1/1] 0.00ns
.preheader:0  %kk_1 = phi i10 [ %kk_2, %7 ], [ 227, %5 ]

ST_14: exitcond [1/1] 2.07ns
.preheader:1  %exitcond = icmp eq i10 %kk_1, -401

ST_14: empty_101 [1/1] 0.00ns
.preheader:2  %empty_101 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 396, i64 396, i64 396) nounwind

ST_14: stg_88 [1/1] 0.00ns
.preheader:3  br i1 %exitcond, label %8, label %7

ST_14: tmp_38 [1/1] 0.00ns
:0  %tmp_38 = zext i10 %kk_1 to i64

ST_14: mt_addr_7 [1/1] 0.00ns
:1  %mt_addr_7 = getelementptr inbounds [624 x i64]* @mt, i64 0, i64 %tmp_38

ST_14: mt_load_11 [2/2] 2.39ns
:2  %mt_load_11 = load i64* %mt_addr_7, align 8

ST_14: kk_2 [1/1] 1.84ns
:4  %kk_2 = add i10 %kk_1, 1

ST_14: tmp_39 [1/1] 0.00ns
:5  %tmp_39 = zext i10 %kk_2 to i64

ST_14: mt_addr_8 [1/1] 0.00ns
:6  %mt_addr_8 = getelementptr inbounds [624 x i64]* @mt, i64 0, i64 %tmp_39

ST_14: mt_load_12 [2/2] 2.39ns
:7  %mt_load_12 = load i64* %mt_addr_8, align 8

ST_14: tmp_62 [1/1] 0.00ns
:8  %tmp_62 = trunc i10 %kk_1 to i9

ST_14: mt_load_8 [2/2] 2.39ns
:0  %mt_load_8 = load i64* getelementptr inbounds ([624 x i64]* @mt, i64 0, i64 623), align 8

ST_14: mt_load_9 [2/2] 2.39ns
:2  %mt_load_9 = load i64* getelementptr inbounds ([624 x i64]* @mt, i64 0, i64 0), align 16

ST_14: stg_99 [1/1] 1.66ns
:12  store i32 0, i32* @mti, align 4


 <State 15>: 4.23ns
ST_15: mt_load_11 [1/2] 2.39ns
:2  %mt_load_11 = load i64* %mt_addr_7, align 8

ST_15: tmp_60 [1/1] 0.00ns
:3  %tmp_60 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %mt_load_11, i32 31)

ST_15: mt_load_12 [1/2] 2.39ns
:7  %mt_load_12 = load i64* %mt_addr_8, align 8

ST_15: tmp_41 [1/1] 1.84ns
:9  %tmp_41 = add i9 %tmp_62, -227

ST_15: tmp_43 [1/1] 0.00ns
:10  %tmp_43 = zext i9 %tmp_41 to i64

ST_15: mt_addr_9 [1/1] 0.00ns
:11  %mt_addr_9 = getelementptr inbounds [624 x i64]* @mt, i64 0, i64 %tmp_43

ST_15: mt_load_13 [2/2] 2.39ns
:12  %mt_load_13 = load i64* %mt_addr_9, align 8

ST_15: tmp_52 [1/1] 0.00ns
:13  %tmp_52 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %mt_load_12, i32 1, i32 30)

ST_15: tmp_63 [1/1] 0.00ns
:16  %tmp_63 = trunc i64 %mt_load_12 to i1


 <State 16>: 7.52ns
ST_16: mt_load_13 [1/2] 2.39ns
:12  %mt_load_13 = load i64* %mt_addr_9, align 8

ST_16: tmp_44 [1/1] 0.00ns
:14  %tmp_44 = call i31 @_ssdm_op_BitConcatenate.i31.i1.i30(i1 %tmp_60, i30 %tmp_52)

ST_16: tmp_45_cast [1/1] 0.00ns
:15  %tmp_45_cast = zext i31 %tmp_44 to i64

ST_16: mag01_load_2_phi_cast_cast [1/1] 1.37ns
:17  %mag01_load_2_phi_cast_cast = select i1 %tmp_63, i64 2567483615, i64 0

ST_16: tmp2 [1/1] 1.37ns
:18  %tmp2 = xor i64 %mt_load_13, %mag01_load_2_phi_cast_cast

ST_16: tmp_45 [1/1] 1.37ns
:19  %tmp_45 = xor i64 %tmp2, %tmp_45_cast

ST_16: stg_115 [1/1] 2.39ns
:20  store i64 %tmp_45, i64* %mt_addr_7, align 8

ST_16: stg_116 [1/1] 0.00ns
:21  br label %.preheader


 <State 17>: 2.39ns
ST_17: mt_load_8 [1/2] 2.39ns
:0  %mt_load_8 = load i64* getelementptr inbounds ([624 x i64]* @mt, i64 0, i64 623), align 8

ST_17: tmp_57 [1/1] 0.00ns
:1  %tmp_57 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %mt_load_8, i32 31)

ST_17: mt_load_9 [1/2] 2.39ns
:2  %mt_load_9 = load i64* getelementptr inbounds ([624 x i64]* @mt, i64 0, i64 0), align 16

ST_17: mt_load_10 [2/2] 2.39ns
:3  %mt_load_10 = load i64* getelementptr inbounds ([624 x i64]* @mt, i64 0, i64 396), align 16

ST_17: tmp_42 [1/1] 0.00ns
:4  %tmp_42 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %mt_load_9, i32 1, i32 30)

ST_17: tmp_59 [1/1] 0.00ns
:7  %tmp_59 = trunc i64 %mt_load_9 to i1


 <State 18>: 7.52ns
ST_18: mt_load_10 [1/2] 2.39ns
:3  %mt_load_10 = load i64* getelementptr inbounds ([624 x i64]* @mt, i64 0, i64 396), align 16

ST_18: tmp_33 [1/1] 0.00ns
:5  %tmp_33 = call i31 @_ssdm_op_BitConcatenate.i31.i1.i30(i1 %tmp_57, i30 %tmp_42)

ST_18: tmp_36_cast [1/1] 0.00ns
:6  %tmp_36_cast = zext i31 %tmp_33 to i64

ST_18: mag01_load_1_phi_cast_cast [1/1] 1.37ns
:8  %mag01_load_1_phi_cast_cast = select i1 %tmp_59, i64 2567483615, i64 0

ST_18: tmp3 [1/1] 1.37ns
:9  %tmp3 = xor i64 %mt_load_10, %mag01_load_1_phi_cast_cast

ST_18: tmp_36 [1/1] 1.37ns
:10  %tmp_36 = xor i64 %tmp3, %tmp_36_cast

ST_18: stg_129 [1/1] 2.39ns
:11  store i64 %tmp_36, i64* getelementptr inbounds ([624 x i64]* @mt, i64 0, i64 623), align 8

ST_18: stg_130 [1/1] 1.57ns
:13  br label %._crit_edge


 <State 19>: 4.09ns
ST_19: tmp_47 [1/1] 0.00ns
._crit_edge:0  %tmp_47 = phi i32 [ 0, %8 ], [ %mti_load, %0 ]

ST_19: tmp_48 [1/1] 2.44ns
._crit_edge:1  %tmp_48 = add nsw i32 %tmp_47, 1

ST_19: stg_133 [1/1] 1.66ns
._crit_edge:2  store i32 %tmp_48, i32* @mti, align 4

ST_19: tmp_49 [1/1] 0.00ns
._crit_edge:3  %tmp_49 = sext i32 %tmp_47 to i64

ST_19: mt_addr_10 [1/1] 0.00ns
._crit_edge:4  %mt_addr_10 = getelementptr inbounds [624 x i64]* @mt, i64 0, i64 %tmp_49

ST_19: y [2/2] 2.39ns
._crit_edge:5  %y = load i64* %mt_addr_10, align 8


 <State 20>: 7.87ns
ST_20: y [1/2] 2.39ns
._crit_edge:5  %y = load i64* %mt_addr_10, align 8

ST_20: tmp_50 [1/1] 0.00ns
._crit_edge:6  %tmp_50 = call i53 @_ssdm_op_PartSelect.i53.i64.i32.i32(i64 %y, i32 11, i32 63)

ST_20: tmp_54 [1/1] 0.00ns
._crit_edge:7  %tmp_54 = zext i53 %tmp_50 to i64

ST_20: y_1 [1/1] 1.37ns
._crit_edge:8  %y_1 = xor i64 %tmp_54, %y

ST_20: tmp_65 [1/1] 0.00ns
._crit_edge:9  %tmp_65 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %y_1, i32 24)

ST_20: tmp_58 [1/1] 0.00ns
._crit_edge:10  %tmp_58 = call i3 @_ssdm_op_PartSelect.i3.i64.i32.i32(i64 %y_1, i32 19, i32 21)

ST_20: tmp_70 [1/1] 0.00ns
._crit_edge:11  %tmp_70 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %y_1, i32 17)

ST_20: tmp_71 [1/1] 0.00ns
._crit_edge:12  %tmp_71 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %y_1, i32 14)

ST_20: tmp_61 [1/1] 0.00ns
._crit_edge:13  %tmp_61 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %y_1, i32 11, i32 12)

ST_20: tmp_72 [1/1] 0.00ns
._crit_edge:14  %tmp_72 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %y_1, i32 7)

ST_20: tmp_73 [1/1] 0.00ns
._crit_edge:15  %tmp_73 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %y_1, i32 5)

ST_20: tmp_64 [1/1] 0.00ns
._crit_edge:16  %tmp_64 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %y_1, i32 2, i32 3)

ST_20: tmp_74 [1/1] 0.00ns
._crit_edge:17  %tmp_74 = trunc i64 %y_1 to i1

ST_20: tmp_51 [1/1] 0.00ns
._crit_edge:18  %tmp_51 = call i32 @_ssdm_op_BitConcatenate.i32.i1.i2.i3.i1.i1.i2.i1.i1.i2.i3.i1.i1.i1.i1.i2.i1.i1.i7(i1 %tmp_65, i2 0, i3 %tmp_58, i1 false, i1 %tmp_70, i2 0, i1 %tmp_71, i1 false, i2 %tmp_61, i3 0, i1 %tmp_72, i1 false, i1 %tmp_73, i1 false, i2 %tmp_64, i1 false, i1 %tmp_74, i7 0)

ST_20: tmp_53_cast [1/1] 0.00ns
._crit_edge:19  %tmp_53_cast = zext i32 %tmp_51 to i64

ST_20: y_2 [1/1] 1.37ns
._crit_edge:20  %y_2 = xor i64 %tmp_53_cast, %y_1

ST_20: tmp_66 [1/1] 0.00ns
._crit_edge:21  %tmp_66 = call i3 @_ssdm_op_PartSelect.i3.i64.i32.i32(i64 %y_2, i32 14, i32 16)

ST_20: tmp_67 [1/1] 0.00ns
._crit_edge:22  %tmp_67 = call i6 @_ssdm_op_PartSelect.i6.i64.i32.i32(i64 %y_2, i32 7, i32 12)

ST_20: tmp_68 [1/1] 0.00ns
._crit_edge:23  %tmp_68 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %y_2, i32 2, i32 3)

ST_20: tmp_53 [1/1] 0.00ns
._crit_edge:24  %tmp_53 = call i32 @_ssdm_op_BitConcatenate.i32.i3.i1.i6.i3.i2.i17(i3 %tmp_66, i1 false, i6 %tmp_67, i3 0, i2 %tmp_68, i17 0)

ST_20: tmp_55_cast [1/1] 0.00ns
._crit_edge:25  %tmp_55_cast = zext i32 %tmp_53 to i64

ST_20: y_3 [1/1] 1.37ns
._crit_edge:26  %y_3 = xor i64 %tmp_55_cast, %y_2

ST_20: tmp_55 [1/1] 0.00ns
._crit_edge:27  %tmp_55 = call i46 @_ssdm_op_PartSelect.i46.i64.i32.i32(i64 %y_3, i32 18, i32 63)

ST_20: tmp_69 [1/1] 0.00ns
._crit_edge:28  %tmp_69 = zext i46 %tmp_55 to i64

ST_20: y_4 [1/1] 1.37ns
._crit_edge:29  %y_4 = xor i64 %tmp_69, %y_3

ST_20: stg_162 [1/1] 0.00ns
._crit_edge:30  ret i64 %y_4



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
