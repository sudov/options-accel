// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.2
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module black_scholes_init_by_array (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        mti,
        mti_ap_vld,
        mt_address0,
        mt_ce0,
        mt_we0,
        mt_d0,
        mt_q0
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 6'b000000;
parameter    ap_ST_st2_fsm_1 = 6'b1;
parameter    ap_ST_st3_fsm_2 = 6'b10;
parameter    ap_ST_st4_fsm_3 = 6'b11;
parameter    ap_ST_st5_fsm_4 = 6'b100;
parameter    ap_ST_st6_fsm_5 = 6'b101;
parameter    ap_ST_st7_fsm_6 = 6'b110;
parameter    ap_ST_st8_fsm_7 = 6'b111;
parameter    ap_ST_st9_fsm_8 = 6'b1000;
parameter    ap_ST_st10_fsm_9 = 6'b1001;
parameter    ap_ST_st11_fsm_10 = 6'b1010;
parameter    ap_ST_st12_fsm_11 = 6'b1011;
parameter    ap_ST_st13_fsm_12 = 6'b1100;
parameter    ap_ST_st14_fsm_13 = 6'b1101;
parameter    ap_ST_st15_fsm_14 = 6'b1110;
parameter    ap_ST_st16_fsm_15 = 6'b1111;
parameter    ap_ST_st17_fsm_16 = 6'b10000;
parameter    ap_ST_st18_fsm_17 = 6'b10001;
parameter    ap_ST_st19_fsm_18 = 6'b10010;
parameter    ap_ST_st20_fsm_19 = 6'b10011;
parameter    ap_ST_st21_fsm_20 = 6'b10100;
parameter    ap_ST_st22_fsm_21 = 6'b10101;
parameter    ap_ST_st23_fsm_22 = 6'b10110;
parameter    ap_ST_st24_fsm_23 = 6'b10111;
parameter    ap_ST_st25_fsm_24 = 6'b11000;
parameter    ap_ST_st26_fsm_25 = 6'b11001;
parameter    ap_ST_st27_fsm_26 = 6'b11010;
parameter    ap_ST_st28_fsm_27 = 6'b11011;
parameter    ap_ST_st29_fsm_28 = 6'b11100;
parameter    ap_ST_st30_fsm_29 = 6'b11101;
parameter    ap_ST_st31_fsm_30 = 6'b11110;
parameter    ap_ST_st32_fsm_31 = 6'b11111;
parameter    ap_ST_st33_fsm_32 = 6'b100000;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv10_1 = 10'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv10_270 = 10'b1001110000;
parameter    ap_const_lv10_26F = 10'b1001101111;
parameter    ap_const_lv64_12BD6AA = 64'b1001010111101011010101010;
parameter    ap_const_lv64_80000000 = 64'b10000000000000000000000000000000;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv10_3FF = 10'b1111111111;
parameter    ap_const_lv32_3D = 32'b111101;
parameter    ap_const_lv32_6C078965 = 32'b1101100000001111000100101100101;
parameter    ap_const_lv32_FFFFFFFF = 32'b11111111111111111111111111111111;
parameter    ap_const_lv64_19660D = 64'b110010110011000001101;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv11_123 = 11'b100100011;
parameter    ap_const_lv11_345 = 11'b1101000101;
parameter    ap_const_lv11_234 = 11'b1000110100;
parameter    ap_const_lv11_456 = 11'b10001010110;
parameter    ap_const_lv32_26F = 32'b1001101111;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv30_1 = 30'b1;
parameter    ap_const_lv64_5D588B65 = 64'b1011101010110001000101101100101;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] mti;
output   mti_ap_vld;
output  [9:0] mt_address0;
output   mt_ce0;
output   mt_we0;
output  [63:0] mt_d0;
input  [63:0] mt_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg mti_ap_vld;
reg[9:0] mt_address0;
reg mt_ce0;
reg mt_we0;
reg[63:0] mt_d0;
reg   [5:0] ap_CS_fsm = 6'b000000;
wire   [31:0] tmp_1_i_cast_fu_240_p1;
reg   [31:0] tmp_1_i_cast_reg_552;
wire   [0:0] exitcond_i_fu_250_p2;
wire   [31:0] tmp_18_fu_281_p2;
reg   [31:0] tmp_18_reg_565;
wire   [31:0] tmp_9_i_cast_fu_292_p2;
reg   [31:0] tmp_9_i_cast_reg_570;
wire   [9:0] tmp_2_i_fu_306_p2;
wire   [0:0] tmp_fu_312_p2;
wire   [63:0] tmp_7_fu_333_p2;
reg   [63:0] tmp_7_reg_588;
reg   [9:0] mt_addr_reg_593;
wire   [31:0] tmp_25_fu_355_p1;
reg   [31:0] tmp_25_reg_598;
wire   [31:0] i_4_fu_431_p2;
wire   [31:0] j_1_fu_437_p2;
reg   [31:0] j_1_reg_608;
wire   [0:0] tmp_21_fu_443_p2;
reg   [0:0] tmp_21_reg_614;
wire   [31:0] p_s_fu_464_p3;
reg   [31:0] p_s_reg_618;
wire   [9:0] k_2_fu_471_p2;
reg   [9:0] k_2_reg_623;
wire   [0:0] tmp_3_fu_477_p2;
wire   [63:0] tmp_13_fu_498_p2;
reg   [63:0] tmp_13_reg_636;
reg   [9:0] mt_addr_3_reg_641;
wire   [31:0] tmp_27_fu_520_p1;
reg   [31:0] tmp_27_reg_646;
wire   [31:0] i_5_fu_534_p2;
wire   [0:0] tmp_22_fu_540_p2;
reg   [0:0] tmp_22_reg_656;
wire   [9:0] k_3_fu_546_p2;
reg   [9:0] tmp_1_i_reg_133;
reg   [31:0] i_reg_145;
reg   [31:0] j_reg_157;
reg   [9:0] k_reg_169;
reg   [31:0] i_1_reg_181;
reg   [31:0] i_3_phi_fu_221_p4;
reg   [31:0] i_2_reg_194;
reg   [9:0] k_1_reg_205;
reg   [31:0] i_3_reg_217;
wire   [63:0] tmp_4_i_fu_262_p1;
wire   [63:0] tmp_8_i_fu_297_p1;
wire   [63:0] tmp_5_fu_324_p1;
wire   [63:0] tmp_s_fu_344_p1;
wire   [63:0] tmp_11_fu_489_p1;
wire   [63:0] tmp_2_fu_509_p1;
wire   [63:0] tmp_i_cast_fu_302_p1;
wire   [63:0] tmp_20_cast_fu_426_p1;
wire   [63:0] tmp_17_cast_fu_529_p1;
wire   [9:0] tmp_3_i_fu_256_p2;
wire   [31:0] tmp_1_fu_267_p4;
wire   [31:0] tmp_17_fu_277_p1;
wire   [31:0] grp_fu_287_p0;
wire   [30:0] grp_fu_287_p1;
wire   [31:0] grp_fu_287_p2;
wire   [31:0] tmp_4_fu_318_p2;
wire   [33:0] grp_fu_230_p4;
wire   [63:0] tmp_23_fu_329_p1;
wire   [63:0] grp_fu_339_p0;
wire   [20:0] grp_fu_339_p1;
wire   [63:0] grp_fu_339_p2;
wire   [63:0] tmp_9_fu_349_p2;
wire   [1:0] tmp_24_fu_359_p1;
wire   [0:0] sel_tmp4_fu_375_p2;
wire   [0:0] sel_tmp2_fu_369_p2;
wire   [0:0] sel_tmp_fu_363_p2;
wire   [0:0] or_cond_fu_389_p2;
wire   [10:0] newSel_cast_cast_fu_381_p3;
wire   [10:0] newSel7_fu_395_p3;
wire   [10:0] newSel9_fu_403_p3;
wire   [31:0] tmp_19_fu_411_p2;
wire   [31:0] tmp_20_fu_416_p1;
wire   [31:0] tmp_19_cast_fu_420_p2;
wire   [29:0] tmp_28_fu_449_p4;
wire   [0:0] icmp_fu_458_p2;
wire   [31:0] tmp_10_fu_483_p2;
wire   [63:0] tmp_26_fu_494_p1;
wire   [63:0] grp_fu_504_p0;
wire   [30:0] grp_fu_504_p1;
wire   [63:0] grp_fu_504_p2;
wire   [63:0] tmp_15_fu_514_p2;
wire   [31:0] tmp_16_cast_fu_524_p2;
wire    grp_fu_287_ce;
wire    grp_fu_339_ce;
wire    grp_fu_504_ce;
reg   [5:0] ap_NS_fsm;


black_scholes_mul_32s_31ns_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 32 ))
black_scholes_mul_32s_31ns_32_6_U1(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_287_p0 ),
    .din1( grp_fu_287_p1 ),
    .ce( grp_fu_287_ce ),
    .dout( grp_fu_287_p2 )
);

black_scholes_mul_64s_21ns_64_6 #(
    .ID( 2 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 64 ))
black_scholes_mul_64s_21ns_64_6_U2(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_339_p0 ),
    .din1( grp_fu_339_p1 ),
    .ce( grp_fu_339_ce ),
    .dout( grp_fu_339_p2 )
);

black_scholes_mul_64s_31ns_64_6 #(
    .ID( 3 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 64 ))
black_scholes_mul_64s_31ns_64_6_U3(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_504_p0 ),
    .din1( grp_fu_504_p1 ),
    .ce( grp_fu_504_ce ),
    .dout( grp_fu_504_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st19_fsm_18 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_21_fu_443_p2))) begin
        i_1_reg_181 <= i_4_fu_431_p2;
    end else if (((ap_ST_st21_fsm_20 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_21_reg_614))) begin
        i_1_reg_181 <= ap_const_lv32_1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st11_fsm_10 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_fu_312_p2))) begin
        i_2_reg_194 <= i_reg_145;
    end else if ((ap_ST_st33_fsm_32 == ap_CS_fsm)) begin
        i_2_reg_194 <= i_3_phi_fu_221_p4;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st31_fsm_30 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_22_fu_540_p2))) begin
        i_3_reg_217 <= i_5_fu_534_p2;
    end else if (((ap_ST_st33_fsm_32 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_22_reg_656))) begin
        i_3_reg_217 <= ap_const_lv32_1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond_i_fu_250_p2 == ap_const_lv1_0))) begin
        i_reg_145 <= ap_const_lv32_1;
    end else if ((ap_ST_st22_fsm_21 == ap_CS_fsm)) begin
        i_reg_145 <= i_1_reg_181;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond_i_fu_250_p2 == ap_const_lv1_0))) begin
        j_reg_157 <= ap_const_lv32_0;
    end else if ((ap_ST_st22_fsm_21 == ap_CS_fsm)) begin
        j_reg_157 <= p_s_reg_618;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st11_fsm_10 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_fu_312_p2))) begin
        k_1_reg_205 <= ap_const_lv10_26F;
    end else if ((ap_ST_st33_fsm_32 == ap_CS_fsm)) begin
        k_1_reg_205 <= k_3_fu_546_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond_i_fu_250_p2 == ap_const_lv1_0))) begin
        k_reg_169 <= ap_const_lv10_270;
    end else if ((ap_ST_st22_fsm_21 == ap_CS_fsm)) begin
        k_reg_169 <= k_2_reg_623;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st10_fsm_9 == ap_CS_fsm)) begin
        tmp_1_i_reg_133 <= tmp_2_i_fu_306_p2;
    end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
        tmp_1_i_reg_133 <= ap_const_lv10_1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st19_fsm_18 == ap_CS_fsm)) begin
        j_1_reg_608 <= j_1_fu_437_p2;
        tmp_21_reg_614 <= tmp_21_fu_443_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st21_fsm_20 == ap_CS_fsm)) begin
        k_2_reg_623 <= k_2_fu_471_p2;
        p_s_reg_618 <= p_s_fu_464_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st29_fsm_28 == ap_CS_fsm)) begin
        mt_addr_3_reg_641 <= tmp_2_fu_509_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st17_fsm_16 == ap_CS_fsm)) begin
        mt_addr_reg_593 <= tmp_s_fu_344_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st24_fsm_23 == ap_CS_fsm)) begin
        tmp_13_reg_636 <= tmp_13_fu_498_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        tmp_18_reg_565 <= tmp_18_fu_281_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        tmp_1_i_cast_reg_552[0] <= tmp_1_i_cast_fu_240_p1[0];
tmp_1_i_cast_reg_552[1] <= tmp_1_i_cast_fu_240_p1[1];
tmp_1_i_cast_reg_552[2] <= tmp_1_i_cast_fu_240_p1[2];
tmp_1_i_cast_reg_552[3] <= tmp_1_i_cast_fu_240_p1[3];
tmp_1_i_cast_reg_552[4] <= tmp_1_i_cast_fu_240_p1[4];
tmp_1_i_cast_reg_552[5] <= tmp_1_i_cast_fu_240_p1[5];
tmp_1_i_cast_reg_552[6] <= tmp_1_i_cast_fu_240_p1[6];
tmp_1_i_cast_reg_552[7] <= tmp_1_i_cast_fu_240_p1[7];
tmp_1_i_cast_reg_552[8] <= tmp_1_i_cast_fu_240_p1[8];
tmp_1_i_cast_reg_552[9] <= tmp_1_i_cast_fu_240_p1[9];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st31_fsm_30 == ap_CS_fsm)) begin
        tmp_22_reg_656 <= tmp_22_fu_540_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st18_fsm_17 == ap_CS_fsm)) begin
        tmp_25_reg_598 <= tmp_25_fu_355_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st30_fsm_29 == ap_CS_fsm)) begin
        tmp_27_reg_646 <= tmp_27_fu_520_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st12_fsm_11 == ap_CS_fsm)) begin
        tmp_7_reg_588 <= tmp_7_fu_333_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st9_fsm_8 == ap_CS_fsm)) begin
        tmp_9_i_cast_reg_570 <= tmp_9_i_cast_fu_292_p2;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_CS_fsm or tmp_3_fu_477_p2)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm)) | ((ap_ST_st23_fsm_22 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_3_fu_477_p2)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_CS_fsm or tmp_3_fu_477_p2)
begin
    if (((ap_ST_st23_fsm_22 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_3_fu_477_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// i_3_phi_fu_221_p4 assign process. ///
always @ (ap_CS_fsm or tmp_22_reg_656 or i_3_reg_217)
begin
    if (((ap_ST_st33_fsm_32 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_22_reg_656))) begin
        i_3_phi_fu_221_p4 = ap_const_lv32_1;
    end else begin
        i_3_phi_fu_221_p4 = i_3_reg_217;
    end
end

/// mt_address0 assign process. ///
always @ (ap_CS_fsm or mt_addr_reg_593 or tmp_3_fu_477_p2 or mt_addr_3_reg_641 or tmp_4_i_fu_262_p1 or tmp_8_i_fu_297_p1 or tmp_5_fu_324_p1 or tmp_s_fu_344_p1 or tmp_11_fu_489_p1 or tmp_2_fu_509_p1)
begin
    if ((ap_ST_st31_fsm_30 == ap_CS_fsm)) begin
        mt_address0 = mt_addr_3_reg_641;
    end else if ((ap_ST_st19_fsm_18 == ap_CS_fsm)) begin
        mt_address0 = mt_addr_reg_593;
    end else if ((ap_ST_st10_fsm_9 == ap_CS_fsm)) begin
        mt_address0 = tmp_8_i_fu_297_p1;
    end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) | (ap_ST_st21_fsm_20 == ap_CS_fsm) | (ap_ST_st33_fsm_32 == ap_CS_fsm) | ((ap_ST_st23_fsm_22 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_3_fu_477_p2)))) begin
        mt_address0 = ap_const_lv10_0;
    end else if ((ap_ST_st29_fsm_28 == ap_CS_fsm)) begin
        mt_address0 = tmp_2_fu_509_p1;
    end else if (((ap_ST_st23_fsm_22 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_3_fu_477_p2))) begin
        mt_address0 = tmp_11_fu_489_p1;
    end else if (((ap_ST_st20_fsm_19 == ap_CS_fsm) | (ap_ST_st32_fsm_31 == ap_CS_fsm))) begin
        mt_address0 = ap_const_lv10_26F;
    end else if ((ap_ST_st17_fsm_16 == ap_CS_fsm)) begin
        mt_address0 = tmp_s_fu_344_p1;
    end else if ((ap_ST_st11_fsm_10 == ap_CS_fsm)) begin
        mt_address0 = tmp_5_fu_324_p1;
    end else if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        mt_address0 = tmp_4_i_fu_262_p1;
    end else begin
        mt_address0 = 'bx;
    end
end

/// mt_ce0 assign process. ///
always @ (ap_start or ap_CS_fsm or tmp_3_fu_477_p2)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) | (ap_ST_st10_fsm_9 == ap_CS_fsm) | (ap_ST_st11_fsm_10 == ap_CS_fsm) | (ap_ST_st17_fsm_16 == ap_CS_fsm) | (ap_ST_st19_fsm_18 == ap_CS_fsm) | (ap_ST_st21_fsm_20 == ap_CS_fsm) | ((ap_ST_st23_fsm_22 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_3_fu_477_p2)) | (ap_ST_st29_fsm_28 == ap_CS_fsm) | (ap_ST_st31_fsm_30 == ap_CS_fsm) | (ap_ST_st33_fsm_32 == ap_CS_fsm) | ((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0)) | (ap_ST_st20_fsm_19 == ap_CS_fsm) | ((ap_ST_st23_fsm_22 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_3_fu_477_p2)) | (ap_ST_st32_fsm_31 == ap_CS_fsm))) begin
        mt_ce0 = ap_const_logic_1;
    end else begin
        mt_ce0 = ap_const_logic_0;
    end
end

/// mt_d0 assign process. ///
always @ (ap_CS_fsm or mt_q0 or tmp_3_fu_477_p2 or tmp_i_cast_fu_302_p1 or tmp_20_cast_fu_426_p1 or tmp_17_cast_fu_529_p1)
begin
    if ((ap_ST_st31_fsm_30 == ap_CS_fsm)) begin
        mt_d0 = tmp_17_cast_fu_529_p1;
    end else if (((ap_ST_st23_fsm_22 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_3_fu_477_p2))) begin
        mt_d0 = ap_const_lv64_80000000;
    end else if (((ap_ST_st21_fsm_20 == ap_CS_fsm) | (ap_ST_st33_fsm_32 == ap_CS_fsm))) begin
        mt_d0 = mt_q0;
    end else if ((ap_ST_st19_fsm_18 == ap_CS_fsm)) begin
        mt_d0 = tmp_20_cast_fu_426_p1;
    end else if ((ap_ST_st10_fsm_9 == ap_CS_fsm)) begin
        mt_d0 = tmp_i_cast_fu_302_p1;
    end else if ((ap_ST_st1_fsm_0 == ap_CS_fsm)) begin
        mt_d0 = ap_const_lv64_12BD6AA;
    end else begin
        mt_d0 = 'bx;
    end
end

/// mt_we0 assign process. ///
always @ (ap_start or ap_CS_fsm or tmp_21_reg_614 or tmp_3_fu_477_p2 or tmp_22_reg_656)
begin
    if (((ap_ST_st10_fsm_9 == ap_CS_fsm) | (ap_ST_st19_fsm_18 == ap_CS_fsm) | (ap_ST_st31_fsm_30 == ap_CS_fsm) | ((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0)) | ((ap_ST_st21_fsm_20 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_21_reg_614)) | ((ap_ST_st33_fsm_32 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_22_reg_656)) | ((ap_ST_st23_fsm_22 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_3_fu_477_p2)))) begin
        mt_we0 = ap_const_logic_1;
    end else begin
        mt_we0 = ap_const_logic_0;
    end
end

/// mti_ap_vld assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        mti_ap_vld = ap_const_logic_1;
    end else begin
        mti_ap_vld = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or exitcond_i_fu_250_p2 or tmp_fu_312_p2 or tmp_21_fu_443_p2 or tmp_3_fu_477_p2 or tmp_22_fu_540_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(exitcond_i_fu_250_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st11_fsm_10;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        ap_ST_st11_fsm_10 : 
        begin
            if (~(ap_const_lv1_0 == tmp_fu_312_p2)) begin
                ap_NS_fsm = ap_ST_st23_fsm_22;
            end else begin
                ap_NS_fsm = ap_ST_st12_fsm_11;
            end
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            if ((ap_const_lv1_0 == tmp_21_fu_443_p2)) begin
                ap_NS_fsm = ap_ST_st21_fsm_20;
            end else begin
                ap_NS_fsm = ap_ST_st20_fsm_19;
            end
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st23_fsm_22 : 
        begin
            if (~(ap_const_lv1_0 == tmp_3_fu_477_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st24_fsm_23;
            end
        end
        ap_ST_st24_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : 
        begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : 
        begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : 
        begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : 
        begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : 
        begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : 
        begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : 
        begin
            if ((ap_const_lv1_0 == tmp_22_fu_540_p2)) begin
                ap_NS_fsm = ap_ST_st33_fsm_32;
            end else begin
                ap_NS_fsm = ap_ST_st32_fsm_31;
            end
        end
        ap_ST_st32_fsm_31 : 
        begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : 
        begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign exitcond_i_fu_250_p2 = (tmp_1_i_reg_133 == ap_const_lv10_270? 1'b1: 1'b0);
assign grp_fu_230_p4 = {{mt_q0[ap_const_lv32_3F : ap_const_lv32_1E]}};
assign grp_fu_287_ce = ap_const_logic_1;
assign grp_fu_287_p0 = tmp_18_reg_565;
assign grp_fu_287_p1 = ap_const_lv32_6C078965;
assign grp_fu_339_ce = ap_const_logic_1;
assign grp_fu_339_p0 = tmp_7_reg_588;
assign grp_fu_339_p1 = ap_const_lv64_19660D;
assign grp_fu_504_ce = ap_const_logic_1;
assign grp_fu_504_p0 = tmp_13_reg_636;
assign grp_fu_504_p1 = ap_const_lv64_5D588B65;
assign i_4_fu_431_p2 = (i_reg_145 + ap_const_lv32_1);
assign i_5_fu_534_p2 = (i_2_reg_194 + ap_const_lv32_1);
assign icmp_fu_458_p2 = ($signed(tmp_28_fu_449_p4) < $signed(30'b1)? 1'b1: 1'b0);
assign j_1_fu_437_p2 = (j_reg_157 + ap_const_lv32_1);
assign k_2_fu_471_p2 = (k_reg_169 + ap_const_lv10_3FF);
assign k_3_fu_546_p2 = (k_1_reg_205 + ap_const_lv10_3FF);
assign mti = $unsigned(tmp_1_i_reg_133);
assign newSel7_fu_395_p3 = ((sel_tmp_fu_363_p2)? ap_const_lv11_234: ap_const_lv11_456);
assign newSel9_fu_403_p3 = ((or_cond_fu_389_p2)? newSel_cast_cast_fu_381_p3: newSel7_fu_395_p3);
assign newSel_cast_cast_fu_381_p3 = ((sel_tmp4_fu_375_p2)? ap_const_lv11_123: ap_const_lv11_345);
assign or_cond_fu_389_p2 = (sel_tmp4_fu_375_p2 | sel_tmp2_fu_369_p2);
assign p_s_fu_464_p3 = ((icmp_fu_458_p2)? j_1_reg_608: ap_const_lv32_0);
assign sel_tmp2_fu_369_p2 = (tmp_24_fu_359_p1 == ap_const_lv2_2? 1'b1: 1'b0);
assign sel_tmp4_fu_375_p2 = (tmp_24_fu_359_p1 == ap_const_lv2_0? 1'b1: 1'b0);
assign sel_tmp_fu_363_p2 = (tmp_24_fu_359_p1 == ap_const_lv2_1? 1'b1: 1'b0);
assign tmp_10_fu_483_p2 = (i_2_reg_194 + ap_const_lv32_FFFFFFFF);
assign tmp_11_fu_489_p1 = $signed(tmp_10_fu_483_p2);
assign tmp_13_fu_498_p2 = (tmp_26_fu_494_p1 ^ mt_q0);
assign tmp_15_fu_514_p2 = (grp_fu_504_p2 ^ mt_q0);
assign tmp_16_cast_fu_524_p2 = (tmp_27_reg_646 - i_2_reg_194);
assign tmp_17_cast_fu_529_p1 = $unsigned(tmp_16_cast_fu_524_p2);
assign tmp_17_fu_277_p1 = mt_q0[31:0];
assign tmp_18_fu_281_p2 = (tmp_1_fu_267_p4 ^ tmp_17_fu_277_p1);
assign tmp_19_cast_fu_420_p2 = (tmp_19_fu_411_p2 + tmp_20_fu_416_p1);
assign tmp_19_fu_411_p2 = (tmp_25_reg_598 + j_reg_157);
assign tmp_1_fu_267_p4 = {{mt_q0[ap_const_lv32_3D : ap_const_lv32_1E]}};
assign tmp_1_i_cast_fu_240_p1 = $unsigned(tmp_1_i_reg_133);
assign tmp_20_cast_fu_426_p1 = $unsigned(tmp_19_cast_fu_420_p2);
assign tmp_20_fu_416_p1 = $unsigned(newSel9_fu_403_p3);
assign tmp_21_fu_443_p2 = ($signed(i_4_fu_431_p2) > $signed(32'b1001101111)? 1'b1: 1'b0);
assign tmp_22_fu_540_p2 = ($signed(i_5_fu_534_p2) > $signed(32'b1001101111)? 1'b1: 1'b0);
assign tmp_23_fu_329_p1 = $unsigned(grp_fu_230_p4);
assign tmp_24_fu_359_p1 = j_reg_157[1:0];
assign tmp_25_fu_355_p1 = tmp_9_fu_349_p2[31:0];
assign tmp_26_fu_494_p1 = $unsigned(grp_fu_230_p4);
assign tmp_27_fu_520_p1 = tmp_15_fu_514_p2[31:0];
assign tmp_28_fu_449_p4 = {{j_1_reg_608[ap_const_lv32_1F : ap_const_lv32_2]}};
assign tmp_2_fu_509_p1 = $signed(i_2_reg_194);
assign tmp_2_i_fu_306_p2 = (tmp_1_i_reg_133 + ap_const_lv10_1);
assign tmp_3_fu_477_p2 = (k_1_reg_205 == ap_const_lv10_0? 1'b1: 1'b0);
assign tmp_3_i_fu_256_p2 = (tmp_1_i_reg_133 + ap_const_lv10_3FF);
assign tmp_4_fu_318_p2 = (i_reg_145 + ap_const_lv32_FFFFFFFF);
assign tmp_4_i_fu_262_p1 = $unsigned(tmp_3_i_fu_256_p2);
assign tmp_5_fu_324_p1 = $signed(tmp_4_fu_318_p2);
assign tmp_7_fu_333_p2 = (tmp_23_fu_329_p1 ^ mt_q0);
assign tmp_8_i_fu_297_p1 = $unsigned(tmp_1_i_reg_133);
assign tmp_9_fu_349_p2 = (grp_fu_339_p2 ^ mt_q0);
assign tmp_9_i_cast_fu_292_p2 = (grp_fu_287_p2 + tmp_1_i_cast_reg_552);
assign tmp_fu_312_p2 = (k_reg_169 == ap_const_lv10_0? 1'b1: 1'b0);
assign tmp_i_cast_fu_302_p1 = $unsigned(tmp_9_i_cast_reg_570);
assign tmp_s_fu_344_p1 = $signed(i_reg_145);
always @ (posedge ap_clk)
begin
    tmp_1_i_cast_reg_552[31:10] <= 22'b0000000000000000000000;
end



endmodule //black_scholes_init_by_array

