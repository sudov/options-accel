// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.2
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module black_scholes_genrand_int32 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        mti_i,
        mti_o,
        mti_o_ap_vld,
        mt_address0,
        mt_ce0,
        mt_we0,
        mt_d0,
        mt_q0,
        mt_address1,
        mt_ce1,
        mt_we1,
        mt_d1,
        mt_q1,
        ap_return
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 5'b00000;
parameter    ap_ST_st2_fsm_1 = 5'b1;
parameter    ap_ST_st3_fsm_2 = 5'b10;
parameter    ap_ST_st4_fsm_3 = 5'b11;
parameter    ap_ST_st5_fsm_4 = 5'b100;
parameter    ap_ST_st6_fsm_5 = 5'b101;
parameter    ap_ST_st7_fsm_6 = 5'b110;
parameter    ap_ST_st8_fsm_7 = 5'b111;
parameter    ap_ST_st9_fsm_8 = 5'b1000;
parameter    ap_ST_st10_fsm_9 = 5'b1001;
parameter    ap_ST_st11_fsm_10 = 5'b1010;
parameter    ap_ST_st12_fsm_11 = 5'b1011;
parameter    ap_ST_st13_fsm_12 = 5'b1100;
parameter    ap_ST_st14_fsm_13 = 5'b1101;
parameter    ap_ST_st15_fsm_14 = 5'b1110;
parameter    ap_ST_st16_fsm_15 = 5'b1111;
parameter    ap_ST_st17_fsm_16 = 5'b10000;
parameter    ap_ST_st18_fsm_17 = 5'b10001;
parameter    ap_ST_st19_fsm_18 = 5'b10010;
parameter    ap_ST_st20_fsm_19 = 5'b10011;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv10_1 = 10'b1;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv10_E3 = 10'b11100011;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv64_1571 = 64'b1010101110001;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv10_26F = 10'b1001101111;
parameter    ap_const_lv10_18C = 10'b110001100;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_26F = 32'b1001101111;
parameter    ap_const_lv32_271 = 32'b1001110001;
parameter    ap_const_lv10_270 = 10'b1001110000;
parameter    ap_const_lv10_3FF = 10'b1111111111;
parameter    ap_const_lv32_3D = 32'b111101;
parameter    ap_const_lv32_6C078965 = 32'b1101100000001111000100101100101;
parameter    ap_const_lv8_E3 = 8'b11100011;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv10_18D = 10'b110001101;
parameter    ap_const_lv64_9908B0DF = 64'b10011001000010001011000011011111;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv9_11D = 9'b100011101;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv17_0 = 17'b00000000000000000;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] mti_i;
output  [31:0] mti_o;
output   mti_o_ap_vld;
output  [9:0] mt_address0;
output   mt_ce0;
output   mt_we0;
output  [63:0] mt_d0;
input  [63:0] mt_q0;
output  [9:0] mt_address1;
output   mt_ce1;
output   mt_we1;
output  [63:0] mt_d1;
input  [63:0] mt_q1;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] mti_o;
reg mti_o_ap_vld;
reg[9:0] mt_address0;
reg mt_ce0;
reg mt_we0;
reg[63:0] mt_d0;
reg[9:0] mt_address1;
reg mt_ce1;
reg mt_we1;
reg[63:0] ap_return;
reg   [4:0] ap_CS_fsm = 5'b00000;
reg   [29:0] reg_268;
wire   [0:0] tmp_fu_276_p2;
reg   [0:0] tmp_reg_802;
wire   [0:0] tmp_s_fu_282_p2;
reg   [0:0] tmp_s_reg_806;
wire   [31:0] tmp_1_i_cast_fu_288_p1;
reg   [31:0] tmp_1_i_cast_reg_810;
wire   [0:0] exitcond_i_fu_298_p2;
wire   [31:0] tmp_40_fu_329_p2;
reg   [31:0] tmp_40_reg_823;
wire   [31:0] tmp_9_i_cast_fu_340_p2;
reg   [31:0] tmp_9_i_cast_reg_828;
wire   [9:0] tmp_2_i_fu_354_p2;
wire   [9:0] kk_cast7_fu_360_p1;
reg   [9:0] kk_cast7_reg_838;
wire   [7:0] tmp_26_fu_370_p2;
reg   [7:0] tmp_26_reg_846;
reg   [9:0] mt_addr_reg_851;
wire   [0:0] exitcond1_fu_364_p2;
reg   [0:0] tmp_46_reg_862;
reg   [29:0] tmp_37_reg_872;
wire   [0:0] tmp_56_fu_414_p1;
reg   [0:0] tmp_56_reg_877;
reg   [9:0] mt_addr_7_reg_885;
wire   [0:0] exitcond_fu_448_p2;
wire   [9:0] kk_2_fu_459_p2;
reg   [9:0] kk_2_reg_891;
wire   [8:0] tmp_62_fu_470_p1;
reg   [8:0] tmp_62_reg_901;
reg   [0:0] tmp_60_reg_906;
wire   [0:0] tmp_63_fu_490_p1;
reg   [0:0] tmp_63_reg_916;
reg   [0:0] tmp_57_reg_921;
wire   [0:0] tmp_59_fu_525_p1;
reg   [0:0] tmp_59_reg_926;
reg   [9:0] tmp_1_i_reg_204;
reg   [7:0] kk_reg_216;
reg   [9:0] kk_1_reg_227;
reg   [31:0] tmp_47_reg_238;
wire   [63:0] tmp_4_i_fu_310_p1;
wire   [63:0] tmp_8_i_fu_345_p1;
wire   [63:0] tmp_24_fu_376_p1;
wire   [63:0] tmp_27_fu_381_p1;
wire   [63:0] tmp_30_fu_399_p1;
wire   [63:0] tmp_38_fu_454_p1;
wire   [63:0] tmp_39_fu_465_p1;
wire   [63:0] tmp_43_fu_485_p1;
wire   [63:0] tmp_49_fu_572_p1;
wire   [31:0] tmp_48_fu_560_p2;
wire   [63:0] tmp_i_cast_fu_350_p1;
wire   [63:0] tmp_45_fu_518_p2;
wire   [63:0] tmp_36_fu_553_p2;
wire   [9:0] tmp_3_i_fu_304_p2;
wire   [31:0] tmp_34_fu_315_p4;
wire   [31:0] tmp_35_fu_325_p1;
wire   [31:0] grp_fu_335_p0;
wire   [30:0] grp_fu_335_p1;
wire   [31:0] grp_fu_335_p2;
wire   [9:0] tmp_29_fu_394_p2;
wire   [30:0] tmp_31_fu_418_p3;
wire   [63:0] mag01_load_phi_cast_cast_fu_428_p3;
wire   [63:0] tmp1_fu_435_p2;
wire   [63:0] tmp_31_cast_fu_424_p1;
wire   [8:0] tmp_41_fu_480_p2;
wire   [30:0] tmp_44_fu_494_p3;
wire   [63:0] mag01_load_2_phi_cast_cast_fu_505_p3;
wire   [63:0] tmp2_fu_512_p2;
wire   [63:0] tmp_45_cast_fu_501_p1;
wire   [30:0] tmp_33_fu_529_p3;
wire   [63:0] mag01_load_1_phi_cast_cast_fu_540_p3;
wire   [63:0] tmp3_fu_547_p2;
wire   [63:0] tmp_36_cast_fu_536_p1;
wire   [52:0] tmp_50_fu_577_p4;
wire   [63:0] tmp_54_fu_587_p1;
wire   [63:0] y_1_fu_591_p2;
wire   [0:0] tmp_65_fu_597_p3;
wire   [2:0] tmp_58_fu_605_p4;
wire   [0:0] tmp_70_fu_615_p3;
wire   [0:0] tmp_71_fu_623_p3;
wire   [1:0] tmp_61_fu_631_p4;
wire   [0:0] tmp_72_fu_641_p3;
wire   [0:0] tmp_73_fu_649_p3;
wire   [1:0] tmp_64_fu_657_p4;
wire   [0:0] tmp_74_fu_667_p1;
wire   [31:0] tmp_51_fu_671_p19;
wire   [63:0] tmp_53_cast_fu_711_p1;
wire   [63:0] y_2_fu_715_p2;
wire   [2:0] tmp_66_fu_721_p4;
wire   [5:0] tmp_67_fu_731_p4;
wire   [1:0] tmp_68_fu_741_p4;
wire   [31:0] tmp_53_fu_751_p7;
wire   [63:0] tmp_55_cast_fu_767_p1;
wire   [63:0] y_3_fu_771_p2;
wire   [45:0] tmp_55_fu_777_p4;
wire   [63:0] tmp_69_fu_787_p1;
wire    grp_fu_335_ce;
wire   [63:0] y_4_fu_791_p2;
reg   [63:0] ap_return_preg = 64'b0000000000000000000000000000000000000000000000000000000000000000;
reg   [4:0] ap_NS_fsm;


black_scholes_mul_32s_31ns_32_6 #(
    .ID( 6 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 32 ))
black_scholes_mul_32s_31ns_32_6_U6(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_335_p0 ),
    .din1( grp_fu_335_p1 ),
    .ce( grp_fu_335_ce ),
    .dout( grp_fu_335_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_return_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_return_preg
    if (ap_rst == 1'b1) begin
        ap_return_preg <= ap_const_lv64_0;
    end else begin
        if ((ap_ST_st20_fsm_19 == ap_CS_fsm)) begin
            ap_return_preg <= y_4_fu_791_p2;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st11_fsm_10 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond1_fu_364_p2))) begin
        kk_1_reg_227 <= ap_const_lv10_E3;
    end else if ((ap_ST_st16_fsm_15 == ap_CS_fsm)) begin
        kk_1_reg_227 <= kk_2_reg_891;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st13_fsm_12 == ap_CS_fsm)) begin
        kk_reg_216 <= tmp_26_reg_846;
    end else if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ((tmp_s_reg_806 == ap_const_lv1_0) | ~(ap_const_lv1_0 == exitcond_i_fu_298_p2)))) begin
        kk_reg_216 <= ap_const_lv8_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st10_fsm_9 == ap_CS_fsm)) begin
        tmp_1_i_reg_204 <= tmp_2_i_fu_354_p2;
    end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0) & ~(tmp_fu_276_p2 == ap_const_lv1_0) & ~(tmp_s_fu_282_p2 == ap_const_lv1_0))) begin
        tmp_1_i_reg_204 <= ap_const_lv10_1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0) & (tmp_fu_276_p2 == ap_const_lv1_0))) begin
        tmp_47_reg_238 <= mti_i;
    end else if (((ap_ST_st18_fsm_17 == ap_CS_fsm) & ~(tmp_reg_802 == ap_const_lv1_0))) begin
        tmp_47_reg_238 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st14_fsm_13 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond_fu_448_p2))) begin
        kk_2_reg_891 <= kk_2_fu_459_p2;
        mt_addr_7_reg_885 <= tmp_38_fu_454_p1;
        tmp_62_reg_901 <= tmp_62_fu_470_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st11_fsm_10 == ap_CS_fsm)) begin
        kk_cast7_reg_838[0] <= kk_cast7_fu_360_p1[0];
kk_cast7_reg_838[1] <= kk_cast7_fu_360_p1[1];
kk_cast7_reg_838[2] <= kk_cast7_fu_360_p1[2];
kk_cast7_reg_838[3] <= kk_cast7_fu_360_p1[3];
kk_cast7_reg_838[4] <= kk_cast7_fu_360_p1[4];
kk_cast7_reg_838[5] <= kk_cast7_fu_360_p1[5];
kk_cast7_reg_838[6] <= kk_cast7_fu_360_p1[6];
kk_cast7_reg_838[7] <= kk_cast7_fu_360_p1[7];
        tmp_26_reg_846 <= tmp_26_fu_370_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st11_fsm_10 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond1_fu_364_p2))) begin
        mt_addr_reg_851[0] <= tmp_24_fu_376_p1[0];
mt_addr_reg_851[1] <= tmp_24_fu_376_p1[1];
mt_addr_reg_851[2] <= tmp_24_fu_376_p1[2];
mt_addr_reg_851[3] <= tmp_24_fu_376_p1[3];
mt_addr_reg_851[4] <= tmp_24_fu_376_p1[4];
mt_addr_reg_851[5] <= tmp_24_fu_376_p1[5];
mt_addr_reg_851[6] <= tmp_24_fu_376_p1[6];
mt_addr_reg_851[7] <= tmp_24_fu_376_p1[7];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st15_fsm_14 == ap_CS_fsm) | (ap_ST_st17_fsm_16 == ap_CS_fsm))) begin
        reg_268 <= {{mt_q0[ap_const_lv32_1E : ap_const_lv32_1]}};
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(tmp_s_reg_806 == ap_const_lv1_0))) begin
        tmp_1_i_cast_reg_810[0] <= tmp_1_i_cast_fu_288_p1[0];
tmp_1_i_cast_reg_810[1] <= tmp_1_i_cast_fu_288_p1[1];
tmp_1_i_cast_reg_810[2] <= tmp_1_i_cast_fu_288_p1[2];
tmp_1_i_cast_reg_810[3] <= tmp_1_i_cast_fu_288_p1[3];
tmp_1_i_cast_reg_810[4] <= tmp_1_i_cast_fu_288_p1[4];
tmp_1_i_cast_reg_810[5] <= tmp_1_i_cast_fu_288_p1[5];
tmp_1_i_cast_reg_810[6] <= tmp_1_i_cast_fu_288_p1[6];
tmp_1_i_cast_reg_810[7] <= tmp_1_i_cast_fu_288_p1[7];
tmp_1_i_cast_reg_810[8] <= tmp_1_i_cast_fu_288_p1[8];
tmp_1_i_cast_reg_810[9] <= tmp_1_i_cast_fu_288_p1[9];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st12_fsm_11 == ap_CS_fsm)) begin
        tmp_37_reg_872 <= {{mt_q1[ap_const_lv32_1E : ap_const_lv32_1]}};
        tmp_46_reg_862 <= mt_q0[ap_const_lv32_1F];
        tmp_56_reg_877 <= tmp_56_fu_414_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        tmp_40_reg_823 <= tmp_40_fu_329_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st17_fsm_16 == ap_CS_fsm)) begin
        tmp_57_reg_921 <= mt_q1[ap_const_lv32_1F];
        tmp_59_reg_926 <= tmp_59_fu_525_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st15_fsm_14 == ap_CS_fsm)) begin
        tmp_60_reg_906 <= mt_q1[ap_const_lv32_1F];
        tmp_63_reg_916 <= tmp_63_fu_490_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st9_fsm_8 == ap_CS_fsm)) begin
        tmp_9_i_cast_reg_828 <= tmp_9_i_cast_fu_340_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
        tmp_reg_802 <= tmp_fu_276_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0) & ~(tmp_fu_276_p2 == ap_const_lv1_0))) begin
        tmp_s_reg_806 <= tmp_s_fu_282_p2;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm)) | (ap_ST_st20_fsm_19 == ap_CS_fsm))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st20_fsm_19 == ap_CS_fsm)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_return assign process. ///
always @ (ap_CS_fsm or y_4_fu_791_p2 or ap_return_preg)
begin
    if ((ap_ST_st20_fsm_19 == ap_CS_fsm)) begin
        ap_return = y_4_fu_791_p2;
    end else begin
        ap_return = ap_return_preg;
    end
end

/// mt_address0 assign process. ///
always @ (ap_CS_fsm or mt_addr_7_reg_885 or exitcond_fu_448_p2 or tmp_4_i_fu_310_p1 or tmp_8_i_fu_345_p1 or tmp_24_fu_376_p1 or tmp_39_fu_465_p1)
begin
    if ((ap_ST_st18_fsm_17 == ap_CS_fsm)) begin
        mt_address0 = ap_const_lv10_26F;
    end else if ((ap_ST_st16_fsm_15 == ap_CS_fsm)) begin
        mt_address0 = mt_addr_7_reg_885;
    end else if ((ap_ST_st10_fsm_9 == ap_CS_fsm)) begin
        mt_address0 = tmp_8_i_fu_345_p1;
    end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) | ((ap_ST_st14_fsm_13 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond_fu_448_p2)))) begin
        mt_address0 = ap_const_lv10_0;
    end else if (((ap_ST_st14_fsm_13 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond_fu_448_p2))) begin
        mt_address0 = tmp_39_fu_465_p1;
    end else if ((ap_ST_st11_fsm_10 == ap_CS_fsm)) begin
        mt_address0 = tmp_24_fu_376_p1;
    end else if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        mt_address0 = tmp_4_i_fu_310_p1;
    end else begin
        mt_address0 = 'bx;
    end
end

/// mt_address1 assign process. ///
always @ (ap_CS_fsm or mt_addr_reg_851 or exitcond_fu_448_p2 or tmp_27_fu_381_p1 or tmp_30_fu_399_p1 or tmp_38_fu_454_p1 or tmp_43_fu_485_p1 or tmp_49_fu_572_p1)
begin
    if ((ap_ST_st13_fsm_12 == ap_CS_fsm)) begin
        mt_address1 = mt_addr_reg_851;
    end else if ((ap_ST_st19_fsm_18 == ap_CS_fsm)) begin
        mt_address1 = tmp_49_fu_572_p1;
    end else if ((ap_ST_st17_fsm_16 == ap_CS_fsm)) begin
        mt_address1 = ap_const_lv10_18C;
    end else if ((ap_ST_st15_fsm_14 == ap_CS_fsm)) begin
        mt_address1 = tmp_43_fu_485_p1;
    end else if (((ap_ST_st14_fsm_13 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond_fu_448_p2))) begin
        mt_address1 = ap_const_lv10_26F;
    end else if (((ap_ST_st14_fsm_13 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond_fu_448_p2))) begin
        mt_address1 = tmp_38_fu_454_p1;
    end else if ((ap_ST_st12_fsm_11 == ap_CS_fsm)) begin
        mt_address1 = tmp_30_fu_399_p1;
    end else if ((ap_ST_st11_fsm_10 == ap_CS_fsm)) begin
        mt_address1 = tmp_27_fu_381_p1;
    end else begin
        mt_address1 = 'bx;
    end
end

/// mt_ce0 assign process. ///
always @ (ap_start or ap_CS_fsm or exitcond_fu_448_p2)
begin
    if ((((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0)) | (ap_ST_st2_fsm_1 == ap_CS_fsm) | (ap_ST_st10_fsm_9 == ap_CS_fsm) | (ap_ST_st11_fsm_10 == ap_CS_fsm) | ((ap_ST_st14_fsm_13 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond_fu_448_p2)) | (ap_ST_st16_fsm_15 == ap_CS_fsm) | (ap_ST_st18_fsm_17 == ap_CS_fsm) | ((ap_ST_st14_fsm_13 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond_fu_448_p2)))) begin
        mt_ce0 = ap_const_logic_1;
    end else begin
        mt_ce0 = ap_const_logic_0;
    end
end

/// mt_ce1 assign process. ///
always @ (ap_CS_fsm or exitcond_fu_448_p2)
begin
    if (((ap_ST_st15_fsm_14 == ap_CS_fsm) | (ap_ST_st17_fsm_16 == ap_CS_fsm) | (ap_ST_st11_fsm_10 == ap_CS_fsm) | (ap_ST_st12_fsm_11 == ap_CS_fsm) | ((ap_ST_st14_fsm_13 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond_fu_448_p2)) | (ap_ST_st19_fsm_18 == ap_CS_fsm) | (ap_ST_st13_fsm_12 == ap_CS_fsm) | ((ap_ST_st14_fsm_13 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond_fu_448_p2)))) begin
        mt_ce1 = ap_const_logic_1;
    end else begin
        mt_ce1 = ap_const_logic_0;
    end
end

/// mt_d0 assign process. ///
always @ (ap_CS_fsm or tmp_i_cast_fu_350_p1 or tmp_45_fu_518_p2 or tmp_36_fu_553_p2)
begin
    if ((ap_ST_st18_fsm_17 == ap_CS_fsm)) begin
        mt_d0 = tmp_36_fu_553_p2;
    end else if ((ap_ST_st16_fsm_15 == ap_CS_fsm)) begin
        mt_d0 = tmp_45_fu_518_p2;
    end else if ((ap_ST_st10_fsm_9 == ap_CS_fsm)) begin
        mt_d0 = tmp_i_cast_fu_350_p1;
    end else if ((ap_ST_st1_fsm_0 == ap_CS_fsm)) begin
        mt_d0 = ap_const_lv64_1571;
    end else begin
        mt_d0 = 'bx;
    end
end

/// mt_we0 assign process. ///
always @ (ap_start or ap_CS_fsm or tmp_fu_276_p2 or tmp_reg_802 or tmp_s_fu_282_p2)
begin
    if (((ap_ST_st10_fsm_9 == ap_CS_fsm) | ((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0) & ~(tmp_fu_276_p2 == ap_const_lv1_0) & ~(tmp_s_fu_282_p2 == ap_const_lv1_0)) | (ap_ST_st16_fsm_15 == ap_CS_fsm) | ((ap_ST_st18_fsm_17 == ap_CS_fsm) & ~(tmp_reg_802 == ap_const_lv1_0)))) begin
        mt_we0 = ap_const_logic_1;
    end else begin
        mt_we0 = ap_const_logic_0;
    end
end

/// mt_we1 assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st13_fsm_12 == ap_CS_fsm)) begin
        mt_we1 = ap_const_logic_1;
    end else begin
        mt_we1 = ap_const_logic_0;
    end
end

/// mti_o assign process. ///
always @ (ap_CS_fsm or mti_i or tmp_s_reg_806 or tmp_1_i_cast_fu_288_p1 or exitcond_fu_448_p2 or tmp_48_fu_560_p2)
begin
    if ((ap_ST_st19_fsm_18 == ap_CS_fsm)) begin
        mti_o = tmp_48_fu_560_p2;
    end else if (((ap_ST_st14_fsm_13 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond_fu_448_p2))) begin
        mti_o = ap_const_lv32_0;
    end else if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(tmp_s_reg_806 == ap_const_lv1_0))) begin
        mti_o = tmp_1_i_cast_fu_288_p1;
    end else begin
        mti_o = mti_i;
    end
end

/// mti_o_ap_vld assign process. ///
always @ (ap_CS_fsm or tmp_s_reg_806 or exitcond_fu_448_p2)
begin
    if ((((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(tmp_s_reg_806 == ap_const_lv1_0)) | (ap_ST_st19_fsm_18 == ap_CS_fsm) | ((ap_ST_st14_fsm_13 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond_fu_448_p2)))) begin
        mti_o_ap_vld = ap_const_logic_1;
    end else begin
        mti_o_ap_vld = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or tmp_fu_276_p2 or tmp_s_reg_806 or exitcond_i_fu_298_p2 or exitcond1_fu_364_p2 or exitcond_fu_448_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if ((~(ap_start == ap_const_logic_0) & ~(tmp_fu_276_p2 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else if ((~(ap_start == ap_const_logic_0) & (tmp_fu_276_p2 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_st18_fsm_17;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (((tmp_s_reg_806 == ap_const_lv1_0) | ~(ap_const_lv1_0 == exitcond_i_fu_298_p2))) begin
                ap_NS_fsm = ap_ST_st11_fsm_10;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        ap_ST_st11_fsm_10 : 
        begin
            if (~(ap_const_lv1_0 == exitcond1_fu_364_p2)) begin
                ap_NS_fsm = ap_ST_st14_fsm_13;
            end else begin
                ap_NS_fsm = ap_ST_st12_fsm_11;
            end
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st14_fsm_13 : 
        begin
            if (~(ap_const_lv1_0 == exitcond_fu_448_p2)) begin
                ap_NS_fsm = ap_ST_st17_fsm_16;
            end else begin
                ap_NS_fsm = ap_ST_st15_fsm_14;
            end
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign exitcond1_fu_364_p2 = (kk_reg_216 == ap_const_lv8_E3? 1'b1: 1'b0);
assign exitcond_fu_448_p2 = (kk_1_reg_227 == ap_const_lv10_26F? 1'b1: 1'b0);
assign exitcond_i_fu_298_p2 = (tmp_1_i_reg_204 == ap_const_lv10_270? 1'b1: 1'b0);
assign grp_fu_335_ce = ap_const_logic_1;
assign grp_fu_335_p0 = tmp_40_reg_823;
assign grp_fu_335_p1 = ap_const_lv32_6C078965;
assign kk_2_fu_459_p2 = (kk_1_reg_227 + ap_const_lv10_1);
assign kk_cast7_fu_360_p1 = $unsigned(kk_reg_216);
assign mag01_load_1_phi_cast_cast_fu_540_p3 = ((tmp_59_reg_926)? ap_const_lv64_9908B0DF: ap_const_lv64_0);
assign mag01_load_2_phi_cast_cast_fu_505_p3 = ((tmp_63_reg_916)? ap_const_lv64_9908B0DF: ap_const_lv64_0);
assign mag01_load_phi_cast_cast_fu_428_p3 = ((tmp_56_reg_877)? ap_const_lv64_9908B0DF: ap_const_lv64_0);
assign mt_d1 = (tmp1_fu_435_p2 ^ tmp_31_cast_fu_424_p1);
assign tmp1_fu_435_p2 = (mt_q1 ^ mag01_load_phi_cast_cast_fu_428_p3);
assign tmp2_fu_512_p2 = (mt_q1 ^ mag01_load_2_phi_cast_cast_fu_505_p3);
assign tmp3_fu_547_p2 = (mt_q1 ^ mag01_load_1_phi_cast_cast_fu_540_p3);
assign tmp_1_i_cast_fu_288_p1 = $unsigned(tmp_1_i_reg_204);
assign tmp_24_fu_376_p1 = $unsigned(kk_reg_216);
assign tmp_26_fu_370_p2 = (kk_reg_216 + ap_const_lv8_1);
assign tmp_27_fu_381_p1 = $unsigned(tmp_26_fu_370_p2);
assign tmp_29_fu_394_p2 = (kk_cast7_reg_838 + ap_const_lv10_18D);
assign tmp_2_i_fu_354_p2 = (tmp_1_i_reg_204 + ap_const_lv10_1);
assign tmp_30_fu_399_p1 = $unsigned(tmp_29_fu_394_p2);
assign tmp_31_cast_fu_424_p1 = $unsigned(tmp_31_fu_418_p3);
assign tmp_31_fu_418_p3 = {{tmp_46_reg_862}, {tmp_37_reg_872}};
assign tmp_33_fu_529_p3 = {{tmp_57_reg_921}, {reg_268}};
assign tmp_34_fu_315_p4 = {{mt_q0[ap_const_lv32_3D : ap_const_lv32_1E]}};
assign tmp_35_fu_325_p1 = mt_q0[31:0];
assign tmp_36_cast_fu_536_p1 = $unsigned(tmp_33_fu_529_p3);
assign tmp_36_fu_553_p2 = (tmp3_fu_547_p2 ^ tmp_36_cast_fu_536_p1);
assign tmp_38_fu_454_p1 = $unsigned(kk_1_reg_227);
assign tmp_39_fu_465_p1 = $unsigned(kk_2_fu_459_p2);
assign tmp_3_i_fu_304_p2 = (tmp_1_i_reg_204 + ap_const_lv10_3FF);
assign tmp_40_fu_329_p2 = (tmp_34_fu_315_p4 ^ tmp_35_fu_325_p1);
assign tmp_41_fu_480_p2 = (tmp_62_reg_901 + ap_const_lv9_11D);
assign tmp_43_fu_485_p1 = $unsigned(tmp_41_fu_480_p2);
assign tmp_44_fu_494_p3 = {{tmp_60_reg_906}, {reg_268}};
assign tmp_45_cast_fu_501_p1 = $unsigned(tmp_44_fu_494_p3);
assign tmp_45_fu_518_p2 = (tmp2_fu_512_p2 ^ tmp_45_cast_fu_501_p1);
assign tmp_48_fu_560_p2 = (tmp_47_reg_238 + ap_const_lv32_1);
assign tmp_49_fu_572_p1 = $signed(tmp_47_reg_238);
assign tmp_4_i_fu_310_p1 = $unsigned(tmp_3_i_fu_304_p2);
assign tmp_50_fu_577_p4 = {{mt_q1[ap_const_lv32_3F : ap_const_lv32_B]}};
assign tmp_51_fu_671_p19 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_65_fu_597_p3}, {ap_const_lv2_0}}}, {tmp_58_fu_605_p4}}}, {ap_const_lv1_0}}}, {tmp_70_fu_615_p3}}}, {ap_const_lv2_0}}}, {tmp_71_fu_623_p3}}}, {ap_const_lv1_0}}}, {tmp_61_fu_631_p4}}}, {ap_const_lv3_0}}}, {tmp_72_fu_641_p3}}}, {ap_const_lv1_0}}}, {tmp_73_fu_649_p3}}}, {ap_const_lv1_0}}}, {tmp_64_fu_657_p4}}}, {ap_const_lv1_0}}}, {tmp_74_fu_667_p1}}}, {ap_const_lv7_0}};
assign tmp_53_cast_fu_711_p1 = $unsigned(tmp_51_fu_671_p19);
assign tmp_53_fu_751_p7 = {{{{{{{{{{tmp_66_fu_721_p4}, {ap_const_lv1_0}}}, {tmp_67_fu_731_p4}}}, {ap_const_lv3_0}}}, {tmp_68_fu_741_p4}}}, {ap_const_lv17_0}};
assign tmp_54_fu_587_p1 = $unsigned(tmp_50_fu_577_p4);
assign tmp_55_cast_fu_767_p1 = $unsigned(tmp_53_fu_751_p7);
assign tmp_55_fu_777_p4 = {{y_3_fu_771_p2[ap_const_lv32_3F : ap_const_lv32_12]}};
assign tmp_56_fu_414_p1 = mt_q1[0:0];
assign tmp_58_fu_605_p4 = {{y_1_fu_591_p2[ap_const_lv32_15 : ap_const_lv32_13]}};
assign tmp_59_fu_525_p1 = mt_q0[0:0];
assign tmp_61_fu_631_p4 = {{y_1_fu_591_p2[ap_const_lv32_C : ap_const_lv32_B]}};
assign tmp_62_fu_470_p1 = kk_1_reg_227[8:0];
assign tmp_63_fu_490_p1 = mt_q0[0:0];
assign tmp_64_fu_657_p4 = {{y_1_fu_591_p2[ap_const_lv32_3 : ap_const_lv32_2]}};
assign tmp_65_fu_597_p3 = y_1_fu_591_p2[ap_const_lv32_18];
assign tmp_66_fu_721_p4 = {{y_2_fu_715_p2[ap_const_lv32_10 : ap_const_lv32_E]}};
assign tmp_67_fu_731_p4 = {{y_2_fu_715_p2[ap_const_lv32_C : ap_const_lv32_7]}};
assign tmp_68_fu_741_p4 = {{y_2_fu_715_p2[ap_const_lv32_3 : ap_const_lv32_2]}};
assign tmp_69_fu_787_p1 = $unsigned(tmp_55_fu_777_p4);
assign tmp_70_fu_615_p3 = y_1_fu_591_p2[ap_const_lv32_11];
assign tmp_71_fu_623_p3 = y_1_fu_591_p2[ap_const_lv32_E];
assign tmp_72_fu_641_p3 = y_1_fu_591_p2[ap_const_lv32_7];
assign tmp_73_fu_649_p3 = y_1_fu_591_p2[ap_const_lv32_5];
assign tmp_74_fu_667_p1 = y_1_fu_591_p2[0:0];
assign tmp_8_i_fu_345_p1 = $unsigned(tmp_1_i_reg_204);
assign tmp_9_i_cast_fu_340_p2 = (grp_fu_335_p2 + tmp_1_i_cast_reg_810);
assign tmp_fu_276_p2 = ($signed(mti_i) > $signed(32'b1001101111)? 1'b1: 1'b0);
assign tmp_i_cast_fu_350_p1 = $unsigned(tmp_9_i_cast_reg_828);
assign tmp_s_fu_282_p2 = (mti_i == ap_const_lv32_271? 1'b1: 1'b0);
assign y_1_fu_591_p2 = (tmp_54_fu_587_p1 ^ mt_q1);
assign y_2_fu_715_p2 = (tmp_53_cast_fu_711_p1 ^ y_1_fu_591_p2);
assign y_3_fu_771_p2 = (tmp_55_cast_fu_767_p1 ^ y_2_fu_715_p2);
assign y_4_fu_791_p2 = (tmp_69_fu_787_p1 ^ y_3_fu_771_p2);
always @ (posedge ap_clk)
begin
    tmp_1_i_cast_reg_810[31:10] <= 22'b0000000000000000000000;
    kk_cast7_reg_838[9:8] <= 2'b00;
    mt_addr_reg_851[9:8] <= 2'b00;
end



endmodule //black_scholes_genrand_int32

