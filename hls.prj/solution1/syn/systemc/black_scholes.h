// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.2
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _black_scholes_HH_
#define _black_scholes_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "black_scholes_black_scholes_iterate.h"
#include "black_scholes_dsub_64ns_64ns_64_5_full_dsp.h"
#include "black_scholes_dadd_64ns_64ns_64_5_full_dsp.h"
#include "black_scholes_dmul_64ns_64ns_64_6_max_dsp.h"
#include "black_scholes_ddiv_64ns_64ns_64_31.h"
#include "black_scholes_sitodp_32ns_64_6.h"
#include "black_scholes_dsqrt_64ns_64ns_64_31.h"

namespace ap_rtl {

struct black_scholes : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<64> > interval_min;
    sc_out< sc_logic > interval_min_ap_vld;
    sc_out< sc_lv<64> > interval_max;
    sc_out< sc_logic > interval_max_ap_vld;
    sc_in< sc_lv<64> > S;
    sc_in< sc_lv<64> > E;
    sc_in< sc_lv<64> > r;
    sc_in< sc_lv<64> > sigma;
    sc_in< sc_lv<64> > T;
    sc_in< sc_lv<32> > M;


    // Module declarations
    black_scholes(sc_module_name name);
    SC_HAS_PROCESS(black_scholes);

    ~black_scholes();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    black_scholes_black_scholes_iterate* grp_black_scholes_black_scholes_iterate_fu_89;
    black_scholes_dsub_64ns_64ns_64_5_full_dsp<28,5,64,64,64>* black_scholes_dsub_64ns_64ns_64_5_full_dsp_U28;
    black_scholes_dadd_64ns_64ns_64_5_full_dsp<29,5,64,64,64>* black_scholes_dadd_64ns_64ns_64_5_full_dsp_U29;
    black_scholes_dmul_64ns_64ns_64_6_max_dsp<30,6,64,64,64>* black_scholes_dmul_64ns_64ns_64_6_max_dsp_U30;
    black_scholes_ddiv_64ns_64ns_64_31<31,31,64,64,64>* black_scholes_ddiv_64ns_64ns_64_31_U31;
    black_scholes_sitodp_32ns_64_6<32,6,32,64>* black_scholes_sitodp_32ns_64_6_U32;
    black_scholes_dsqrt_64ns_64ns_64_31<33,31,64,64,64>* black_scholes_dsqrt_64ns_64ns_64_31_U33;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_lv<64> > grp_fu_126_p1;
    sc_signal< sc_lv<64> > tmp_80_reg_148;
    sc_signal< sc_lv<64> > args_mean_reg_178;
    sc_signal< sc_logic > grp_black_scholes_black_scholes_iterate_fu_89_ap_done;
    sc_signal< sc_lv<64> > args_stdv_reg_184;
    sc_signal< sc_lv<64> > grp_fu_117_p2;
    sc_signal< sc_lv<64> > tmp_s_reg_189;
    sc_signal< sc_lv<64> > grp_fu_130_p2;
    sc_signal< sc_lv<64> > tmp_81_reg_194;
    sc_signal< sc_lv<64> > grp_fu_122_p2;
    sc_signal< sc_lv<64> > conf_width_reg_199;
    sc_signal< sc_logic > grp_black_scholes_black_scholes_iterate_fu_89_ap_start;
    sc_signal< sc_logic > grp_black_scholes_black_scholes_iterate_fu_89_ap_idle;
    sc_signal< sc_logic > grp_black_scholes_black_scholes_iterate_fu_89_ap_ready;
    sc_signal< sc_lv<64> > grp_black_scholes_black_scholes_iterate_fu_89_the_args_S_read;
    sc_signal< sc_lv<64> > grp_black_scholes_black_scholes_iterate_fu_89_the_args_E_read;
    sc_signal< sc_lv<64> > grp_black_scholes_black_scholes_iterate_fu_89_the_args_r_read;
    sc_signal< sc_lv<64> > grp_black_scholes_black_scholes_iterate_fu_89_the_args_sigma_read;
    sc_signal< sc_lv<64> > grp_black_scholes_black_scholes_iterate_fu_89_the_args_T_read;
    sc_signal< sc_lv<64> > grp_black_scholes_black_scholes_iterate_fu_89_ap_return_0;
    sc_signal< sc_lv<64> > grp_black_scholes_black_scholes_iterate_fu_89_ap_return_1;
    sc_signal< sc_logic > grp_black_scholes_black_scholes_iterate_fu_89_ap_start_ap_start_reg;
    sc_signal< sc_lv<64> > grp_fu_107_p2;
    sc_signal< sc_lv<64> > grp_fu_112_p2;
    sc_signal< sc_lv<64> > grp_fu_107_p0;
    sc_signal< sc_lv<64> > grp_fu_107_p1;
    sc_signal< sc_lv<64> > grp_fu_112_p0;
    sc_signal< sc_lv<64> > grp_fu_112_p1;
    sc_signal< sc_lv<64> > grp_fu_117_p0;
    sc_signal< sc_lv<64> > grp_fu_117_p1;
    sc_signal< sc_lv<64> > grp_fu_122_p0;
    sc_signal< sc_lv<64> > grp_fu_122_p1;
    sc_signal< sc_lv<32> > grp_fu_126_p0;
    sc_signal< sc_lv<64> > grp_fu_130_p1;
    sc_signal< sc_logic > grp_fu_107_ce;
    sc_signal< sc_logic > grp_fu_112_ce;
    sc_signal< sc_logic > grp_fu_117_ce;
    sc_signal< sc_logic > grp_fu_122_ce;
    sc_signal< sc_logic > grp_fu_126_ce;
    sc_signal< sc_lv<64> > grp_fu_130_p0;
    sc_signal< sc_logic > grp_fu_130_ce;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_st1_fsm_0;
    static const sc_lv<7> ap_ST_st2_fsm_1;
    static const sc_lv<7> ap_ST_st3_fsm_2;
    static const sc_lv<7> ap_ST_st4_fsm_3;
    static const sc_lv<7> ap_ST_st5_fsm_4;
    static const sc_lv<7> ap_ST_st6_fsm_5;
    static const sc_lv<7> ap_ST_st7_fsm_6;
    static const sc_lv<7> ap_ST_st8_fsm_7;
    static const sc_lv<7> ap_ST_st9_fsm_8;
    static const sc_lv<7> ap_ST_st10_fsm_9;
    static const sc_lv<7> ap_ST_st11_fsm_10;
    static const sc_lv<7> ap_ST_st12_fsm_11;
    static const sc_lv<7> ap_ST_st13_fsm_12;
    static const sc_lv<7> ap_ST_st14_fsm_13;
    static const sc_lv<7> ap_ST_st15_fsm_14;
    static const sc_lv<7> ap_ST_st16_fsm_15;
    static const sc_lv<7> ap_ST_st17_fsm_16;
    static const sc_lv<7> ap_ST_st18_fsm_17;
    static const sc_lv<7> ap_ST_st19_fsm_18;
    static const sc_lv<7> ap_ST_st20_fsm_19;
    static const sc_lv<7> ap_ST_st21_fsm_20;
    static const sc_lv<7> ap_ST_st22_fsm_21;
    static const sc_lv<7> ap_ST_st23_fsm_22;
    static const sc_lv<7> ap_ST_st24_fsm_23;
    static const sc_lv<7> ap_ST_st25_fsm_24;
    static const sc_lv<7> ap_ST_st26_fsm_25;
    static const sc_lv<7> ap_ST_st27_fsm_26;
    static const sc_lv<7> ap_ST_st28_fsm_27;
    static const sc_lv<7> ap_ST_st29_fsm_28;
    static const sc_lv<7> ap_ST_st30_fsm_29;
    static const sc_lv<7> ap_ST_st31_fsm_30;
    static const sc_lv<7> ap_ST_st32_fsm_31;
    static const sc_lv<7> ap_ST_st33_fsm_32;
    static const sc_lv<7> ap_ST_st34_fsm_33;
    static const sc_lv<7> ap_ST_st35_fsm_34;
    static const sc_lv<7> ap_ST_st36_fsm_35;
    static const sc_lv<7> ap_ST_st37_fsm_36;
    static const sc_lv<7> ap_ST_st38_fsm_37;
    static const sc_lv<7> ap_ST_st39_fsm_38;
    static const sc_lv<7> ap_ST_st40_fsm_39;
    static const sc_lv<7> ap_ST_st41_fsm_40;
    static const sc_lv<7> ap_ST_st42_fsm_41;
    static const sc_lv<7> ap_ST_st43_fsm_42;
    static const sc_lv<7> ap_ST_st44_fsm_43;
    static const sc_lv<7> ap_ST_st45_fsm_44;
    static const sc_lv<7> ap_ST_st46_fsm_45;
    static const sc_lv<7> ap_ST_st47_fsm_46;
    static const sc_lv<7> ap_ST_st48_fsm_47;
    static const sc_lv<7> ap_ST_st49_fsm_48;
    static const sc_lv<7> ap_ST_st50_fsm_49;
    static const sc_lv<7> ap_ST_st51_fsm_50;
    static const sc_lv<7> ap_ST_st52_fsm_51;
    static const sc_lv<7> ap_ST_st53_fsm_52;
    static const sc_lv<7> ap_ST_st54_fsm_53;
    static const sc_lv<7> ap_ST_st55_fsm_54;
    static const sc_lv<7> ap_ST_st56_fsm_55;
    static const sc_lv<7> ap_ST_st57_fsm_56;
    static const sc_lv<7> ap_ST_st58_fsm_57;
    static const sc_lv<7> ap_ST_st59_fsm_58;
    static const sc_lv<7> ap_ST_st60_fsm_59;
    static const sc_lv<7> ap_ST_st61_fsm_60;
    static const sc_lv<7> ap_ST_st62_fsm_61;
    static const sc_lv<7> ap_ST_st63_fsm_62;
    static const sc_lv<7> ap_ST_st64_fsm_63;
    static const sc_lv<7> ap_ST_st65_fsm_64;
    static const sc_lv<7> ap_ST_st66_fsm_65;
    static const sc_lv<7> ap_ST_st67_fsm_66;
    static const sc_lv<7> ap_ST_st68_fsm_67;
    static const sc_lv<7> ap_ST_st69_fsm_68;
    static const sc_lv<7> ap_ST_st70_fsm_69;
    static const sc_lv<7> ap_ST_st71_fsm_70;
    static const sc_lv<7> ap_ST_st72_fsm_71;
    static const sc_lv<7> ap_ST_st73_fsm_72;
    static const sc_lv<64> ap_const_lv64_3FFF5C28F5C28F5C;
    static const sc_lv<64> ap_const_lv64_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_grp_black_scholes_black_scholes_iterate_fu_89_ap_start();
    void thread_grp_black_scholes_black_scholes_iterate_fu_89_the_args_E_read();
    void thread_grp_black_scholes_black_scholes_iterate_fu_89_the_args_S_read();
    void thread_grp_black_scholes_black_scholes_iterate_fu_89_the_args_T_read();
    void thread_grp_black_scholes_black_scholes_iterate_fu_89_the_args_r_read();
    void thread_grp_black_scholes_black_scholes_iterate_fu_89_the_args_sigma_read();
    void thread_grp_fu_107_ce();
    void thread_grp_fu_107_p0();
    void thread_grp_fu_107_p1();
    void thread_grp_fu_112_ce();
    void thread_grp_fu_112_p0();
    void thread_grp_fu_112_p1();
    void thread_grp_fu_117_ce();
    void thread_grp_fu_117_p0();
    void thread_grp_fu_117_p1();
    void thread_grp_fu_122_ce();
    void thread_grp_fu_122_p0();
    void thread_grp_fu_122_p1();
    void thread_grp_fu_126_ce();
    void thread_grp_fu_126_p0();
    void thread_grp_fu_130_ce();
    void thread_grp_fu_130_p0();
    void thread_grp_fu_130_p1();
    void thread_interval_max();
    void thread_interval_max_ap_vld();
    void thread_interval_min();
    void thread_interval_min_ap_vld();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
