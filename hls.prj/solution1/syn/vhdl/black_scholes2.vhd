-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2014.2
-- Copyright (C) 2014 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity black_scholes2 is
port (
    S : IN STD_LOGIC_VECTOR (63 downto 0);
    E : IN STD_LOGIC_VECTOR (63 downto 0);
    r : IN STD_LOGIC_VECTOR (63 downto 0);
    sigma : IN STD_LOGIC_VECTOR (63 downto 0);
    T : IN STD_LOGIC_VECTOR (63 downto 0);
    gaussian_random_number : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_return : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_done : OUT STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC );
end;


architecture behav of black_scholes2 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "black_scholes2,hls_ip_2014_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=8.623000,HLS_SYN_LAT=43,HLS_SYN_TPT=32,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=0}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_true : BOOLEAN := true;

    signal black_scholes2_mult2_11_U0_ap_start : STD_LOGIC;
    signal black_scholes2_mult2_11_U0_ap_done : STD_LOGIC;
    signal black_scholes2_mult2_11_U0_ap_continue : STD_LOGIC;
    signal black_scholes2_mult2_11_U0_ap_idle : STD_LOGIC;
    signal black_scholes2_mult2_11_U0_ap_ready : STD_LOGIC;
    signal black_scholes2_mult2_11_U0_return_r : STD_LOGIC_VECTOR (63 downto 0);
    signal black_scholes2_mult2_11_U0_return_r_ap_vld : STD_LOGIC;
    signal black_scholes2_mult2_11_U0_a : STD_LOGIC_VECTOR (63 downto 0);
    signal black_scholes2_mult2_11_U0_b : STD_LOGIC_VECTOR (63 downto 0);
    signal black_scholes2_mult2_11_U0_a_out_din : STD_LOGIC_VECTOR (63 downto 0);
    signal black_scholes2_mult2_11_U0_a_out_full_n : STD_LOGIC;
    signal black_scholes2_mult2_11_U0_a_out_write : STD_LOGIC;
    signal ap_chn_write_black_scholes2_mult2_11_U0_p_channel35 : STD_LOGIC;
    signal p_channel35_full_n : STD_LOGIC;
    signal black_scholes2_div_1_U0_ap_start : STD_LOGIC;
    signal black_scholes2_div_1_U0_ap_done : STD_LOGIC;
    signal black_scholes2_div_1_U0_ap_continue : STD_LOGIC;
    signal black_scholes2_div_1_U0_ap_idle : STD_LOGIC;
    signal black_scholes2_div_1_U0_ap_ready : STD_LOGIC;
    signal black_scholes2_div_1_U0_a_2 : STD_LOGIC_VECTOR (63 downto 0);
    signal black_scholes2_div_1_U0_a_2_ap_vld : STD_LOGIC;
    signal black_scholes2_div_1_U0_a : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_chn_write_black_scholes2_div_1_U0_tmp_1_channel : STD_LOGIC;
    signal tmp_1_channel_full_n : STD_LOGIC;
    signal black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_start : STD_LOGIC;
    signal black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_done : STD_LOGIC;
    signal black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_continue : STD_LOGIC;
    signal black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_idle : STD_LOGIC;
    signal black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_ready : STD_LOGIC;
    signal black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_r : STD_LOGIC_VECTOR (63 downto 0);
    signal black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_tmp_1 : STD_LOGIC_VECTOR (63 downto 0);
    signal black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_r_out_din : STD_LOGIC_VECTOR (63 downto 0);
    signal black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_r_out_full_n : STD_LOGIC;
    signal black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_r_out_write : STD_LOGIC;
    signal black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_chn_write_black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_tmp_2_loc_channel : STD_LOGIC;
    signal tmp_2_loc_channel_full_n : STD_LOGIC;
    signal black_scholes2_mult2_12_U0_ap_start : STD_LOGIC;
    signal black_scholes2_mult2_12_U0_ap_done : STD_LOGIC;
    signal black_scholes2_mult2_12_U0_ap_continue : STD_LOGIC;
    signal black_scholes2_mult2_12_U0_ap_idle : STD_LOGIC;
    signal black_scholes2_mult2_12_U0_ap_ready : STD_LOGIC;
    signal black_scholes2_mult2_12_U0_return_r : STD_LOGIC_VECTOR (63 downto 0);
    signal black_scholes2_mult2_12_U0_return_r_ap_vld : STD_LOGIC;
    signal black_scholes2_mult2_12_U0_p_read : STD_LOGIC_VECTOR (63 downto 0);
    signal black_scholes2_mult2_12_U0_b : STD_LOGIC_VECTOR (63 downto 0);
    signal black_scholes2_mult2_12_U0_b_out_din : STD_LOGIC_VECTOR (63 downto 0);
    signal black_scholes2_mult2_12_U0_b_out_full_n : STD_LOGIC;
    signal black_scholes2_mult2_12_U0_b_out_write : STD_LOGIC;
    signal ap_chn_write_black_scholes2_mult2_12_U0_p_channel36 : STD_LOGIC;
    signal p_channel36_full_n : STD_LOGIC;
    signal black_scholes2_mult2_11_1_U0_ap_start : STD_LOGIC;
    signal black_scholes2_mult2_11_1_U0_ap_done : STD_LOGIC;
    signal black_scholes2_mult2_11_1_U0_ap_continue : STD_LOGIC;
    signal black_scholes2_mult2_11_1_U0_ap_idle : STD_LOGIC;
    signal black_scholes2_mult2_11_1_U0_ap_ready : STD_LOGIC;
    signal black_scholes2_mult2_11_1_U0_return_r : STD_LOGIC_VECTOR (63 downto 0);
    signal black_scholes2_mult2_11_1_U0_return_r_ap_vld : STD_LOGIC;
    signal black_scholes2_mult2_11_1_U0_a_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal black_scholes2_mult2_11_1_U0_a_empty_n : STD_LOGIC;
    signal black_scholes2_mult2_11_1_U0_a_read : STD_LOGIC;
    signal black_scholes2_mult2_11_1_U0_b : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_chn_write_black_scholes2_mult2_11_1_U0_p_channel37 : STD_LOGIC;
    signal p_channel37_full_n : STD_LOGIC;
    signal black_scholes2_sqrt1_U0_ap_start : STD_LOGIC := '0';
    signal black_scholes2_sqrt1_U0_ap_done : STD_LOGIC;
    signal black_scholes2_sqrt1_U0_ap_continue : STD_LOGIC;
    signal black_scholes2_sqrt1_U0_ap_idle : STD_LOGIC;
    signal black_scholes2_sqrt1_U0_ap_ready : STD_LOGIC;
    signal black_scholes2_sqrt1_U0_return_r : STD_LOGIC_VECTOR (63 downto 0);
    signal black_scholes2_sqrt1_U0_return_r_ap_vld : STD_LOGIC;
    signal black_scholes2_sqrt1_U0_a_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal black_scholes2_sqrt1_U0_a_empty_n : STD_LOGIC;
    signal black_scholes2_sqrt1_U0_a_read : STD_LOGIC;
    signal black_scholes2_sqrt1_U0_a_out_din : STD_LOGIC_VECTOR (63 downto 0);
    signal black_scholes2_sqrt1_U0_a_out_full_n : STD_LOGIC;
    signal black_scholes2_sqrt1_U0_a_out_write : STD_LOGIC;
    signal ap_chn_write_black_scholes2_sqrt1_U0_p_channel38 : STD_LOGIC;
    signal p_channel38_full_n : STD_LOGIC;
    signal black_scholes2_mult2_11_2_U0_ap_start : STD_LOGIC;
    signal black_scholes2_mult2_11_2_U0_ap_done : STD_LOGIC;
    signal black_scholes2_mult2_11_2_U0_ap_continue : STD_LOGIC;
    signal black_scholes2_mult2_11_2_U0_ap_idle : STD_LOGIC;
    signal black_scholes2_mult2_11_2_U0_ap_ready : STD_LOGIC;
    signal black_scholes2_mult2_11_2_U0_return_r : STD_LOGIC_VECTOR (63 downto 0);
    signal black_scholes2_mult2_11_2_U0_return_r_ap_vld : STD_LOGIC;
    signal black_scholes2_mult2_11_2_U0_a : STD_LOGIC_VECTOR (63 downto 0);
    signal black_scholes2_mult2_11_2_U0_b : STD_LOGIC_VECTOR (63 downto 0);
    signal black_scholes2_mult2_11_2_U0_a_out_din : STD_LOGIC_VECTOR (63 downto 0);
    signal black_scholes2_mult2_11_2_U0_a_out_full_n : STD_LOGIC;
    signal black_scholes2_mult2_11_2_U0_a_out_write : STD_LOGIC;
    signal ap_chn_write_black_scholes2_mult2_11_2_U0_p_channel39 : STD_LOGIC;
    signal p_channel39_full_n : STD_LOGIC;
    signal black_scholes2_black_scholes2_Block_crit_edge111_proc_U0_ap_start : STD_LOGIC;
    signal black_scholes2_black_scholes2_Block_crit_edge111_proc_U0_ap_done : STD_LOGIC;
    signal black_scholes2_black_scholes2_Block_crit_edge111_proc_U0_ap_continue : STD_LOGIC;
    signal black_scholes2_black_scholes2_Block_crit_edge111_proc_U0_ap_idle : STD_LOGIC;
    signal black_scholes2_black_scholes2_Block_crit_edge111_proc_U0_ap_ready : STD_LOGIC;
    signal black_scholes2_black_scholes2_Block_crit_edge111_proc_U0_tmp_3 : STD_LOGIC_VECTOR (63 downto 0);
    signal black_scholes2_black_scholes2_Block_crit_edge111_proc_U0_tmp2_1 : STD_LOGIC_VECTOR (63 downto 0);
    signal black_scholes2_black_scholes2_Block_crit_edge111_proc_U0_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_chn_write_black_scholes2_black_scholes2_Block_crit_edge111_proc_U0_tmp3_loc_channel : STD_LOGIC;
    signal tmp3_loc_channel_full_n : STD_LOGIC;
    signal black_scholes2_expo11_U0_ap_start : STD_LOGIC;
    signal black_scholes2_expo11_U0_ap_done : STD_LOGIC;
    signal black_scholes2_expo11_U0_ap_continue : STD_LOGIC;
    signal black_scholes2_expo11_U0_ap_idle : STD_LOGIC;
    signal black_scholes2_expo11_U0_ap_ready : STD_LOGIC;
    signal black_scholes2_expo11_U0_return_r : STD_LOGIC_VECTOR (63 downto 0);
    signal black_scholes2_expo11_U0_return_r_ap_vld : STD_LOGIC;
    signal black_scholes2_expo11_U0_p_read : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_chn_write_black_scholes2_expo11_U0_p_channel40 : STD_LOGIC;
    signal p_channel40_full_n : STD_LOGIC;
    signal black_scholes2_mult2_11_3_U0_ap_start : STD_LOGIC;
    signal black_scholes2_mult2_11_3_U0_ap_done : STD_LOGIC;
    signal black_scholes2_mult2_11_3_U0_ap_continue : STD_LOGIC;
    signal black_scholes2_mult2_11_3_U0_ap_idle : STD_LOGIC;
    signal black_scholes2_mult2_11_3_U0_ap_ready : STD_LOGIC;
    signal black_scholes2_mult2_11_3_U0_return_r : STD_LOGIC_VECTOR (63 downto 0);
    signal black_scholes2_mult2_11_3_U0_return_r_ap_vld : STD_LOGIC;
    signal black_scholes2_mult2_11_3_U0_a : STD_LOGIC_VECTOR (63 downto 0);
    signal black_scholes2_mult2_11_3_U0_b : STD_LOGIC_VECTOR (63 downto 0);
    signal black_scholes2_mult2_11_3_U0_a_out_din : STD_LOGIC_VECTOR (63 downto 0);
    signal black_scholes2_mult2_11_3_U0_a_out_full_n : STD_LOGIC;
    signal black_scholes2_mult2_11_3_U0_a_out_write : STD_LOGIC;
    signal ap_chn_write_black_scholes2_mult2_11_3_U0_p_channel41 : STD_LOGIC;
    signal p_channel41_full_n : STD_LOGIC;
    signal black_scholes2_black_scholes2_Block_crit_edge115_proc_U0_ap_start : STD_LOGIC := '0';
    signal black_scholes2_black_scholes2_Block_crit_edge115_proc_U0_ap_done : STD_LOGIC;
    signal black_scholes2_black_scholes2_Block_crit_edge115_proc_U0_ap_continue : STD_LOGIC;
    signal black_scholes2_black_scholes2_Block_crit_edge115_proc_U0_ap_idle : STD_LOGIC;
    signal black_scholes2_black_scholes2_Block_crit_edge115_proc_U0_ap_ready : STD_LOGIC;
    signal black_scholes2_black_scholes2_Block_crit_edge115_proc_U0_r_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal black_scholes2_black_scholes2_Block_crit_edge115_proc_U0_r_empty_n : STD_LOGIC;
    signal black_scholes2_black_scholes2_Block_crit_edge115_proc_U0_r_read : STD_LOGIC;
    signal black_scholes2_black_scholes2_Block_crit_edge115_proc_U0_T_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal black_scholes2_black_scholes2_Block_crit_edge115_proc_U0_T_empty_n : STD_LOGIC;
    signal black_scholes2_black_scholes2_Block_crit_edge115_proc_U0_T_read : STD_LOGIC;
    signal black_scholes2_black_scholes2_Block_crit_edge115_proc_U0_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_chn_write_black_scholes2_black_scholes2_Block_crit_edge115_proc_U0_call_ret : STD_LOGIC;
    signal call_ret_full_n : STD_LOGIC;
    signal black_scholes2_expo12_U0_ap_start : STD_LOGIC;
    signal black_scholes2_expo12_U0_ap_done : STD_LOGIC;
    signal black_scholes2_expo12_U0_ap_continue : STD_LOGIC;
    signal black_scholes2_expo12_U0_ap_idle : STD_LOGIC;
    signal black_scholes2_expo12_U0_ap_ready : STD_LOGIC;
    signal black_scholes2_expo12_U0_return_r : STD_LOGIC_VECTOR (63 downto 0);
    signal black_scholes2_expo12_U0_return_r_ap_vld : STD_LOGIC;
    signal black_scholes2_expo12_U0_p_read : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_chn_write_black_scholes2_expo12_U0_p_channel42 : STD_LOGIC;
    signal p_channel42_full_n : STD_LOGIC;
    signal black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_start : STD_LOGIC;
    signal black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_done : STD_LOGIC;
    signal black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_continue : STD_LOGIC;
    signal black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_idle : STD_LOGIC;
    signal black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_ready : STD_LOGIC;
    signal black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_tmp3_2 : STD_LOGIC_VECTOR (63 downto 0);
    signal black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_E : STD_LOGIC_VECTOR (63 downto 0);
    signal black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_tmp4 : STD_LOGIC_VECTOR (63 downto 0);
    signal black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_chn_write_black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_tmp4_1_loc_channel : STD_LOGIC;
    signal tmp4_1_loc_channel_full_n : STD_LOGIC;
    signal black_scholes2_black_scholes2_Block_crit_edge_proc_U0_ap_start : STD_LOGIC;
    signal black_scholes2_black_scholes2_Block_crit_edge_proc_U0_ap_done : STD_LOGIC;
    signal black_scholes2_black_scholes2_Block_crit_edge_proc_U0_ap_continue : STD_LOGIC;
    signal black_scholes2_black_scholes2_Block_crit_edge_proc_U0_ap_idle : STD_LOGIC;
    signal black_scholes2_black_scholes2_Block_crit_edge_proc_U0_ap_ready : STD_LOGIC;
    signal black_scholes2_black_scholes2_Block_crit_edge_proc_U0_p_read : STD_LOGIC_VECTOR (63 downto 0);
    signal black_scholes2_black_scholes2_Block_crit_edge_proc_U0_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_hs_continue : STD_LOGIC;
    signal p_channel35_U_ap_dummy_ce : STD_LOGIC;
    signal p_channel35_din : STD_LOGIC_VECTOR (63 downto 0);
    signal p_channel35_write : STD_LOGIC;
    signal p_channel35_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal p_channel35_empty_n : STD_LOGIC;
    signal p_channel35_read : STD_LOGIC;
    signal sigma_channel_channel_U_ap_dummy_ce : STD_LOGIC;
    signal sigma_channel_channel_din : STD_LOGIC_VECTOR (63 downto 0);
    signal sigma_channel_channel_full_n : STD_LOGIC;
    signal sigma_channel_channel_write : STD_LOGIC;
    signal sigma_channel_channel_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal sigma_channel_channel_empty_n : STD_LOGIC;
    signal sigma_channel_channel_read : STD_LOGIC;
    signal tmp_1_channel_U_ap_dummy_ce : STD_LOGIC;
    signal tmp_1_channel_din : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_channel_write : STD_LOGIC;
    signal tmp_1_channel_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_channel_empty_n : STD_LOGIC;
    signal tmp_1_channel_read : STD_LOGIC;
    signal r_channel_channel_U_ap_dummy_ce : STD_LOGIC;
    signal r_channel_channel_din : STD_LOGIC_VECTOR (63 downto 0);
    signal r_channel_channel_full_n : STD_LOGIC;
    signal r_channel_channel_write : STD_LOGIC;
    signal r_channel_channel_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal r_channel_channel_empty_n : STD_LOGIC;
    signal r_channel_channel_read : STD_LOGIC;
    signal tmp_2_loc_channel_U_ap_dummy_ce : STD_LOGIC;
    signal tmp_2_loc_channel_din : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_2_loc_channel_write : STD_LOGIC;
    signal tmp_2_loc_channel_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_2_loc_channel_empty_n : STD_LOGIC;
    signal tmp_2_loc_channel_read : STD_LOGIC;
    signal p_channel36_U_ap_dummy_ce : STD_LOGIC;
    signal p_channel36_din : STD_LOGIC_VECTOR (63 downto 0);
    signal p_channel36_write : STD_LOGIC;
    signal p_channel36_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal p_channel36_empty_n : STD_LOGIC;
    signal p_channel36_read : STD_LOGIC;
    signal T_channel_channel_U_ap_dummy_ce : STD_LOGIC;
    signal T_channel_channel_din : STD_LOGIC_VECTOR (63 downto 0);
    signal T_channel_channel_full_n : STD_LOGIC;
    signal T_channel_channel_write : STD_LOGIC;
    signal T_channel_channel_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal T_channel_channel_empty_n : STD_LOGIC;
    signal T_channel_channel_read : STD_LOGIC;
    signal p_channel37_U_ap_dummy_ce : STD_LOGIC;
    signal p_channel37_din : STD_LOGIC_VECTOR (63 downto 0);
    signal p_channel37_write : STD_LOGIC;
    signal p_channel37_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal p_channel37_empty_n : STD_LOGIC;
    signal p_channel37_read : STD_LOGIC;
    signal p_channel38_U_ap_dummy_ce : STD_LOGIC;
    signal p_channel38_din : STD_LOGIC_VECTOR (63 downto 0);
    signal p_channel38_write : STD_LOGIC;
    signal p_channel38_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal p_channel38_empty_n : STD_LOGIC;
    signal p_channel38_read : STD_LOGIC;
    signal T_channel31_channel_U_ap_dummy_ce : STD_LOGIC;
    signal T_channel31_channel_din : STD_LOGIC_VECTOR (63 downto 0);
    signal T_channel31_channel_full_n : STD_LOGIC;
    signal T_channel31_channel_write : STD_LOGIC;
    signal T_channel31_channel_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal T_channel31_channel_empty_n : STD_LOGIC;
    signal T_channel31_channel_read : STD_LOGIC;
    signal p_channel39_U_ap_dummy_ce : STD_LOGIC;
    signal p_channel39_din : STD_LOGIC_VECTOR (63 downto 0);
    signal p_channel39_write : STD_LOGIC;
    signal p_channel39_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal p_channel39_empty_n : STD_LOGIC;
    signal p_channel39_read : STD_LOGIC;
    signal tmp3_loc_channel_U_ap_dummy_ce : STD_LOGIC;
    signal tmp3_loc_channel_din : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp3_loc_channel_write : STD_LOGIC;
    signal tmp3_loc_channel_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp3_loc_channel_empty_n : STD_LOGIC;
    signal tmp3_loc_channel_read : STD_LOGIC;
    signal p_channel40_U_ap_dummy_ce : STD_LOGIC;
    signal p_channel40_din : STD_LOGIC_VECTOR (63 downto 0);
    signal p_channel40_write : STD_LOGIC;
    signal p_channel40_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal p_channel40_empty_n : STD_LOGIC;
    signal p_channel40_read : STD_LOGIC;
    signal p_channel41_U_ap_dummy_ce : STD_LOGIC;
    signal p_channel41_din : STD_LOGIC_VECTOR (63 downto 0);
    signal p_channel41_write : STD_LOGIC;
    signal p_channel41_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal p_channel41_empty_n : STD_LOGIC;
    signal p_channel41_read : STD_LOGIC;
    signal call_ret_U_ap_dummy_ce : STD_LOGIC;
    signal call_ret_din : STD_LOGIC_VECTOR (63 downto 0);
    signal call_ret_write : STD_LOGIC;
    signal call_ret_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal call_ret_empty_n : STD_LOGIC;
    signal call_ret_read : STD_LOGIC;
    signal p_channel42_U_ap_dummy_ce : STD_LOGIC;
    signal p_channel42_din : STD_LOGIC_VECTOR (63 downto 0);
    signal p_channel42_write : STD_LOGIC;
    signal p_channel42_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal p_channel42_empty_n : STD_LOGIC;
    signal p_channel42_read : STD_LOGIC;
    signal tmp4_1_loc_channel_U_ap_dummy_ce : STD_LOGIC;
    signal tmp4_1_loc_channel_din : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp4_1_loc_channel_write : STD_LOGIC;
    signal tmp4_1_loc_channel_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp4_1_loc_channel_empty_n : STD_LOGIC;
    signal tmp4_1_loc_channel_read : STD_LOGIC;
    signal ap_reg_procdone_black_scholes2_mult2_11_U0 : STD_LOGIC := '0';
    signal ap_sig_hs_done : STD_LOGIC;
    signal ap_reg_procdone_black_scholes2_div_1_U0 : STD_LOGIC := '0';
    signal ap_reg_procdone_black_scholes2_black_scholes2_Block_crit_edge14_proc_U0 : STD_LOGIC := '0';
    signal ap_reg_procdone_black_scholes2_mult2_12_U0 : STD_LOGIC := '0';
    signal ap_reg_procdone_black_scholes2_mult2_11_1_U0 : STD_LOGIC := '0';
    signal ap_reg_procdone_black_scholes2_sqrt1_U0 : STD_LOGIC := '0';
    signal ap_reg_procdone_black_scholes2_mult2_11_2_U0 : STD_LOGIC := '0';
    signal ap_reg_procdone_black_scholes2_black_scholes2_Block_crit_edge111_proc_U0 : STD_LOGIC := '0';
    signal ap_reg_procdone_black_scholes2_expo11_U0 : STD_LOGIC := '0';
    signal ap_reg_procdone_black_scholes2_mult2_11_3_U0 : STD_LOGIC := '0';
    signal ap_reg_procdone_black_scholes2_black_scholes2_Block_crit_edge115_proc_U0 : STD_LOGIC := '0';
    signal ap_reg_procdone_black_scholes2_expo12_U0 : STD_LOGIC := '0';
    signal ap_reg_procdone_black_scholes2_black_scholes2_Block_crit_edge117_proc_U0 : STD_LOGIC := '0';
    signal ap_reg_procdone_black_scholes2_black_scholes2_Block_crit_edge_proc_U0 : STD_LOGIC := '0';
    signal ap_CS : STD_LOGIC;
    signal ap_sig_top_allready : STD_LOGIC;
    signal ap_reg_ready_black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sig_ready_black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_ready : STD_LOGIC;
    signal ap_sig_start_in_black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_start : STD_LOGIC;
    signal ap_reg_ready_black_scholes2_mult2_12_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sig_ready_black_scholes2_mult2_12_U0_ap_ready : STD_LOGIC;
    signal ap_sig_start_in_black_scholes2_mult2_12_U0_ap_start : STD_LOGIC;
    signal ap_reg_ready_black_scholes2_mult2_11_3_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sig_ready_black_scholes2_mult2_11_3_U0_ap_ready : STD_LOGIC;
    signal ap_sig_start_in_black_scholes2_mult2_11_3_U0_ap_start : STD_LOGIC;
    signal ap_reg_ready_black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sig_ready_black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_ready : STD_LOGIC;
    signal ap_sig_start_in_black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_start : STD_LOGIC;
    signal ap_reg_ready_black_scholes2_mult2_11_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sig_ready_black_scholes2_mult2_11_U0_ap_ready : STD_LOGIC;
    signal ap_sig_start_in_black_scholes2_mult2_11_U0_ap_start : STD_LOGIC;
    signal ap_reg_ready_black_scholes2_mult2_11_1_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sig_ready_black_scholes2_mult2_11_1_U0_ap_ready : STD_LOGIC;
    signal ap_sig_start_in_black_scholes2_mult2_11_1_U0_ap_start : STD_LOGIC;

    component black_scholes2_mult2_11 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        return_r : OUT STD_LOGIC_VECTOR (63 downto 0);
        return_r_ap_vld : OUT STD_LOGIC;
        a : IN STD_LOGIC_VECTOR (63 downto 0);
        b : IN STD_LOGIC_VECTOR (63 downto 0);
        a_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        a_out_full_n : IN STD_LOGIC;
        a_out_write : OUT STD_LOGIC );
    end component;


    component black_scholes2_div_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        a_2 : OUT STD_LOGIC_VECTOR (63 downto 0);
        a_2_ap_vld : OUT STD_LOGIC;
        a : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component black_scholes2_black_scholes2_Block_crit_edge14_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        r : IN STD_LOGIC_VECTOR (63 downto 0);
        tmp_1 : IN STD_LOGIC_VECTOR (63 downto 0);
        r_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        r_out_full_n : IN STD_LOGIC;
        r_out_write : OUT STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component black_scholes2_mult2_12 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        return_r : OUT STD_LOGIC_VECTOR (63 downto 0);
        return_r_ap_vld : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (63 downto 0);
        b : IN STD_LOGIC_VECTOR (63 downto 0);
        b_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        b_out_full_n : IN STD_LOGIC;
        b_out_write : OUT STD_LOGIC );
    end component;


    component black_scholes2_mult2_11_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        return_r : OUT STD_LOGIC_VECTOR (63 downto 0);
        return_r_ap_vld : OUT STD_LOGIC;
        a_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        a_empty_n : IN STD_LOGIC;
        a_read : OUT STD_LOGIC;
        b : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component black_scholes2_sqrt1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        return_r : OUT STD_LOGIC_VECTOR (63 downto 0);
        return_r_ap_vld : OUT STD_LOGIC;
        a_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        a_empty_n : IN STD_LOGIC;
        a_read : OUT STD_LOGIC;
        a_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        a_out_full_n : IN STD_LOGIC;
        a_out_write : OUT STD_LOGIC );
    end component;


    component black_scholes2_mult2_11_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        return_r : OUT STD_LOGIC_VECTOR (63 downto 0);
        return_r_ap_vld : OUT STD_LOGIC;
        a : IN STD_LOGIC_VECTOR (63 downto 0);
        b : IN STD_LOGIC_VECTOR (63 downto 0);
        a_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        a_out_full_n : IN STD_LOGIC;
        a_out_write : OUT STD_LOGIC );
    end component;


    component black_scholes2_black_scholes2_Block_crit_edge111_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        tmp_3 : IN STD_LOGIC_VECTOR (63 downto 0);
        tmp2_1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component black_scholes2_expo11 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        return_r : OUT STD_LOGIC_VECTOR (63 downto 0);
        return_r_ap_vld : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component black_scholes2_mult2_11_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        return_r : OUT STD_LOGIC_VECTOR (63 downto 0);
        return_r_ap_vld : OUT STD_LOGIC;
        a : IN STD_LOGIC_VECTOR (63 downto 0);
        b : IN STD_LOGIC_VECTOR (63 downto 0);
        a_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        a_out_full_n : IN STD_LOGIC;
        a_out_write : OUT STD_LOGIC );
    end component;


    component black_scholes2_black_scholes2_Block_crit_edge115_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        r_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        r_empty_n : IN STD_LOGIC;
        r_read : OUT STD_LOGIC;
        T_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        T_empty_n : IN STD_LOGIC;
        T_read : OUT STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component black_scholes2_expo12 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        return_r : OUT STD_LOGIC_VECTOR (63 downto 0);
        return_r_ap_vld : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component black_scholes2_black_scholes2_Block_crit_edge117_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        tmp3_2 : IN STD_LOGIC_VECTOR (63 downto 0);
        E : IN STD_LOGIC_VECTOR (63 downto 0);
        tmp4 : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component black_scholes2_black_scholes2_Block_crit_edge_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component FIFO_black_scholes2_p_channel35 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_black_scholes2_sigma_channel_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_black_scholes2_tmp_1_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_black_scholes2_r_channel_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_black_scholes2_tmp_2_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_black_scholes2_p_channel36 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_black_scholes2_T_channel_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_black_scholes2_p_channel37 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_black_scholes2_p_channel38 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_black_scholes2_T_channel31_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_black_scholes2_p_channel39 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_black_scholes2_tmp3_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_black_scholes2_p_channel40 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_black_scholes2_p_channel41 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_black_scholes2_call_ret IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_black_scholes2_p_channel42 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_black_scholes2_tmp4_1_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    black_scholes2_mult2_11_U0 : component black_scholes2_mult2_11
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => black_scholes2_mult2_11_U0_ap_start,
        ap_done => black_scholes2_mult2_11_U0_ap_done,
        ap_continue => black_scholes2_mult2_11_U0_ap_continue,
        ap_idle => black_scholes2_mult2_11_U0_ap_idle,
        ap_ready => black_scholes2_mult2_11_U0_ap_ready,
        return_r => black_scholes2_mult2_11_U0_return_r,
        return_r_ap_vld => black_scholes2_mult2_11_U0_return_r_ap_vld,
        a => black_scholes2_mult2_11_U0_a,
        b => black_scholes2_mult2_11_U0_b,
        a_out_din => black_scholes2_mult2_11_U0_a_out_din,
        a_out_full_n => black_scholes2_mult2_11_U0_a_out_full_n,
        a_out_write => black_scholes2_mult2_11_U0_a_out_write);

    black_scholes2_div_1_U0 : component black_scholes2_div_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => black_scholes2_div_1_U0_ap_start,
        ap_done => black_scholes2_div_1_U0_ap_done,
        ap_continue => black_scholes2_div_1_U0_ap_continue,
        ap_idle => black_scholes2_div_1_U0_ap_idle,
        ap_ready => black_scholes2_div_1_U0_ap_ready,
        a_2 => black_scholes2_div_1_U0_a_2,
        a_2_ap_vld => black_scholes2_div_1_U0_a_2_ap_vld,
        a => black_scholes2_div_1_U0_a);

    black_scholes2_black_scholes2_Block_crit_edge14_proc_U0 : component black_scholes2_black_scholes2_Block_crit_edge14_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_start,
        ap_done => black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_done,
        ap_continue => black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_continue,
        ap_idle => black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_idle,
        ap_ready => black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_ready,
        r => black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_r,
        tmp_1 => black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_tmp_1,
        r_out_din => black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_r_out_din,
        r_out_full_n => black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_r_out_full_n,
        r_out_write => black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_r_out_write,
        ap_return => black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_return);

    black_scholes2_mult2_12_U0 : component black_scholes2_mult2_12
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => black_scholes2_mult2_12_U0_ap_start,
        ap_done => black_scholes2_mult2_12_U0_ap_done,
        ap_continue => black_scholes2_mult2_12_U0_ap_continue,
        ap_idle => black_scholes2_mult2_12_U0_ap_idle,
        ap_ready => black_scholes2_mult2_12_U0_ap_ready,
        return_r => black_scholes2_mult2_12_U0_return_r,
        return_r_ap_vld => black_scholes2_mult2_12_U0_return_r_ap_vld,
        p_read => black_scholes2_mult2_12_U0_p_read,
        b => black_scholes2_mult2_12_U0_b,
        b_out_din => black_scholes2_mult2_12_U0_b_out_din,
        b_out_full_n => black_scholes2_mult2_12_U0_b_out_full_n,
        b_out_write => black_scholes2_mult2_12_U0_b_out_write);

    black_scholes2_mult2_11_1_U0 : component black_scholes2_mult2_11_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => black_scholes2_mult2_11_1_U0_ap_start,
        ap_done => black_scholes2_mult2_11_1_U0_ap_done,
        ap_continue => black_scholes2_mult2_11_1_U0_ap_continue,
        ap_idle => black_scholes2_mult2_11_1_U0_ap_idle,
        ap_ready => black_scholes2_mult2_11_1_U0_ap_ready,
        return_r => black_scholes2_mult2_11_1_U0_return_r,
        return_r_ap_vld => black_scholes2_mult2_11_1_U0_return_r_ap_vld,
        a_dout => black_scholes2_mult2_11_1_U0_a_dout,
        a_empty_n => black_scholes2_mult2_11_1_U0_a_empty_n,
        a_read => black_scholes2_mult2_11_1_U0_a_read,
        b => black_scholes2_mult2_11_1_U0_b);

    black_scholes2_sqrt1_U0 : component black_scholes2_sqrt1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => black_scholes2_sqrt1_U0_ap_start,
        ap_done => black_scholes2_sqrt1_U0_ap_done,
        ap_continue => black_scholes2_sqrt1_U0_ap_continue,
        ap_idle => black_scholes2_sqrt1_U0_ap_idle,
        ap_ready => black_scholes2_sqrt1_U0_ap_ready,
        return_r => black_scholes2_sqrt1_U0_return_r,
        return_r_ap_vld => black_scholes2_sqrt1_U0_return_r_ap_vld,
        a_dout => black_scholes2_sqrt1_U0_a_dout,
        a_empty_n => black_scholes2_sqrt1_U0_a_empty_n,
        a_read => black_scholes2_sqrt1_U0_a_read,
        a_out_din => black_scholes2_sqrt1_U0_a_out_din,
        a_out_full_n => black_scholes2_sqrt1_U0_a_out_full_n,
        a_out_write => black_scholes2_sqrt1_U0_a_out_write);

    black_scholes2_mult2_11_2_U0 : component black_scholes2_mult2_11_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => black_scholes2_mult2_11_2_U0_ap_start,
        ap_done => black_scholes2_mult2_11_2_U0_ap_done,
        ap_continue => black_scholes2_mult2_11_2_U0_ap_continue,
        ap_idle => black_scholes2_mult2_11_2_U0_ap_idle,
        ap_ready => black_scholes2_mult2_11_2_U0_ap_ready,
        return_r => black_scholes2_mult2_11_2_U0_return_r,
        return_r_ap_vld => black_scholes2_mult2_11_2_U0_return_r_ap_vld,
        a => black_scholes2_mult2_11_2_U0_a,
        b => black_scholes2_mult2_11_2_U0_b,
        a_out_din => black_scholes2_mult2_11_2_U0_a_out_din,
        a_out_full_n => black_scholes2_mult2_11_2_U0_a_out_full_n,
        a_out_write => black_scholes2_mult2_11_2_U0_a_out_write);

    black_scholes2_black_scholes2_Block_crit_edge111_proc_U0 : component black_scholes2_black_scholes2_Block_crit_edge111_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => black_scholes2_black_scholes2_Block_crit_edge111_proc_U0_ap_start,
        ap_done => black_scholes2_black_scholes2_Block_crit_edge111_proc_U0_ap_done,
        ap_continue => black_scholes2_black_scholes2_Block_crit_edge111_proc_U0_ap_continue,
        ap_idle => black_scholes2_black_scholes2_Block_crit_edge111_proc_U0_ap_idle,
        ap_ready => black_scholes2_black_scholes2_Block_crit_edge111_proc_U0_ap_ready,
        tmp_3 => black_scholes2_black_scholes2_Block_crit_edge111_proc_U0_tmp_3,
        tmp2_1 => black_scholes2_black_scholes2_Block_crit_edge111_proc_U0_tmp2_1,
        ap_return => black_scholes2_black_scholes2_Block_crit_edge111_proc_U0_ap_return);

    black_scholes2_expo11_U0 : component black_scholes2_expo11
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => black_scholes2_expo11_U0_ap_start,
        ap_done => black_scholes2_expo11_U0_ap_done,
        ap_continue => black_scholes2_expo11_U0_ap_continue,
        ap_idle => black_scholes2_expo11_U0_ap_idle,
        ap_ready => black_scholes2_expo11_U0_ap_ready,
        return_r => black_scholes2_expo11_U0_return_r,
        return_r_ap_vld => black_scholes2_expo11_U0_return_r_ap_vld,
        p_read => black_scholes2_expo11_U0_p_read);

    black_scholes2_mult2_11_3_U0 : component black_scholes2_mult2_11_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => black_scholes2_mult2_11_3_U0_ap_start,
        ap_done => black_scholes2_mult2_11_3_U0_ap_done,
        ap_continue => black_scholes2_mult2_11_3_U0_ap_continue,
        ap_idle => black_scholes2_mult2_11_3_U0_ap_idle,
        ap_ready => black_scholes2_mult2_11_3_U0_ap_ready,
        return_r => black_scholes2_mult2_11_3_U0_return_r,
        return_r_ap_vld => black_scholes2_mult2_11_3_U0_return_r_ap_vld,
        a => black_scholes2_mult2_11_3_U0_a,
        b => black_scholes2_mult2_11_3_U0_b,
        a_out_din => black_scholes2_mult2_11_3_U0_a_out_din,
        a_out_full_n => black_scholes2_mult2_11_3_U0_a_out_full_n,
        a_out_write => black_scholes2_mult2_11_3_U0_a_out_write);

    black_scholes2_black_scholes2_Block_crit_edge115_proc_U0 : component black_scholes2_black_scholes2_Block_crit_edge115_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => black_scholes2_black_scholes2_Block_crit_edge115_proc_U0_ap_start,
        ap_done => black_scholes2_black_scholes2_Block_crit_edge115_proc_U0_ap_done,
        ap_continue => black_scholes2_black_scholes2_Block_crit_edge115_proc_U0_ap_continue,
        ap_idle => black_scholes2_black_scholes2_Block_crit_edge115_proc_U0_ap_idle,
        ap_ready => black_scholes2_black_scholes2_Block_crit_edge115_proc_U0_ap_ready,
        r_dout => black_scholes2_black_scholes2_Block_crit_edge115_proc_U0_r_dout,
        r_empty_n => black_scholes2_black_scholes2_Block_crit_edge115_proc_U0_r_empty_n,
        r_read => black_scholes2_black_scholes2_Block_crit_edge115_proc_U0_r_read,
        T_dout => black_scholes2_black_scholes2_Block_crit_edge115_proc_U0_T_dout,
        T_empty_n => black_scholes2_black_scholes2_Block_crit_edge115_proc_U0_T_empty_n,
        T_read => black_scholes2_black_scholes2_Block_crit_edge115_proc_U0_T_read,
        ap_return => black_scholes2_black_scholes2_Block_crit_edge115_proc_U0_ap_return);

    black_scholes2_expo12_U0 : component black_scholes2_expo12
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => black_scholes2_expo12_U0_ap_start,
        ap_done => black_scholes2_expo12_U0_ap_done,
        ap_continue => black_scholes2_expo12_U0_ap_continue,
        ap_idle => black_scholes2_expo12_U0_ap_idle,
        ap_ready => black_scholes2_expo12_U0_ap_ready,
        return_r => black_scholes2_expo12_U0_return_r,
        return_r_ap_vld => black_scholes2_expo12_U0_return_r_ap_vld,
        p_read => black_scholes2_expo12_U0_p_read);

    black_scholes2_black_scholes2_Block_crit_edge117_proc_U0 : component black_scholes2_black_scholes2_Block_crit_edge117_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_start,
        ap_done => black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_done,
        ap_continue => black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_continue,
        ap_idle => black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_idle,
        ap_ready => black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_ready,
        tmp3_2 => black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_tmp3_2,
        E => black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_E,
        tmp4 => black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_tmp4,
        ap_return => black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_return);

    black_scholes2_black_scholes2_Block_crit_edge_proc_U0 : component black_scholes2_black_scholes2_Block_crit_edge_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => black_scholes2_black_scholes2_Block_crit_edge_proc_U0_ap_start,
        ap_done => black_scholes2_black_scholes2_Block_crit_edge_proc_U0_ap_done,
        ap_continue => black_scholes2_black_scholes2_Block_crit_edge_proc_U0_ap_continue,
        ap_idle => black_scholes2_black_scholes2_Block_crit_edge_proc_U0_ap_idle,
        ap_ready => black_scholes2_black_scholes2_Block_crit_edge_proc_U0_ap_ready,
        p_read => black_scholes2_black_scholes2_Block_crit_edge_proc_U0_p_read,
        ap_return => black_scholes2_black_scholes2_Block_crit_edge_proc_U0_ap_return);

    p_channel35_U : component FIFO_black_scholes2_p_channel35
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => p_channel35_U_ap_dummy_ce,
        if_write_ce => p_channel35_U_ap_dummy_ce,
        if_din => p_channel35_din,
        if_full_n => p_channel35_full_n,
        if_write => p_channel35_write,
        if_dout => p_channel35_dout,
        if_empty_n => p_channel35_empty_n,
        if_read => p_channel35_read);

    sigma_channel_channel_U : component FIFO_black_scholes2_sigma_channel_channel
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => sigma_channel_channel_U_ap_dummy_ce,
        if_write_ce => sigma_channel_channel_U_ap_dummy_ce,
        if_din => sigma_channel_channel_din,
        if_full_n => sigma_channel_channel_full_n,
        if_write => sigma_channel_channel_write,
        if_dout => sigma_channel_channel_dout,
        if_empty_n => sigma_channel_channel_empty_n,
        if_read => sigma_channel_channel_read);

    tmp_1_channel_U : component FIFO_black_scholes2_tmp_1_channel
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => tmp_1_channel_U_ap_dummy_ce,
        if_write_ce => tmp_1_channel_U_ap_dummy_ce,
        if_din => tmp_1_channel_din,
        if_full_n => tmp_1_channel_full_n,
        if_write => tmp_1_channel_write,
        if_dout => tmp_1_channel_dout,
        if_empty_n => tmp_1_channel_empty_n,
        if_read => tmp_1_channel_read);

    r_channel_channel_U : component FIFO_black_scholes2_r_channel_channel
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => r_channel_channel_U_ap_dummy_ce,
        if_write_ce => r_channel_channel_U_ap_dummy_ce,
        if_din => r_channel_channel_din,
        if_full_n => r_channel_channel_full_n,
        if_write => r_channel_channel_write,
        if_dout => r_channel_channel_dout,
        if_empty_n => r_channel_channel_empty_n,
        if_read => r_channel_channel_read);

    tmp_2_loc_channel_U : component FIFO_black_scholes2_tmp_2_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => tmp_2_loc_channel_U_ap_dummy_ce,
        if_write_ce => tmp_2_loc_channel_U_ap_dummy_ce,
        if_din => tmp_2_loc_channel_din,
        if_full_n => tmp_2_loc_channel_full_n,
        if_write => tmp_2_loc_channel_write,
        if_dout => tmp_2_loc_channel_dout,
        if_empty_n => tmp_2_loc_channel_empty_n,
        if_read => tmp_2_loc_channel_read);

    p_channel36_U : component FIFO_black_scholes2_p_channel36
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => p_channel36_U_ap_dummy_ce,
        if_write_ce => p_channel36_U_ap_dummy_ce,
        if_din => p_channel36_din,
        if_full_n => p_channel36_full_n,
        if_write => p_channel36_write,
        if_dout => p_channel36_dout,
        if_empty_n => p_channel36_empty_n,
        if_read => p_channel36_read);

    T_channel_channel_U : component FIFO_black_scholes2_T_channel_channel
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => T_channel_channel_U_ap_dummy_ce,
        if_write_ce => T_channel_channel_U_ap_dummy_ce,
        if_din => T_channel_channel_din,
        if_full_n => T_channel_channel_full_n,
        if_write => T_channel_channel_write,
        if_dout => T_channel_channel_dout,
        if_empty_n => T_channel_channel_empty_n,
        if_read => T_channel_channel_read);

    p_channel37_U : component FIFO_black_scholes2_p_channel37
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => p_channel37_U_ap_dummy_ce,
        if_write_ce => p_channel37_U_ap_dummy_ce,
        if_din => p_channel37_din,
        if_full_n => p_channel37_full_n,
        if_write => p_channel37_write,
        if_dout => p_channel37_dout,
        if_empty_n => p_channel37_empty_n,
        if_read => p_channel37_read);

    p_channel38_U : component FIFO_black_scholes2_p_channel38
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => p_channel38_U_ap_dummy_ce,
        if_write_ce => p_channel38_U_ap_dummy_ce,
        if_din => p_channel38_din,
        if_full_n => p_channel38_full_n,
        if_write => p_channel38_write,
        if_dout => p_channel38_dout,
        if_empty_n => p_channel38_empty_n,
        if_read => p_channel38_read);

    T_channel31_channel_U : component FIFO_black_scholes2_T_channel31_channel
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => T_channel31_channel_U_ap_dummy_ce,
        if_write_ce => T_channel31_channel_U_ap_dummy_ce,
        if_din => T_channel31_channel_din,
        if_full_n => T_channel31_channel_full_n,
        if_write => T_channel31_channel_write,
        if_dout => T_channel31_channel_dout,
        if_empty_n => T_channel31_channel_empty_n,
        if_read => T_channel31_channel_read);

    p_channel39_U : component FIFO_black_scholes2_p_channel39
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => p_channel39_U_ap_dummy_ce,
        if_write_ce => p_channel39_U_ap_dummy_ce,
        if_din => p_channel39_din,
        if_full_n => p_channel39_full_n,
        if_write => p_channel39_write,
        if_dout => p_channel39_dout,
        if_empty_n => p_channel39_empty_n,
        if_read => p_channel39_read);

    tmp3_loc_channel_U : component FIFO_black_scholes2_tmp3_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => tmp3_loc_channel_U_ap_dummy_ce,
        if_write_ce => tmp3_loc_channel_U_ap_dummy_ce,
        if_din => tmp3_loc_channel_din,
        if_full_n => tmp3_loc_channel_full_n,
        if_write => tmp3_loc_channel_write,
        if_dout => tmp3_loc_channel_dout,
        if_empty_n => tmp3_loc_channel_empty_n,
        if_read => tmp3_loc_channel_read);

    p_channel40_U : component FIFO_black_scholes2_p_channel40
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => p_channel40_U_ap_dummy_ce,
        if_write_ce => p_channel40_U_ap_dummy_ce,
        if_din => p_channel40_din,
        if_full_n => p_channel40_full_n,
        if_write => p_channel40_write,
        if_dout => p_channel40_dout,
        if_empty_n => p_channel40_empty_n,
        if_read => p_channel40_read);

    p_channel41_U : component FIFO_black_scholes2_p_channel41
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => p_channel41_U_ap_dummy_ce,
        if_write_ce => p_channel41_U_ap_dummy_ce,
        if_din => p_channel41_din,
        if_full_n => p_channel41_full_n,
        if_write => p_channel41_write,
        if_dout => p_channel41_dout,
        if_empty_n => p_channel41_empty_n,
        if_read => p_channel41_read);

    call_ret_U : component FIFO_black_scholes2_call_ret
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => call_ret_U_ap_dummy_ce,
        if_write_ce => call_ret_U_ap_dummy_ce,
        if_din => call_ret_din,
        if_full_n => call_ret_full_n,
        if_write => call_ret_write,
        if_dout => call_ret_dout,
        if_empty_n => call_ret_empty_n,
        if_read => call_ret_read);

    p_channel42_U : component FIFO_black_scholes2_p_channel42
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => p_channel42_U_ap_dummy_ce,
        if_write_ce => p_channel42_U_ap_dummy_ce,
        if_din => p_channel42_din,
        if_full_n => p_channel42_full_n,
        if_write => p_channel42_write,
        if_dout => p_channel42_dout,
        if_empty_n => p_channel42_empty_n,
        if_read => p_channel42_read);

    tmp4_1_loc_channel_U : component FIFO_black_scholes2_tmp4_1_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => tmp4_1_loc_channel_U_ap_dummy_ce,
        if_write_ce => tmp4_1_loc_channel_U_ap_dummy_ce,
        if_din => tmp4_1_loc_channel_din,
        if_full_n => tmp4_1_loc_channel_full_n,
        if_write => tmp4_1_loc_channel_write,
        if_dout => tmp4_1_loc_channel_dout,
        if_empty_n => tmp4_1_loc_channel_empty_n,
        if_read => tmp4_1_loc_channel_read);





    -- ap_reg_procdone_black_scholes2_black_scholes2_Block_crit_edge111_proc_U0 assign process. --
    ap_reg_procdone_black_scholes2_black_scholes2_Block_crit_edge111_proc_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_procdone_black_scholes2_black_scholes2_Block_crit_edge111_proc_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_black_scholes2_black_scholes2_Block_crit_edge111_proc_U0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = black_scholes2_black_scholes2_Block_crit_edge111_proc_U0_ap_done)) then 
                    ap_reg_procdone_black_scholes2_black_scholes2_Block_crit_edge111_proc_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_procdone_black_scholes2_black_scholes2_Block_crit_edge115_proc_U0 assign process. --
    ap_reg_procdone_black_scholes2_black_scholes2_Block_crit_edge115_proc_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_procdone_black_scholes2_black_scholes2_Block_crit_edge115_proc_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_black_scholes2_black_scholes2_Block_crit_edge115_proc_U0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = black_scholes2_black_scholes2_Block_crit_edge115_proc_U0_ap_done)) then 
                    ap_reg_procdone_black_scholes2_black_scholes2_Block_crit_edge115_proc_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_procdone_black_scholes2_black_scholes2_Block_crit_edge117_proc_U0 assign process. --
    ap_reg_procdone_black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_procdone_black_scholes2_black_scholes2_Block_crit_edge117_proc_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_black_scholes2_black_scholes2_Block_crit_edge117_proc_U0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_done)) then 
                    ap_reg_procdone_black_scholes2_black_scholes2_Block_crit_edge117_proc_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_procdone_black_scholes2_black_scholes2_Block_crit_edge14_proc_U0 assign process. --
    ap_reg_procdone_black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_procdone_black_scholes2_black_scholes2_Block_crit_edge14_proc_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_black_scholes2_black_scholes2_Block_crit_edge14_proc_U0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_done)) then 
                    ap_reg_procdone_black_scholes2_black_scholes2_Block_crit_edge14_proc_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_procdone_black_scholes2_black_scholes2_Block_crit_edge_proc_U0 assign process. --
    ap_reg_procdone_black_scholes2_black_scholes2_Block_crit_edge_proc_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_procdone_black_scholes2_black_scholes2_Block_crit_edge_proc_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_black_scholes2_black_scholes2_Block_crit_edge_proc_U0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = black_scholes2_black_scholes2_Block_crit_edge_proc_U0_ap_done)) then 
                    ap_reg_procdone_black_scholes2_black_scholes2_Block_crit_edge_proc_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_procdone_black_scholes2_div_1_U0 assign process. --
    ap_reg_procdone_black_scholes2_div_1_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_procdone_black_scholes2_div_1_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_black_scholes2_div_1_U0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = black_scholes2_div_1_U0_ap_done)) then 
                    ap_reg_procdone_black_scholes2_div_1_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_procdone_black_scholes2_expo11_U0 assign process. --
    ap_reg_procdone_black_scholes2_expo11_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_procdone_black_scholes2_expo11_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_black_scholes2_expo11_U0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = black_scholes2_expo11_U0_ap_done)) then 
                    ap_reg_procdone_black_scholes2_expo11_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_procdone_black_scholes2_expo12_U0 assign process. --
    ap_reg_procdone_black_scholes2_expo12_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_procdone_black_scholes2_expo12_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_black_scholes2_expo12_U0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = black_scholes2_expo12_U0_ap_done)) then 
                    ap_reg_procdone_black_scholes2_expo12_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_procdone_black_scholes2_mult2_11_1_U0 assign process. --
    ap_reg_procdone_black_scholes2_mult2_11_1_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_procdone_black_scholes2_mult2_11_1_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_black_scholes2_mult2_11_1_U0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = black_scholes2_mult2_11_1_U0_ap_done)) then 
                    ap_reg_procdone_black_scholes2_mult2_11_1_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_procdone_black_scholes2_mult2_11_2_U0 assign process. --
    ap_reg_procdone_black_scholes2_mult2_11_2_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_procdone_black_scholes2_mult2_11_2_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_black_scholes2_mult2_11_2_U0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = black_scholes2_mult2_11_2_U0_ap_done)) then 
                    ap_reg_procdone_black_scholes2_mult2_11_2_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_procdone_black_scholes2_mult2_11_3_U0 assign process. --
    ap_reg_procdone_black_scholes2_mult2_11_3_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_procdone_black_scholes2_mult2_11_3_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_black_scholes2_mult2_11_3_U0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = black_scholes2_mult2_11_3_U0_ap_done)) then 
                    ap_reg_procdone_black_scholes2_mult2_11_3_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_procdone_black_scholes2_mult2_11_U0 assign process. --
    ap_reg_procdone_black_scholes2_mult2_11_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_procdone_black_scholes2_mult2_11_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_black_scholes2_mult2_11_U0 <= ap_const_logic_0;
                elsif ((black_scholes2_mult2_11_U0_ap_done = ap_const_logic_1)) then 
                    ap_reg_procdone_black_scholes2_mult2_11_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_procdone_black_scholes2_mult2_12_U0 assign process. --
    ap_reg_procdone_black_scholes2_mult2_12_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_procdone_black_scholes2_mult2_12_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_black_scholes2_mult2_12_U0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = black_scholes2_mult2_12_U0_ap_done)) then 
                    ap_reg_procdone_black_scholes2_mult2_12_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_procdone_black_scholes2_sqrt1_U0 assign process. --
    ap_reg_procdone_black_scholes2_sqrt1_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_procdone_black_scholes2_sqrt1_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_black_scholes2_sqrt1_U0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = black_scholes2_sqrt1_U0_ap_done)) then 
                    ap_reg_procdone_black_scholes2_sqrt1_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_ready assign process. --
    ap_reg_ready_black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ready_black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_start) and (ap_const_logic_1 = ap_sig_top_allready))) then 
                    ap_reg_ready_black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_ready <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_ready)) then 
                    ap_reg_ready_black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_ready <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_ready assign process. --
    ap_reg_ready_black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ready_black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_start) and (ap_const_logic_1 = ap_sig_top_allready))) then 
                    ap_reg_ready_black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_ready <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_ready)) then 
                    ap_reg_ready_black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_ready <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_black_scholes2_mult2_11_1_U0_ap_ready assign process. --
    ap_reg_ready_black_scholes2_mult2_11_1_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ready_black_scholes2_mult2_11_1_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_start) and (ap_const_logic_1 = ap_sig_top_allready))) then 
                    ap_reg_ready_black_scholes2_mult2_11_1_U0_ap_ready <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = black_scholes2_mult2_11_1_U0_ap_ready)) then 
                    ap_reg_ready_black_scholes2_mult2_11_1_U0_ap_ready <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_black_scholes2_mult2_11_3_U0_ap_ready assign process. --
    ap_reg_ready_black_scholes2_mult2_11_3_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ready_black_scholes2_mult2_11_3_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_start) and (ap_const_logic_1 = ap_sig_top_allready))) then 
                    ap_reg_ready_black_scholes2_mult2_11_3_U0_ap_ready <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = black_scholes2_mult2_11_3_U0_ap_ready)) then 
                    ap_reg_ready_black_scholes2_mult2_11_3_U0_ap_ready <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_black_scholes2_mult2_11_U0_ap_ready assign process. --
    ap_reg_ready_black_scholes2_mult2_11_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ready_black_scholes2_mult2_11_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_start) and (ap_const_logic_1 = ap_sig_top_allready))) then 
                    ap_reg_ready_black_scholes2_mult2_11_U0_ap_ready <= ap_const_logic_0;
                elsif ((black_scholes2_mult2_11_U0_ap_ready = ap_const_logic_1)) then 
                    ap_reg_ready_black_scholes2_mult2_11_U0_ap_ready <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_black_scholes2_mult2_12_U0_ap_ready assign process. --
    ap_reg_ready_black_scholes2_mult2_12_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ready_black_scholes2_mult2_12_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_start) and (ap_const_logic_1 = ap_sig_top_allready))) then 
                    ap_reg_ready_black_scholes2_mult2_12_U0_ap_ready <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = black_scholes2_mult2_12_U0_ap_ready)) then 
                    ap_reg_ready_black_scholes2_mult2_12_U0_ap_ready <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- black_scholes2_black_scholes2_Block_crit_edge115_proc_U0_ap_start assign process. --
    black_scholes2_black_scholes2_Block_crit_edge115_proc_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                black_scholes2_black_scholes2_Block_crit_edge115_proc_U0_ap_start <= ap_const_logic_0;
            else
                black_scholes2_black_scholes2_Block_crit_edge115_proc_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    -- black_scholes2_sqrt1_U0_ap_start assign process. --
    black_scholes2_sqrt1_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                black_scholes2_sqrt1_U0_ap_start <= ap_const_logic_0;
            else
                black_scholes2_sqrt1_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    -- ap_CS assign process. --
    ap_CS_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_CS <= ap_const_logic_0;
        end if;
    end process;
    T_channel31_channel_U_ap_dummy_ce <= ap_const_logic_1;
    T_channel31_channel_din <= black_scholes2_sqrt1_U0_a_out_din;
    T_channel31_channel_read <= black_scholes2_black_scholes2_Block_crit_edge115_proc_U0_T_read;
    T_channel31_channel_write <= black_scholes2_sqrt1_U0_a_out_write;
    T_channel_channel_U_ap_dummy_ce <= ap_const_logic_1;
    T_channel_channel_din <= black_scholes2_mult2_12_U0_b_out_din;
    T_channel_channel_read <= black_scholes2_sqrt1_U0_a_read;
    T_channel_channel_write <= black_scholes2_mult2_12_U0_b_out_write;
    ap_chn_write_black_scholes2_black_scholes2_Block_crit_edge111_proc_U0_tmp3_loc_channel <= black_scholes2_black_scholes2_Block_crit_edge111_proc_U0_ap_done;
    ap_chn_write_black_scholes2_black_scholes2_Block_crit_edge115_proc_U0_call_ret <= black_scholes2_black_scholes2_Block_crit_edge115_proc_U0_ap_done;
    ap_chn_write_black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_tmp4_1_loc_channel <= black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_done;
    ap_chn_write_black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_tmp_2_loc_channel <= black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_done;
    ap_chn_write_black_scholes2_div_1_U0_tmp_1_channel <= black_scholes2_div_1_U0_ap_done;
    ap_chn_write_black_scholes2_expo11_U0_p_channel40 <= black_scholes2_expo11_U0_ap_done;
    ap_chn_write_black_scholes2_expo12_U0_p_channel42 <= black_scholes2_expo12_U0_ap_done;
    ap_chn_write_black_scholes2_mult2_11_1_U0_p_channel37 <= black_scholes2_mult2_11_1_U0_ap_done;
    ap_chn_write_black_scholes2_mult2_11_2_U0_p_channel39 <= black_scholes2_mult2_11_2_U0_ap_done;
    ap_chn_write_black_scholes2_mult2_11_3_U0_p_channel41 <= black_scholes2_mult2_11_3_U0_ap_done;
    ap_chn_write_black_scholes2_mult2_11_U0_p_channel35 <= black_scholes2_mult2_11_U0_ap_done;
    ap_chn_write_black_scholes2_mult2_12_U0_p_channel36 <= black_scholes2_mult2_12_U0_ap_done;
    ap_chn_write_black_scholes2_sqrt1_U0_p_channel38 <= black_scholes2_sqrt1_U0_ap_done;
    ap_done <= ap_sig_hs_done;

    -- ap_idle assign process. --
    ap_idle_assign_proc : process(black_scholes2_mult2_11_U0_ap_idle, black_scholes2_div_1_U0_ap_idle, black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_idle, black_scholes2_mult2_12_U0_ap_idle, black_scholes2_mult2_11_1_U0_ap_idle, black_scholes2_sqrt1_U0_ap_idle, black_scholes2_mult2_11_2_U0_ap_idle, black_scholes2_black_scholes2_Block_crit_edge111_proc_U0_ap_idle, black_scholes2_expo11_U0_ap_idle, black_scholes2_mult2_11_3_U0_ap_idle, black_scholes2_black_scholes2_Block_crit_edge115_proc_U0_ap_idle, black_scholes2_expo12_U0_ap_idle, black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_idle, black_scholes2_black_scholes2_Block_crit_edge_proc_U0_ap_idle, p_channel35_empty_n, tmp_1_channel_empty_n, tmp_2_loc_channel_empty_n, p_channel36_empty_n, p_channel37_empty_n, p_channel38_empty_n, p_channel39_empty_n, tmp3_loc_channel_empty_n, p_channel40_empty_n, p_channel41_empty_n, call_ret_empty_n, p_channel42_empty_n, tmp4_1_loc_channel_empty_n)
    begin
        if (((black_scholes2_mult2_11_U0_ap_idle = ap_const_logic_1) and (ap_const_logic_1 = black_scholes2_div_1_U0_ap_idle) and (ap_const_logic_1 = black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_idle) and (ap_const_logic_1 = black_scholes2_mult2_12_U0_ap_idle) and (ap_const_logic_1 = black_scholes2_mult2_11_1_U0_ap_idle) and (ap_const_logic_1 = black_scholes2_sqrt1_U0_ap_idle) and (ap_const_logic_1 = black_scholes2_mult2_11_2_U0_ap_idle) and (ap_const_logic_1 = black_scholes2_black_scholes2_Block_crit_edge111_proc_U0_ap_idle) and (ap_const_logic_1 = black_scholes2_expo11_U0_ap_idle) and (ap_const_logic_1 = black_scholes2_mult2_11_3_U0_ap_idle) and (ap_const_logic_1 = black_scholes2_black_scholes2_Block_crit_edge115_proc_U0_ap_idle) and (ap_const_logic_1 = black_scholes2_expo12_U0_ap_idle) and (ap_const_logic_1 = black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_idle) and (ap_const_logic_1 = black_scholes2_black_scholes2_Block_crit_edge_proc_U0_ap_idle) and (ap_const_logic_0 = p_channel35_empty_n) and (ap_const_logic_0 = tmp_1_channel_empty_n) and (ap_const_logic_0 = tmp_2_loc_channel_empty_n) and (ap_const_logic_0 = p_channel36_empty_n) and (ap_const_logic_0 = p_channel37_empty_n) and (ap_const_logic_0 = p_channel38_empty_n) and (ap_const_logic_0 = p_channel39_empty_n) and (ap_const_logic_0 = tmp3_loc_channel_empty_n) and (ap_const_logic_0 = p_channel40_empty_n) and (ap_const_logic_0 = p_channel41_empty_n) and (ap_const_logic_0 = call_ret_empty_n) and (ap_const_logic_0 = p_channel42_empty_n) and (ap_const_logic_0 = tmp4_1_loc_channel_empty_n))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= ap_sig_top_allready;
    ap_return <= black_scholes2_black_scholes2_Block_crit_edge_proc_U0_ap_return;
    ap_sig_hs_continue <= ap_const_logic_1;

    -- ap_sig_hs_done assign process. --
    ap_sig_hs_done_assign_proc : process(black_scholes2_black_scholes2_Block_crit_edge_proc_U0_ap_done, ap_reg_procdone_black_scholes2_black_scholes2_Block_crit_edge_proc_U0)
    begin
        if (((ap_const_logic_1 = black_scholes2_black_scholes2_Block_crit_edge_proc_U0_ap_done) or (ap_const_logic_1 = ap_reg_procdone_black_scholes2_black_scholes2_Block_crit_edge_proc_U0))) then 
            ap_sig_hs_done <= ap_const_logic_1;
        else 
            ap_sig_hs_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_ready_black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_ready assign process. --
    ap_sig_ready_black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_ready_assign_proc : process(black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_ready, ap_reg_ready_black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_ready)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_ready)) then 
            ap_sig_ready_black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_ready <= black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_ready;
        else 
            ap_sig_ready_black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_ready <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_ready assign process. --
    ap_sig_ready_black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_ready_assign_proc : process(black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_ready, ap_reg_ready_black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_ready)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_ready)) then 
            ap_sig_ready_black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_ready <= black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_ready;
        else 
            ap_sig_ready_black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_ready <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_black_scholes2_mult2_11_1_U0_ap_ready assign process. --
    ap_sig_ready_black_scholes2_mult2_11_1_U0_ap_ready_assign_proc : process(black_scholes2_mult2_11_1_U0_ap_ready, ap_reg_ready_black_scholes2_mult2_11_1_U0_ap_ready)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_black_scholes2_mult2_11_1_U0_ap_ready)) then 
            ap_sig_ready_black_scholes2_mult2_11_1_U0_ap_ready <= black_scholes2_mult2_11_1_U0_ap_ready;
        else 
            ap_sig_ready_black_scholes2_mult2_11_1_U0_ap_ready <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_black_scholes2_mult2_11_3_U0_ap_ready assign process. --
    ap_sig_ready_black_scholes2_mult2_11_3_U0_ap_ready_assign_proc : process(black_scholes2_mult2_11_3_U0_ap_ready, ap_reg_ready_black_scholes2_mult2_11_3_U0_ap_ready)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_black_scholes2_mult2_11_3_U0_ap_ready)) then 
            ap_sig_ready_black_scholes2_mult2_11_3_U0_ap_ready <= black_scholes2_mult2_11_3_U0_ap_ready;
        else 
            ap_sig_ready_black_scholes2_mult2_11_3_U0_ap_ready <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_black_scholes2_mult2_11_U0_ap_ready assign process. --
    ap_sig_ready_black_scholes2_mult2_11_U0_ap_ready_assign_proc : process(black_scholes2_mult2_11_U0_ap_ready, ap_reg_ready_black_scholes2_mult2_11_U0_ap_ready)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_black_scholes2_mult2_11_U0_ap_ready)) then 
            ap_sig_ready_black_scholes2_mult2_11_U0_ap_ready <= black_scholes2_mult2_11_U0_ap_ready;
        else 
            ap_sig_ready_black_scholes2_mult2_11_U0_ap_ready <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_black_scholes2_mult2_12_U0_ap_ready assign process. --
    ap_sig_ready_black_scholes2_mult2_12_U0_ap_ready_assign_proc : process(black_scholes2_mult2_12_U0_ap_ready, ap_reg_ready_black_scholes2_mult2_12_U0_ap_ready)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_black_scholes2_mult2_12_U0_ap_ready)) then 
            ap_sig_ready_black_scholes2_mult2_12_U0_ap_ready <= black_scholes2_mult2_12_U0_ap_ready;
        else 
            ap_sig_ready_black_scholes2_mult2_12_U0_ap_ready <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_start_in_black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_start assign process. --
    ap_sig_start_in_black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_start_assign_proc : process(ap_start, ap_reg_ready_black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_ready)
    begin
        if (((ap_const_logic_1 = ap_start) and (ap_const_logic_0 = ap_reg_ready_black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_ready))) then 
            ap_sig_start_in_black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_start <= ap_const_logic_1;
        else 
            ap_sig_start_in_black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_start_in_black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_start assign process. --
    ap_sig_start_in_black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_start_assign_proc : process(ap_start, ap_reg_ready_black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_ready)
    begin
        if (((ap_const_logic_0 = ap_reg_ready_black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_ready) and (ap_const_logic_1 = ap_start))) then 
            ap_sig_start_in_black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_start <= ap_const_logic_1;
        else 
            ap_sig_start_in_black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_start_in_black_scholes2_mult2_11_1_U0_ap_start assign process. --
    ap_sig_start_in_black_scholes2_mult2_11_1_U0_ap_start_assign_proc : process(ap_start, ap_reg_ready_black_scholes2_mult2_11_1_U0_ap_ready)
    begin
        if (((ap_const_logic_1 = ap_start) and (ap_const_logic_0 = ap_reg_ready_black_scholes2_mult2_11_1_U0_ap_ready))) then 
            ap_sig_start_in_black_scholes2_mult2_11_1_U0_ap_start <= ap_const_logic_1;
        else 
            ap_sig_start_in_black_scholes2_mult2_11_1_U0_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_start_in_black_scholes2_mult2_11_3_U0_ap_start assign process. --
    ap_sig_start_in_black_scholes2_mult2_11_3_U0_ap_start_assign_proc : process(ap_start, ap_reg_ready_black_scholes2_mult2_11_3_U0_ap_ready)
    begin
        if (((ap_const_logic_1 = ap_start) and (ap_const_logic_0 = ap_reg_ready_black_scholes2_mult2_11_3_U0_ap_ready))) then 
            ap_sig_start_in_black_scholes2_mult2_11_3_U0_ap_start <= ap_const_logic_1;
        else 
            ap_sig_start_in_black_scholes2_mult2_11_3_U0_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_start_in_black_scholes2_mult2_11_U0_ap_start assign process. --
    ap_sig_start_in_black_scholes2_mult2_11_U0_ap_start_assign_proc : process(ap_start, ap_reg_ready_black_scholes2_mult2_11_U0_ap_ready)
    begin
        if (((ap_const_logic_1 = ap_start) and (ap_const_logic_0 = ap_reg_ready_black_scholes2_mult2_11_U0_ap_ready))) then 
            ap_sig_start_in_black_scholes2_mult2_11_U0_ap_start <= ap_const_logic_1;
        else 
            ap_sig_start_in_black_scholes2_mult2_11_U0_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_start_in_black_scholes2_mult2_12_U0_ap_start assign process. --
    ap_sig_start_in_black_scholes2_mult2_12_U0_ap_start_assign_proc : process(ap_start, ap_reg_ready_black_scholes2_mult2_12_U0_ap_ready)
    begin
        if (((ap_const_logic_1 = ap_start) and (ap_const_logic_0 = ap_reg_ready_black_scholes2_mult2_12_U0_ap_ready))) then 
            ap_sig_start_in_black_scholes2_mult2_12_U0_ap_start <= ap_const_logic_1;
        else 
            ap_sig_start_in_black_scholes2_mult2_12_U0_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_top_allready assign process. --
    ap_sig_top_allready_assign_proc : process(ap_sig_ready_black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_ready, ap_sig_ready_black_scholes2_mult2_12_U0_ap_ready, ap_sig_ready_black_scholes2_mult2_11_3_U0_ap_ready, ap_sig_ready_black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_ready, ap_sig_ready_black_scholes2_mult2_11_U0_ap_ready, ap_sig_ready_black_scholes2_mult2_11_1_U0_ap_ready)
    begin
        if (((ap_const_logic_1 = ap_sig_ready_black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_ready) and (ap_const_logic_1 = ap_sig_ready_black_scholes2_mult2_12_U0_ap_ready) and (ap_const_logic_1 = ap_sig_ready_black_scholes2_mult2_11_3_U0_ap_ready) and (ap_const_logic_1 = ap_sig_ready_black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_ready) and (ap_const_logic_1 = ap_sig_ready_black_scholes2_mult2_11_U0_ap_ready) and (ap_const_logic_1 = ap_sig_ready_black_scholes2_mult2_11_1_U0_ap_ready))) then 
            ap_sig_top_allready <= ap_const_logic_1;
        else 
            ap_sig_top_allready <= ap_const_logic_0;
        end if; 
    end process;

    black_scholes2_black_scholes2_Block_crit_edge111_proc_U0_ap_continue <= tmp3_loc_channel_full_n;
    black_scholes2_black_scholes2_Block_crit_edge111_proc_U0_ap_start <= (p_channel36_empty_n and p_channel39_empty_n);
    black_scholes2_black_scholes2_Block_crit_edge111_proc_U0_tmp2_1 <= p_channel39_dout;
    black_scholes2_black_scholes2_Block_crit_edge111_proc_U0_tmp_3 <= p_channel36_dout;
    black_scholes2_black_scholes2_Block_crit_edge115_proc_U0_T_dout <= T_channel31_channel_dout;
    black_scholes2_black_scholes2_Block_crit_edge115_proc_U0_T_empty_n <= T_channel31_channel_empty_n;
    black_scholes2_black_scholes2_Block_crit_edge115_proc_U0_ap_continue <= call_ret_full_n;
    black_scholes2_black_scholes2_Block_crit_edge115_proc_U0_r_dout <= r_channel_channel_dout;
    black_scholes2_black_scholes2_Block_crit_edge115_proc_U0_r_empty_n <= r_channel_channel_empty_n;
    black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_E <= E;
    black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_continue <= tmp4_1_loc_channel_full_n;
    black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_start <= (p_channel41_empty_n and p_channel42_empty_n and ap_sig_start_in_black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_start);
    black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_tmp3_2 <= p_channel41_dout;
    black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_tmp4 <= p_channel42_dout;
    black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_continue <= tmp_2_loc_channel_full_n;
    black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_start <= (tmp_1_channel_empty_n and ap_sig_start_in_black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_start);
    black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_r <= r;
    black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_r_out_full_n <= r_channel_channel_full_n;
    black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_tmp_1 <= tmp_1_channel_dout;
    black_scholes2_black_scholes2_Block_crit_edge_proc_U0_ap_continue <= ap_sig_hs_continue;
    black_scholes2_black_scholes2_Block_crit_edge_proc_U0_ap_start <= tmp4_1_loc_channel_empty_n;
    black_scholes2_black_scholes2_Block_crit_edge_proc_U0_p_read <= tmp4_1_loc_channel_dout;
    black_scholes2_div_1_U0_a <= p_channel35_dout;
    black_scholes2_div_1_U0_ap_continue <= tmp_1_channel_full_n;
    black_scholes2_div_1_U0_ap_start <= p_channel35_empty_n;
    black_scholes2_expo11_U0_ap_continue <= p_channel40_full_n;
    black_scholes2_expo11_U0_ap_start <= tmp3_loc_channel_empty_n;
    black_scholes2_expo11_U0_p_read <= tmp3_loc_channel_dout;
    black_scholes2_expo12_U0_ap_continue <= p_channel42_full_n;
    black_scholes2_expo12_U0_ap_start <= call_ret_empty_n;
    black_scholes2_expo12_U0_p_read <= call_ret_dout;
    black_scholes2_mult2_11_1_U0_a_dout <= sigma_channel_channel_dout;
    black_scholes2_mult2_11_1_U0_a_empty_n <= sigma_channel_channel_empty_n;
    black_scholes2_mult2_11_1_U0_ap_continue <= p_channel37_full_n;
    black_scholes2_mult2_11_1_U0_ap_start <= ap_sig_start_in_black_scholes2_mult2_11_1_U0_ap_start;
    black_scholes2_mult2_11_1_U0_b <= gaussian_random_number;
    black_scholes2_mult2_11_2_U0_a <= p_channel37_dout;
    black_scholes2_mult2_11_2_U0_a_out_full_n <= ap_const_logic_1;
    black_scholes2_mult2_11_2_U0_ap_continue <= p_channel39_full_n;
    black_scholes2_mult2_11_2_U0_ap_start <= (p_channel37_empty_n and p_channel38_empty_n);
    black_scholes2_mult2_11_2_U0_b <= p_channel38_dout;
    black_scholes2_mult2_11_3_U0_a <= p_channel40_dout;
    black_scholes2_mult2_11_3_U0_a_out_full_n <= ap_const_logic_1;
    black_scholes2_mult2_11_3_U0_ap_continue <= p_channel41_full_n;
    black_scholes2_mult2_11_3_U0_ap_start <= (p_channel40_empty_n and ap_sig_start_in_black_scholes2_mult2_11_3_U0_ap_start);
    black_scholes2_mult2_11_3_U0_b <= S;
    black_scholes2_mult2_11_U0_a <= sigma;
    black_scholes2_mult2_11_U0_a_out_full_n <= sigma_channel_channel_full_n;
    black_scholes2_mult2_11_U0_ap_continue <= p_channel35_full_n;
    black_scholes2_mult2_11_U0_ap_start <= ap_sig_start_in_black_scholes2_mult2_11_U0_ap_start;
    black_scholes2_mult2_11_U0_b <= sigma;
    black_scholes2_mult2_12_U0_ap_continue <= p_channel36_full_n;
    black_scholes2_mult2_12_U0_ap_start <= (tmp_2_loc_channel_empty_n and ap_sig_start_in_black_scholes2_mult2_12_U0_ap_start);
    black_scholes2_mult2_12_U0_b <= T;
    black_scholes2_mult2_12_U0_b_out_full_n <= T_channel_channel_full_n;
    black_scholes2_mult2_12_U0_p_read <= tmp_2_loc_channel_dout;
    black_scholes2_sqrt1_U0_a_dout <= T_channel_channel_dout;
    black_scholes2_sqrt1_U0_a_empty_n <= T_channel_channel_empty_n;
    black_scholes2_sqrt1_U0_a_out_full_n <= T_channel31_channel_full_n;
    black_scholes2_sqrt1_U0_ap_continue <= p_channel38_full_n;
    call_ret_U_ap_dummy_ce <= ap_const_logic_1;
    call_ret_din <= black_scholes2_black_scholes2_Block_crit_edge115_proc_U0_ap_return;
    call_ret_read <= black_scholes2_expo12_U0_ap_ready;
    call_ret_write <= ap_chn_write_black_scholes2_black_scholes2_Block_crit_edge115_proc_U0_call_ret;
    p_channel35_U_ap_dummy_ce <= ap_const_logic_1;
    p_channel35_din <= black_scholes2_mult2_11_U0_return_r;
    p_channel35_read <= black_scholes2_div_1_U0_ap_ready;
    p_channel35_write <= ap_chn_write_black_scholes2_mult2_11_U0_p_channel35;
    p_channel36_U_ap_dummy_ce <= ap_const_logic_1;
    p_channel36_din <= black_scholes2_mult2_12_U0_return_r;
    p_channel36_read <= black_scholes2_black_scholes2_Block_crit_edge111_proc_U0_ap_ready;
    p_channel36_write <= ap_chn_write_black_scholes2_mult2_12_U0_p_channel36;
    p_channel37_U_ap_dummy_ce <= ap_const_logic_1;
    p_channel37_din <= black_scholes2_mult2_11_1_U0_return_r;
    p_channel37_read <= black_scholes2_mult2_11_2_U0_ap_ready;
    p_channel37_write <= ap_chn_write_black_scholes2_mult2_11_1_U0_p_channel37;
    p_channel38_U_ap_dummy_ce <= ap_const_logic_1;
    p_channel38_din <= black_scholes2_sqrt1_U0_return_r;
    p_channel38_read <= black_scholes2_mult2_11_2_U0_ap_ready;
    p_channel38_write <= ap_chn_write_black_scholes2_sqrt1_U0_p_channel38;
    p_channel39_U_ap_dummy_ce <= ap_const_logic_1;
    p_channel39_din <= black_scholes2_mult2_11_2_U0_return_r;
    p_channel39_read <= black_scholes2_black_scholes2_Block_crit_edge111_proc_U0_ap_ready;
    p_channel39_write <= ap_chn_write_black_scholes2_mult2_11_2_U0_p_channel39;
    p_channel40_U_ap_dummy_ce <= ap_const_logic_1;
    p_channel40_din <= black_scholes2_expo11_U0_return_r;
    p_channel40_read <= black_scholes2_mult2_11_3_U0_ap_ready;
    p_channel40_write <= ap_chn_write_black_scholes2_expo11_U0_p_channel40;
    p_channel41_U_ap_dummy_ce <= ap_const_logic_1;
    p_channel41_din <= black_scholes2_mult2_11_3_U0_return_r;
    p_channel41_read <= black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_ready;
    p_channel41_write <= ap_chn_write_black_scholes2_mult2_11_3_U0_p_channel41;
    p_channel42_U_ap_dummy_ce <= ap_const_logic_1;
    p_channel42_din <= black_scholes2_expo12_U0_return_r;
    p_channel42_read <= black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_ready;
    p_channel42_write <= ap_chn_write_black_scholes2_expo12_U0_p_channel42;
    r_channel_channel_U_ap_dummy_ce <= ap_const_logic_1;
    r_channel_channel_din <= black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_r_out_din;
    r_channel_channel_read <= black_scholes2_black_scholes2_Block_crit_edge115_proc_U0_r_read;
    r_channel_channel_write <= black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_r_out_write;
    sigma_channel_channel_U_ap_dummy_ce <= ap_const_logic_1;
    sigma_channel_channel_din <= black_scholes2_mult2_11_U0_a_out_din;
    sigma_channel_channel_read <= black_scholes2_mult2_11_1_U0_a_read;
    sigma_channel_channel_write <= black_scholes2_mult2_11_U0_a_out_write;
    tmp3_loc_channel_U_ap_dummy_ce <= ap_const_logic_1;
    tmp3_loc_channel_din <= black_scholes2_black_scholes2_Block_crit_edge111_proc_U0_ap_return;
    tmp3_loc_channel_read <= black_scholes2_expo11_U0_ap_ready;
    tmp3_loc_channel_write <= ap_chn_write_black_scholes2_black_scholes2_Block_crit_edge111_proc_U0_tmp3_loc_channel;
    tmp4_1_loc_channel_U_ap_dummy_ce <= ap_const_logic_1;
    tmp4_1_loc_channel_din <= black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_ap_return;
    tmp4_1_loc_channel_read <= black_scholes2_black_scholes2_Block_crit_edge_proc_U0_ap_ready;
    tmp4_1_loc_channel_write <= ap_chn_write_black_scholes2_black_scholes2_Block_crit_edge117_proc_U0_tmp4_1_loc_channel;
    tmp_1_channel_U_ap_dummy_ce <= ap_const_logic_1;
    tmp_1_channel_din <= black_scholes2_div_1_U0_a_2;
    tmp_1_channel_read <= black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_ready;
    tmp_1_channel_write <= ap_chn_write_black_scholes2_div_1_U0_tmp_1_channel;
    tmp_2_loc_channel_U_ap_dummy_ce <= ap_const_logic_1;
    tmp_2_loc_channel_din <= black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_ap_return;
    tmp_2_loc_channel_read <= black_scholes2_mult2_12_U0_ap_ready;
    tmp_2_loc_channel_write <= ap_chn_write_black_scholes2_black_scholes2_Block_crit_edge14_proc_U0_tmp_2_loc_channel;
end behav;
